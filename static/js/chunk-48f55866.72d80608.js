(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-48f55866","chunk-c7770d26"],{"0e93":function(module,exports,__webpack_require__){(function(process,__dirname,Buffer){var Module;Module||(Module=("undefined"!==typeof Module?Module:null)||{});var moduleOverrides={};for(var key in Module)Module.hasOwnProperty(key)&&(moduleOverrides[key]=Module[key]);var ENVIRONMENT_IS_WEB="object"===typeof window,ENVIRONMENT_IS_WEB__CORDOVA=!(!ENVIRONMENT_IS_WEB||!window.cordova),ENVIRONMENT_IS_WORKER="function"===typeof importScripts,ENVIRONMENT_IS_NODE="object"===typeof process&&!0!==process.browser&&0==ENVIRONMENT_IS_WEB__CORDOVA&&0==ENVIRONMENT_IS_WORKER,ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(module["exports"]=Module,ENVIRONMENT_IS_NODE){Module["print"]||(Module["print"]=function(e){process["stdout"].write(e+"\n")}),Module["printErr"]||(Module["printErr"]=function(e){process["stderr"].write(e+"\n")});var nodeFS=__webpack_require__("f1ac"),nodePath=__webpack_require__("6266");Module["read"]=function(e,t){e=nodePath["normalize"](e);var r=nodeFS["readFileSync"](e);return r||e==nodePath["resolve"](e)||(e=path.join(__dirname,"..","src",e),r=nodeFS["readFileSync"](e)),r&&!t&&(r=r.toString()),r},Module["readBinary"]=function(e){return Module["read"](e,!0)},Module["load"]=function(e){globalEval(read(e))},Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/"),Module["arguments"]=process["argv"].slice(2)}else if(ENVIRONMENT_IS_SHELL)Module["print"]||(Module["print"]=print),"undefined"!=typeof printErr&&(Module["printErr"]=printErr),"undefined"!=typeof read?Module["read"]=read:Module["read"]=function(){throw"no read() available (jsc?)"},Module["readBinary"]=function(e){return read(e,"binary")},"undefined"!=typeof scriptArgs?Module["arguments"]=scriptArgs:"undefined"!=typeof arguments&&(Module["arguments"]=arguments),this["Module"]=Module;else{if(!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER)throw"Unknown runtime environment. Where are we?";if(Module["read"]=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},"undefined"!=typeof arguments&&(Module["arguments"]=arguments),"undefined"!==typeof console)Module["print"]||(Module["print"]=function(e){console.log(e)}),Module["printErr"]||(Module["printErr"]=function(e){console.log(e)});else{var TRY_USE_DUMP=!1;Module["print"]||(Module["print"]=TRY_USE_DUMP&&"undefined"!==typeof dump?function(e){dump(e)}:function(e){})}ENVIRONMENT_IS_WEB?window["Module"]=Module:Module["load"]=importScripts}function globalEval(e){eval.call(null,e)}for(var key in"undefined"==!Module["load"]&&Module["read"]&&(Module["load"]=function(e){globalEval(Module["read"](e))}),Module["print"]||(Module["print"]=function(){}),Module["printErr"]||(Module["printErr"]=Module["print"]),Module["arguments"]||(Module["arguments"]=[]),Module["thisProgram"]||(Module["thisProgram"]="./this.program"),Module.print=Module["print"],Module.printErr=Module["printErr"],Module["preRun"]=[],Module["postRun"]=[],moduleOverrides)moduleOverrides.hasOwnProperty(key)&&(Module[key]=moduleOverrides[key]);var Runtime={setTempRet0:function(e){tempRet0=e},getTempRet0:function(){return tempRet0},stackSave:function(){return STACKTOP},stackRestore:function(e){STACKTOP=e},forceAlign:function(e,t){return t=t||4,1==t?e:isNumber(e)&&isNumber(t)?Math.ceil(e/t)*t:isNumber(t)&&isPowerOfTwo(t)?"((("+e+")+"+(t-1)+")&"+-t+")":"Math.ceil(("+e+")/"+t+")*"+t},isNumberType:function(e){return e in Runtime.INT_TYPES||e in Runtime.FLOAT_TYPES},isPointerType:function(e){return"*"==e[e.length-1]},isStructType:function(e){return!isPointerType(e)&&(!!isArrayType(e)||(!!/<?\{ ?[^}]* ?\}>?/.test(e)||"%"==e[0]))},INT_TYPES:{i1:0,i8:0,i16:0,i32:0,i64:0},FLOAT_TYPES:{float:0,double:0},or64:function(e,t){var r=0|e|t,o=4294967296*(Math.round(e/4294967296)|Math.round(t/4294967296));return r+o},and64:function(e,t){var r=(0|e)&(0|t),o=4294967296*(Math.round(e/4294967296)&Math.round(t/4294967296));return r+o},xor64:function(e,t){var r=(0|e)^(0|t),o=4294967296*(Math.round(e/4294967296)^Math.round(t/4294967296));return r+o},getNativeTypeSize:function(e){switch(e){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:if("*"===e[e.length-1])return Runtime.QUANTUM_SIZE;if("i"===e[0]){var t=parseInt(e.substr(1));return assert(t%8===0),t/8}return 0}},getNativeFieldSize:function(e){return Math.max(Runtime.getNativeTypeSize(e),Runtime.QUANTUM_SIZE)},dedup:function(e,t){var r={};return t?e.filter((function(e){return!r[e[t]]&&(r[e[t]]=!0,!0)})):e.filter((function(e){return!r[e]&&(r[e]=!0,!0)}))},set:function(){for(var e="object"===typeof arguments[0]?arguments[0]:arguments,t={},r=0;r<e.length;r++)t[e[r]]=0;return t},STACK_ALIGN:8,getAlignSize:function(e,t,r){return r||"i64"!=e&&"double"!=e?e?Math.min(t||(e?Runtime.getNativeFieldSize(e):0),Runtime.QUANTUM_SIZE):Math.min(t,8):8},calculateStructAlignment:function(e){e.flatSize=0,e.alignSize=0;var t=[],r=-1;return e.flatIndexes=e.fields.map((function(o){var n,a;Runtime.isNumberType(o)||Runtime.isPointerType(o)?(n=Runtime.getNativeTypeSize(o),a=Runtime.getAlignSize(o,n)):Runtime.isStructType(o)?"0"===o[1]?(n=0,a=Types.types[o]?Runtime.getAlignSize(null,Types.types[o].alignSize):e.alignSize||QUANTUM_SIZE):(n=Types.types[o].flatSize,a=Runtime.getAlignSize(null,Types.types[o].alignSize)):"b"==o[0]?(n=0|o.substr(1),a=1):"<"===o[0]?n=a=Types.types[o].flatSize:"i"===o[0]?(n=a=parseInt(o.substr(1))/8,assert(n%1===0,"cannot handle non-byte-size field "+o)):assert(!1,"invalid type for calculateStructAlignment"),e.packed&&(a=1),e.alignSize=Math.max(e.alignSize,a);var i=Runtime.alignMemory(e.flatSize,a);return e.flatSize=i+n,r>=0&&t.push(i-r),r=i,i})),e.name_&&"["===e.name_[0]&&(e.flatSize=parseInt(e.name_.substr(1))*e.flatSize/2),e.flatSize=Runtime.alignMemory(e.flatSize,e.alignSize),0==t.length?e.flatFactor=e.flatSize:1==Runtime.dedup(t).length&&(e.flatFactor=t[0]),e.needsFlattening=1!=e.flatFactor,e.flatIndexes},generateStructInfo:function(e,t,r){var o;if(t){if(r=r||0,n=("undefined"===typeof Types?Runtime.typeInfo:Types.types)[t],!n)return null;if(n.fields.length!=e.length)return printErr("Number of named fields must match the type for "+t+": possibly duplicate struct names. Cannot return structInfo"),null;o=n.flatIndexes}else{var n={fields:e.map((function(e){return e[0]}))};o=Runtime.calculateStructAlignment(n)}var a={__size__:n.flatSize};return t?e.forEach((function(e,t){if("string"===typeof e)a[e]=o[t]+r;else{var i;for(var s in e)i=s;a[i]=Runtime.generateStructInfo(e[i],n.fields[t],o[t])}})):e.forEach((function(e,t){a[e[1]]=o[t]})),a},dynCall:function(e,t,r){return r&&r.length?(r.splice||(r=Array.prototype.slice.call(r)),r.splice(0,0,t),Module["dynCall_"+e].apply(null,r)):Module["dynCall_"+e].call(null,t)},functionPointers:[],addFunction:function(e){for(var t=0;t<Runtime.functionPointers.length;t++)if(!Runtime.functionPointers[t])return Runtime.functionPointers[t]=e,2*(1+t);throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."},removeFunction:function(e){Runtime.functionPointers[(e-2)/2]=null},getAsmConst:function(code,numArgs){Runtime.asmConstCache||(Runtime.asmConstCache={});var func=Runtime.asmConstCache[code];if(func)return func;for(var args=[],i=0;i<numArgs;i++)args.push(String.fromCharCode(36)+i);var source=Pointer_stringify(code);'"'===source[0]&&(source.indexOf('"',1)===source.length-1?source=source.substr(1,source.length-2):abort("invalid EM_ASM input |"+source+"|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)"));try{var evalled=eval("(function("+args.join(",")+"){ "+source+" })")}catch(e){throw Module.printErr("error in executing inline EM_ASM code: "+e+" on: \n\n"+source+"\n\nwith args |"+args+"| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)"),e}return Runtime.asmConstCache[code]=evalled},warnOnce:function(e){Runtime.warnOnce.shown||(Runtime.warnOnce.shown={}),Runtime.warnOnce.shown[e]||(Runtime.warnOnce.shown[e]=1,Module.printErr(e))},funcWrappers:{},getFuncWrapper:function(e,t){assert(t),Runtime.funcWrappers[t]||(Runtime.funcWrappers[t]={});var r=Runtime.funcWrappers[t];return r[e]||(r[e]=function(){return Runtime.dynCall(t,e,arguments)}),r[e]},UTF8Processor:function(){var e=[],t=0;this.processCChar=function(r){if(r&=255,0==e.length)return 0==(128&r)?String.fromCharCode(r):(e.push(r),t=192==(224&r)?1:224==(240&r)?2:3,"");if(t&&(e.push(r),t--,t>0))return"";var o,n=e[0],a=e[1],i=e[2],s=e[3];if(2==e.length)o=String.fromCharCode((31&n)<<6|63&a);else if(3==e.length)o=String.fromCharCode((15&n)<<12|(63&a)<<6|63&i);else{var u=(7&n)<<18|(63&a)<<12|(63&i)<<6|63&s;o=String.fromCharCode(Math.floor((u-65536)/1024)+55296,(u-65536)%1024+56320)}return e.length=0,o},this.processJSString=function(e){e=unescape(encodeURIComponent(e));for(var t=[],r=0;r<e.length;r++)t.push(e.charCodeAt(r));return t}},getCompilerSetting:function(e){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"},stackAlloc:function(e){var t=STACKTOP;return STACKTOP=STACKTOP+e|0,STACKTOP=STACKTOP+7&-8,t},staticAlloc:function(e){var t=STATICTOP;return STATICTOP=STATICTOP+e|0,STATICTOP=STATICTOP+7&-8,t},dynamicAlloc:function(e){var t=DYNAMICTOP;return DYNAMICTOP=DYNAMICTOP+e|0,DYNAMICTOP=DYNAMICTOP+7&-8,DYNAMICTOP>=TOTAL_MEMORY&&enlargeMemory(),t},alignMemory:function(e,t){var r=e=Math.ceil(e/(t||8))*(t||8);return r},makeBigInt:function(e,t,r){var o=r?+(e>>>0)+4294967296*+(t>>>0):+(e>>>0)+4294967296*+(0|t);return o},GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};function getSafeHeapType(e,t){switch(e){case 1:return"i8";case 2:return"i16";case 4:return t?"float":"i32";case 8:return"double";default:assert(0)}}function SAFE_HEAP_STORE(e,t,r,o){e<=0&&abort("segmentation fault storing "+r+" bytes to address "+e),e%r!==0&&abort("alignment error storing to address "+e+", which was expected to be aligned to a multiple of "+r),e+r>Math.max(DYNAMICTOP,STATICTOP)&&abort("segmentation fault, exceeded the top of the available heap when storing "+r+" bytes to address "+e+". STATICTOP="+STATICTOP+", DYNAMICTOP="+DYNAMICTOP),assert(DYNAMICTOP<=TOTAL_MEMORY),setValue(e,t,getSafeHeapType(r,o),1)}function SAFE_HEAP_LOAD(e,t,r,o){e<=0&&abort("segmentation fault loading "+t+" bytes from address "+e),e%t!==0&&abort("alignment error loading from address "+e+", which was expected to be aligned to a multiple of "+t),e+t>Math.max(DYNAMICTOP,STATICTOP)&&abort("segmentation fault, exceeded the top of the available heap when loading "+t+" bytes from address "+e+". STATICTOP="+STATICTOP+", DYNAMICTOP="+DYNAMICTOP),assert(DYNAMICTOP<=TOTAL_MEMORY);var n=getSafeHeapType(t,r),a=getValue(e,n,1);return o&&(a=unSign(a,parseInt(n.substr(1)),1)),a}function SAFE_FT_MASK(e,t){var r=e&t;return r!==e&&abort("Function table mask error: function pointer is "+e+" which is masked by "+t+", the likely cause of this is that the function pointer is being called by the wrong type."),r}Module["Runtime"]=Runtime;var __THREW__=0,ABORT=!1,EXITSTATUS=0,undef=0,tempValue,tempInt,tempBigInt,tempInt2,tempBigInt2,tempPair,tempBigIntI,tempBigIntR,tempBigIntS,tempBigIntP,tempBigIntD,tempDouble,tempFloat,tempI64,tempI64b,tempRet0,tempRet1,tempRet2,tempRet3,tempRet4,tempRet5,tempRet6,tempRet7,tempRet8,tempRet9;function assert(e,t){e||abort("Assertion failed: "+t)}var globalScope=this,cwrap,ccall;function getCFunc(ident){var func=Module["_"+ident];if(!func)try{func=eval("_"+ident)}catch(e){}return assert(func,"Cannot call unknown function "+ident+" (perhaps LLVM optimizations or closure removed it?)"),func}function setValue(e,t,r,o){if(r=r||"i8","*"===r.charAt(r.length-1)&&(r="i32"),o)switch(r){case"i1":HEAP8[e>>0]=t;break;case"i8":HEAP8[e>>0]=t;break;case"i16":HEAP16[e>>1]=t;break;case"i32":HEAP32[e>>2]=t;break;case"i64":tempI64=[t>>>0,(tempDouble=t,+Math_abs(tempDouble)>=1?tempDouble>0?(0|Math_min(+Math_floor(tempDouble/4294967296),4294967295))>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[e>>2]=tempI64[0],HEAP32[e+4>>2]=tempI64[1];break;case"float":HEAPF32[e>>2]=t;break;case"double":HEAPF64[e>>3]=t;break;default:abort("invalid type for setValue: "+r)}else switch(r){case"i1":SAFE_HEAP_STORE(0|e,0|t,1,0);break;case"i8":SAFE_HEAP_STORE(0|e,0|t,1,0);break;case"i16":SAFE_HEAP_STORE(0|e,0|t,2,0);break;case"i32":SAFE_HEAP_STORE(0|e,0|t,4,0);break;case"i64":tempI64=[t>>>0,(tempDouble=t,+Math_abs(tempDouble)>=1?tempDouble>0?(0|Math_min(+Math_floor(tempDouble/4294967296),4294967295))>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],SAFE_HEAP_STORE(0|e,0|tempI64[0],4,0),SAFE_HEAP_STORE(e+4|0,0|tempI64[1],4,0);break;case"float":SAFE_HEAP_STORE(0|e,+t,4,1);break;case"double":SAFE_HEAP_STORE(0|e,+t,8,1);break;default:abort("invalid type for setValue: "+r)}}function getValue(e,t,r){if(t=t||"i8","*"===t.charAt(t.length-1)&&(t="i32"),r)switch(t){case"i1":return HEAP8[e>>0];case"i8":return HEAP8[e>>0];case"i16":return HEAP16[e>>1];case"i32":return HEAP32[e>>2];case"i64":return HEAP32[e>>2];case"float":return HEAPF32[e>>2];case"double":return HEAPF64[e>>3];default:abort("invalid type for setValue: "+t)}else switch(t){case"i1":return 0|SAFE_HEAP_LOAD(0|e,1,0,0);case"i8":return 0|SAFE_HEAP_LOAD(0|e,1,0,0);case"i16":return 0|SAFE_HEAP_LOAD(0|e,2,0,0);case"i32":return 0|SAFE_HEAP_LOAD(0|e,4,0,0);case"i64":return 0|SAFE_HEAP_LOAD(0|e,8,0,0);case"float":return+SAFE_HEAP_LOAD(0|e,4,1,0);case"double":return+SAFE_HEAP_LOAD(0|e,8,1,0);default:abort("invalid type for setValue: "+t)}return null}(function(){var stack=0,JSfuncs={stackSave:function(){stack=Runtime.stackSave()},stackRestore:function(){Runtime.stackRestore(stack)},arrayToC:function(e){var t=Runtime.stackAlloc(e.length);return writeArrayToMemory(e,t),t},stringToC:function(e){var t=0;return null!==e&&void 0!==e&&0!==e&&(t=Runtime.stackAlloc(e.length+1),writeStringToMemory(e,t)),t}},toC={string:JSfuncs["stringToC"],array:JSfuncs["arrayToC"]};ccall=function(e,t,r,o){var n=getCFunc(e),a=[];if(o)for(var i=0;i<o.length;i++){var s=toC[r[i]];s?(0===stack&&(stack=Runtime.stackSave()),a[i]=s(o[i])):a[i]=o[i]}var u=n.apply(null,a);return"string"===t&&(u=Pointer_stringify(u)),0!==stack&&JSfuncs["stackRestore"](),u};var sourceRegex=/^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;function parseJSFunc(e){var t=e.toString().match(sourceRegex).slice(1);return{arguments:t[0],body:t[1],returnValue:t[2]}}var JSsource={};for(var fun in JSfuncs)JSfuncs.hasOwnProperty(fun)&&(JSsource[fun]=parseJSFunc(JSfuncs[fun]));cwrap=function cwrap(ident,returnType,argTypes){argTypes=argTypes||[];var cfunc=getCFunc(ident),numericArgs=argTypes.every((function(e){return"number"===e})),numericRet="string"!==returnType;if(numericRet&&numericArgs)return cfunc;var argNames=argTypes.map((function(e,t){return"$"+t})),funcstr="(function("+argNames.join(",")+") {",nargs=argTypes.length;if(!numericArgs){funcstr+=JSsource["stackSave"].body+";";for(var i=0;i<nargs;i++){var arg=argNames[i],type=argTypes[i];if("number"!==type){var convertCode=JSsource[type+"ToC"];funcstr+="var "+convertCode.arguments+" = "+arg+";",funcstr+=convertCode.body+";",funcstr+=arg+"="+convertCode.returnValue+";"}}}var cfuncname=parseJSFunc((function(){return cfunc})).returnValue;if(funcstr+="var ret = "+cfuncname+"("+argNames.join(",")+");",!numericRet){var strgfy=parseJSFunc((function(){return Pointer_stringify})).returnValue;funcstr+="ret = "+strgfy+"(ret);"}return numericArgs||(funcstr+=JSsource["stackRestore"].body+";"),funcstr+="return ret})",eval(funcstr)}})(),Module["cwrap"]=cwrap,Module["ccall"]=ccall,Module["setValue"]=setValue,Module["getValue"]=getValue;var ALLOC_NORMAL=0,ALLOC_STACK=1,ALLOC_STATIC=2,ALLOC_DYNAMIC=3,ALLOC_NONE=4;function allocate(e,t,r,o){var n,a;"number"===typeof e?(n=!0,a=e):(n=!1,a=e.length);var i,s="string"===typeof t?t:null;if(i=r==ALLOC_NONE?o:[_malloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][void 0===r?ALLOC_STATIC:r](Math.max(a,s?1:t.length)),n){var u;o=i;for(assert(0==(3&i)),u=i+(-4&a);o<u;o+=4)HEAP32[o>>2]=0;u=i+a;while(o<u)HEAP8[o++>>0]=0;return i}if("i8"===s)return e.subarray||e.slice?HEAPU8.set(e,i):HEAPU8.set(new Uint8Array(e),i),i;var l,c,d,f=0;while(f<a){var h=e[f];"function"===typeof h&&(h=Runtime.getFunctionIndex(h)),l=s||t[f],0!==l?("i64"==l&&(l="i32"),setValue(i+f,h,l),d!==l&&(c=Runtime.getNativeTypeSize(l),d=l),f+=c):f++}return i}function Pointer_stringify(e,t){var r,o=!1,n=0;while(1){if(r=0|SAFE_HEAP_LOAD(e+n|0,1,0,1),r>=128)o=!0;else if(0==r&&!t)break;if(n++,t&&n==t)break}t||(t=n);var a="";if(!o){var i,s=1024;while(t>0)i=String.fromCharCode.apply(String,HEAPU8.subarray(e,e+Math.min(t,s))),a=a?a+i:i,e+=s,t-=s;return a}var u=new Runtime.UTF8Processor;for(n=0;n<t;n++)r=0|SAFE_HEAP_LOAD(e+n|0,1,0,1),a+=u.processCChar(r);return a}function UTF16ToString(e){var t=0,r="";while(1){var o=0|SAFE_HEAP_LOAD(e+2*t|0,2,0,0);if(0==o)return r;++t,r+=String.fromCharCode(o)}}function stringToUTF16(e,t){for(var r=0;r<e.length;++r){var o=e.charCodeAt(r);SAFE_HEAP_STORE(t+2*r|0,0|o,2,0)}SAFE_HEAP_STORE(t+2*e.length|0,0,2,0)}function UTF32ToString(e){var t=0,r="";while(1){var o=0|SAFE_HEAP_LOAD(e+4*t|0,4,0,0);if(0==o)return r;if(++t,o>=65536){var n=o-65536;r+=String.fromCharCode(55296|n>>10,56320|1023&n)}else r+=String.fromCharCode(o)}}function stringToUTF32(e,t){for(var r=0,o=0;o<e.length;++o){var n=e.charCodeAt(o);if(n>=55296&&n<=57343){var a=e.charCodeAt(++o);n=65536+((1023&n)<<10)|1023&a}SAFE_HEAP_STORE(t+4*r|0,0|n,4,0),++r}SAFE_HEAP_STORE(t+4*r|0,0,4,0)}function demangle(e){var t=!!Module["___cxa_demangle"];if(t)try{var r=_malloc(e.length);writeStringToMemory(e.substr(1),r);var o=_malloc(4),n=Module["___cxa_demangle"](r,0,0,o);if(0===getValue(o,"i32")&&n)return Pointer_stringify(n)}catch(f){}finally{r&&_free(r),o&&_free(o),n&&_free(n)}var a=3,i={v:"void",b:"bool",c:"char",s:"short",i:"int",l:"long",f:"float",d:"double",w:"wchar_t",a:"signed char",h:"unsigned char",t:"unsigned short",j:"unsigned int",m:"unsigned long",x:"long long",y:"unsigned long long",z:"..."},s=[],u=!0;function l(){a++,"K"===e[a]&&a++;var t=[];while("E"!==e[a])if("S"!==e[a])if("C"!==e[a]){var r=parseInt(e.substr(a)),o=r.toString().length;if(!r||!o){a--;break}var n=e.substr(a+o,r);t.push(n),s.push(n),a+=o+r}else t.push(t[t.length-1]),a+=2;else{a++;var i=e.indexOf("_",a),u=e.substring(a,i)||0;t.push(s[u]||"?"),a=i+1}return a++,t}function c(t,r,o){r=r||1/0;var n,s="",d=[];function f(){return"("+d.join(", ")+")"}if("N"===e[a]){if(n=l().join("::"),r--,0===r)return t?[n]:n}else{("K"===e[a]||u&&"L"===e[a])&&a++;var h=parseInt(e.substr(a));if(h){var m=h.toString().length;n=e.substr(a+m,h),a+=m+h}}if(u=!1,"I"===e[a]){a++;var p=c(!0),g=c(!0,1,!0);s+=g[0]+" "+n+"<"+p.join(", ")+">"}else s=n;e:while(a<e.length&&r-- >0){var _=e[a++];if(_ in i)d.push(i[_]);else switch(_){case"P":d.push(c(!0,1,!0)[0]+"*");break;case"R":d.push(c(!0,1,!0)[0]+"&");break;case"L":a++;var v=e.indexOf("E",a);h=v-a;d.push(e.substr(a,h)),a+=h+2;break;case"A":h=parseInt(e.substr(a));if(a+=h.toString().length,"_"!==e[a])throw"?";a++,d.push(c(!0,1,!0)[0]+" ["+h+"]");break;case"E":break e;default:s+="?"+_;break e}}return o||1!==d.length||"void"!==d[0]||(d=[]),t?(s&&d.push(s+"?"),d):s+f()}var d=e;try{if("Object._main"==e||"_main"==e)return"main()";if("number"===typeof e&&(e=Pointer_stringify(e)),"_"!==e[0])return e;if("_"!==e[1])return e;if("Z"!==e[2])return e;switch(e[3]){case"n":return"operator new()";case"d":return"operator delete()"}d=c()}catch(f){d+="?"}return d.indexOf("?")>=0&&!t&&Runtime.warnOnce("warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling"),d}function demangleAll(e){return e.replace(/__Z[\w\d_]+/g,(function(e){var t=demangle(e);return e===t?e:e+" ["+t+"]"}))}function jsStackTrace(){var e=new Error;if(!e.stack){try{throw new Error(0)}catch(t){e=t}if(!e.stack)return"(no stack trace available)"}return e.stack.toString()}function stackTrace(){return demangleAll(jsStackTrace())}Module["ALLOC_NORMAL"]=ALLOC_NORMAL,Module["ALLOC_STACK"]=ALLOC_STACK,Module["ALLOC_STATIC"]=ALLOC_STATIC,Module["ALLOC_DYNAMIC"]=ALLOC_DYNAMIC,Module["ALLOC_NONE"]=ALLOC_NONE,Module["allocate"]=allocate,Module["Pointer_stringify"]=Pointer_stringify,Module["UTF16ToString"]=UTF16ToString,Module["stringToUTF16"]=stringToUTF16,Module["UTF32ToString"]=UTF32ToString,Module["stringToUTF32"]=stringToUTF32,Module["stackTrace"]=stackTrace;var PAGE_SIZE=4096,HEAP,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function alignMemoryPage(e){return e+4095&-4096}var STATIC_BASE=0,STATICTOP=0,staticSealed=!1,STACK_BASE=0,STACKTOP=0,STACK_MAX=0,DYNAMIC_BASE=0,DYNAMICTOP=0;function enlargeMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value "+TOTAL_MEMORY+", (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.")}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880,TOTAL_MEMORY=Module["TOTAL_MEMORY"]||16777216,FAST_MEMORY=Module["FAST_MEMORY"]||2097152,totalMemory=4096;while(totalMemory<TOTAL_MEMORY||totalMemory<2*TOTAL_STACK)totalMemory<16777216?totalMemory*=2:totalMemory+=16777216;totalMemory!==TOTAL_MEMORY&&(Module.printErr("increasing TOTAL_MEMORY to "+totalMemory+" to be more reasonable"),TOTAL_MEMORY=totalMemory),assert("undefined"!==typeof Int32Array&&"undefined"!==typeof Float64Array&&!!new Int32Array(1)["subarray"]&&!!new Int32Array(1)["set"],"JS engine does not provide full typed array support");var buffer=new ArrayBuffer(TOTAL_MEMORY);function callRuntimeCallbacks(e){while(e.length>0){var t=e.shift();if("function"!=typeof t){var r=t.func;"number"===typeof r?void 0===t.arg?Runtime.dynCall("v",r):Runtime.dynCall("vi",r,[t.arg]):r(void 0===t.arg?null:t.arg)}else t()}}HEAP8=new Int8Array(buffer),HEAP16=new Int16Array(buffer),HEAP32=new Int32Array(buffer),HEAPU8=new Uint8Array(buffer),HEAPU16=new Uint16Array(buffer),HEAPU32=new Uint32Array(buffer),HEAPF32=new Float32Array(buffer),HEAPF64=new Float64Array(buffer),HEAP32[0]=255,assert(255===HEAPU8[0]&&0===HEAPU8[3],"Typed arrays 2 must be run on a little-endian system"),Module["HEAP"]=HEAP,Module["HEAP8"]=HEAP8,Module["HEAP16"]=HEAP16,Module["HEAP32"]=HEAP32,Module["HEAPU8"]=HEAPU8,Module["HEAPU16"]=HEAPU16,Module["HEAPU32"]=HEAPU32,Module["HEAPF32"]=HEAPF32,Module["HEAPF64"]=HEAPF64;var __ATPRERUN__=[],__ATINIT__=[],__ATMAIN__=[],__ATEXIT__=[],__ATPOSTRUN__=[],runtimeInitialized=!1,runtimeExited=!1;function preRun(){if(Module["preRun"]){"function"==typeof Module["preRun"]&&(Module["preRun"]=[Module["preRun"]]);while(Module["preRun"].length)addOnPreRun(Module["preRun"].shift())}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){runtimeInitialized||(runtimeInitialized=!0,callRuntimeCallbacks(__ATINIT__))}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__),runtimeExited=!0}function postRun(){if(Module["postRun"]){"function"==typeof Module["postRun"]&&(Module["postRun"]=[Module["postRun"]]);while(Module["postRun"].length)addOnPostRun(Module["postRun"].shift())}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(e){__ATPRERUN__.unshift(e)}function addOnInit(e){__ATINIT__.unshift(e)}function addOnPreMain(e){__ATMAIN__.unshift(e)}function addOnExit(e){__ATEXIT__.unshift(e)}function addOnPostRun(e){__ATPOSTRUN__.unshift(e)}function intArrayFromString(e,t,r){var o=(new Runtime.UTF8Processor).processJSString(e);return r&&(o.length=r),t||o.push(0),o}function intArrayToString(e){for(var t=[],r=0;r<e.length;r++){var o=e[r];o>255&&(o&=255),t.push(String.fromCharCode(o))}return t.join("")}function writeStringToMemory(e,t,r){var o=intArrayFromString(e,r),n=0;while(n<o.length){var a=o[n];SAFE_HEAP_STORE(t+n|0,0|a,1,0),n+=1}}function writeArrayToMemory(e,t){for(var r=0;r<e.length;r++)SAFE_HEAP_STORE(t+r|0,0|e[r],1,0)}function writeAsciiToMemory(e,t,r){for(var o=0;o<e.length;o++)SAFE_HEAP_STORE(t+o|0,0|e.charCodeAt(o),1,0);r||SAFE_HEAP_STORE(t+e.length|0,0,1,0)}function unSign(e,t,r){return e>=0?e:t<=32?2*Math.abs(1<<t-1)+e:Math.pow(2,t)+e}function reSign(e,t,r){if(e<=0)return e;var o=t<=32?Math.abs(1<<t-1):Math.pow(2,t-1);return e>=o&&(t<=32||e>o)&&(e=-2*o+e),e}Module["addOnPreRun"]=Module.addOnPreRun=addOnPreRun,Module["addOnInit"]=Module.addOnInit=addOnInit,Module["addOnPreMain"]=Module.addOnPreMain=addOnPreMain,Module["addOnExit"]=Module.addOnExit=addOnExit,Module["addOnPostRun"]=Module.addOnPostRun=addOnPostRun,Module["intArrayFromString"]=intArrayFromString,Module["intArrayToString"]=intArrayToString,Module["writeStringToMemory"]=writeStringToMemory,Module["writeArrayToMemory"]=writeArrayToMemory,Module["writeAsciiToMemory"]=writeAsciiToMemory,Math["imul"]&&-5===Math["imul"](4294967295,5)||(Math["imul"]=function(e,t){var r=e>>>16,o=65535&e,n=t>>>16,a=65535&t;return o*a+(r*a+o*n<<16)|0}),Math.imul=Math["imul"];var Math_abs=Math.abs,Math_cos=Math.cos,Math_sin=Math.sin,Math_tan=Math.tan,Math_acos=Math.acos,Math_asin=Math.asin,Math_atan=Math.atan,Math_atan2=Math.atan2,Math_exp=Math.exp,Math_log=Math.log,Math_sqrt=Math.sqrt,Math_ceil=Math.ceil,Math_floor=Math.floor,Math_pow=Math.pow,Math_imul=Math.imul,Math_fround=Math.fround,Math_min=Math.min,runDependencies=0,runDependencyWatcher=null,dependenciesFulfilled=null;function addRunDependency(e){runDependencies++,Module["monitorRunDependencies"]&&Module["monitorRunDependencies"](runDependencies)}function removeRunDependency(e){if(runDependencies--,Module["monitorRunDependencies"]&&Module["monitorRunDependencies"](runDependencies),0==runDependencies&&(null!==runDependencyWatcher&&(clearInterval(runDependencyWatcher),runDependencyWatcher=null),dependenciesFulfilled)){var t=dependenciesFulfilled;dependenciesFulfilled=null,t()}}Module["addRunDependency"]=addRunDependency,Module["removeRunDependency"]=removeRunDependency,Module["preloadedImages"]={},Module["preloadedAudios"]={};var memoryInitializer=null;STATIC_BASE=8,STATICTOP=STATIC_BASE+Runtime.alignMemory(32659),__ATINIT__.push(),allocate([40,102,101,95,97,100,100,40,121,44,32,119,44,32,120,41,44,32,33,102,101,95,105,115,110,111,110,122,101,114,111,40,121,41,41,0,0,0,0,0,47,104,111,109,101,47,108,117,99,97,115,47,116,104,105,110,45,119,97,108,108,101,116,47,99,114,121,112,116,111,45,111,112,115,46,99,0,0,0,0,103,101,95,102,114,111,109,102,101,95,102,114,111,109,98,121,116,101,115,95,118,97,114,116,105,109,101,0,0,0,0,0,102,101,95,105,115,110,111,110,122,101,114,111,40,114,45,62,88,41,0,0,0,0,0,0,33,102,101,95,105,115,110,111,110,122,101,114,111,40,99,104,101,99,107,95,118,41,0,0,40,40,40,98,32,45,32,49,41,32,38,32,126,98,41,32,124,32,40,40,98,32,45,32,50,41,32,38,32,126,40,98,32,45,32,49,41,41,41,32,61,61,32,40,117,110,115,105,103,110,101,100,32,105,110,116,41,32,45,49,0,0,0,0,102,101,95,99,109,111,118,0,182,120,89,255,133,114,211,0,189,110,21,255,15,10,106,0,41,192,1,0,152,232,121,255,188,60,160,255,153,113,206,255,0,183,226,254,180,13,72,255,176,160,14,254,211,201,134,255,158,24,143,0,127,105,53,0,96,12,189,0,167,215,251,255,159,76,128,254,106,101,225,255,30,252,4,0,146,12,174,0,89,241,178,254,10,229,166,255,123,221,42,254,30,20,212,0,82,128,3,0,48,209,243,0,119,121,64,255,50,227,156,255,0,110,197,1,103,27,144,0,133,59,140,1,189,241,36,255,248,37,195,1,96,220,55,0,183,76,62,255,195,66,61,0,50,76,164,1,225,164,76,255,76,61,163,255,117,62,31,0,81,145,64,255,118,65,14,0,162,115,214,255,6,138,46,0,124,230,244,255,10,138,143,0,52,26,194,0,184,244,76,0,129,143,41,1,190,244,19,255,123,170,122,255,98,129,68,0,121,213,147,0,86,101,30,255,161,103,155,0,140,89,67,255,239,229,190,1,67,11,181,0,198,240,137,254,238,69,188,255,234,113,60,255,37,255,57,255,69,178,182,254,128,208,179,0,118,26,125,254,3,7,214,255,241,50,77,255,85,203,197,255,211,135,250,255,25,48,100,255,187,213,180,254,17,88,105,0,83,209,158,1,5,115,98,0,4,174,60,254,171,55,110,255,217,181,17,255,20,188,170,0,146,156,102,254,87,214,174,255,114,122,155,1,233,44,170,0,127,8,239,1,214,236,234,0,175,5,219,0,49,106,61,255,6,66,208,255,2,106,110,255,81,234,19,255,215,107,192,255,67,151,238,0,19,42,108,255,229,85,113,1,50,68,135,255,17,106,9,0,50,103,1,255,80,1,168,1,35,152,30,255,16,168,185,1,56,89,232,255,101,210,252,0,41,250,71,0,204,170,79,255,14,46,239,255,80,77,239,0,189,214,75,255,17,141,249,0,38,80,76,255,190,85,117,0,86,228,170,0,156,216,208,1,195,207,164,255,150,66,76,255,175,225,16,255,141,80,98,1,76,219,242,0,198,162,114,0,46,218,152,0,155,43,241,254,155,160,104,255,178,9,252,254,100,110,212,0,14,5,167,0,233,239,163,255,28,151,157,1,101,146,10,255,254,158,70,254,71,249,228,0,88,30,50,0,68,58,160,255,191,24,104,1,129,66,129,255,192,50,85,255,8,179,138,255,38,250,201,0,115,80,160,0,131,230,113,0,125,88,147,0,90,68,199,0,253,76,158,0,28,255,118,0,113,250,254,0,66,75,46,0,230,218,43,0,229,120,186,1,148,68,43,0,136,124,238,1,187,107,197,255,84,53,246,255,51,116,254,255,51,187,165,0,2,17,175,0,66,84,160,1,247,58,30,0,35,65,53,254,69,236,191,0,45,134,245,1,163,123,221,0,32,110,20,255,52,23,165,0,186,214,71,0,233,176,96,0,242,239,54,1,57,89,138,0,83,0,84,255,136,160,100,0,92,142,120,254,104,124,190,0,181,177,62,255,250,41,85,0,152,130,42,1,96,252,246,0,151,151,63,254,239,133,62,0,32,56,156,0,45,167,189,255,142,133,179,1,131,86,211,0,187,179,150,254,250,170,14,255,68,113,21,255,222,186,59,255,66,7,241,1,69,6,72,0,86,156,108,254,55,167,89,0,109,52,219,254,13,176,23,255,196,44,106,255,239,149,71,255,164,140,125,255,159,173,1,0,51,41,231,0,145,62,33,0,138,111,93,1,185,83,69,0,144,115,46,0,97,151,16,255,24,228,26,0,49,217,226,0,113,75,234,254,193,153,12,255,182,48,96,255,14,13,26,0,128,195,249,254,69,193,59,0,132,37,81,254,125,106,60,0,214,240,169,1,164,227,66,0,210,163,78,0,37,52,151,0,99,77,26,0,238,156,213,255,213,192,209,1,73,46,84,0,20,65,41,1,54,206,79,0,201,131,146,254,170,111,24,255,177,33,50,254,171,38,203,255,78,247,116,0,209,221,153,0,133,128,178,1,58,44,25,0,201,39,59,1,189,19,252,0,49,229,210,1,117,187,117,0,181,179,184,1,0,114,219,0,48,94,147,0,245,41,56,0,125,13,204,254,244,173,119,0,44,221,32,254,84,234,20,0,249,160,198,1,236,126,234,255,143,62,221,0,129,89,214,255,55,139,5,254,68,20,191,255,14,204,178,1,35,195,217,0,47,51,206,1,38,246,165,0,206,27,6,254,158,87,36,0,217,52,146,255,125,123,215,255,85,60,31,255,171,13,7,0,218,245,88,254,252,35,60,0,55,214,160,255,133,101,56,0,224,32,19,254,147,64,234,0,26,145,162,1,114,118,125,0,248,252,250,0,101,94,196,255,198,141,226,254,51,42,182,0,135,12,9,254,109,172,210,255,197,236,194,1,241,65,154,0,48,156,47,255,153,67,55,255,218,165,34,254,74,180,179,0,218,66,71,1,88,122,99,0,212,181,219,255,92,42,231,255,239,0,154,0,245,77,183,255,94,81,170,1,18,213,216,0,171,93,71,0,52,94,248,0,18,151,161,254,197,209,66,255,174,244,15,254,162,48,183,0,49,61,240,254,182,93,195,0,199,228,6,1,200,5,17,255,137,45,237,255,108,148,4,0,90,79,237,255,39,63,77,255,53,82,207,1,142,22,118,255,101,232,18,1,92,26,67,0,5,200,88,255,33,168,138,255,149,225,72,0,2,209,27,255,44,245,168,1,220,237,17,255,30,211,105,254,141,238,221,0,128,80,245,254,111,254,14,0,222,95,190,1,223,9,241,0,146,76,212,255,108,205,104,255,63,117,153,0,144,69,48,0,35,228,111,0,192,33,193,255,112,214,190,254,115,152,151,0,23,102,88,0,51,74,248,0,226,199,143,254,204,162,101,255,208,97,189,1,245,104,18,0,230,246,30,255,23,148,69,0,110,88,52,254,226,181,89,255,208,47,90,254,114,161,80,255,33,116,248,0,179,152,87,255,69,144,177,1,88,238,26,255,58,32,113,1,1,77,69,0,59,121,52,255,152,238,83,0,52,8,193,0,231,39,233,255,199,34,138,0,222,68,173,0,91,57,242,254,220,210,127,255,192,7,246,254,151,35,187,0,195,236,165,0,111,93,206,0,212,247,133,1,154,133,209,255,155,231,10,0,64,78,38,0,122,249,100,1,30,19,97,255,62,91,249,1,248,133,77,0,197,63,168,254,116,10,82,0,184,236,113,254,212,203,194,255,61,100,252,254,36,5,202,255,119,91,153,255,129,79,29,0,103,103,171,254,237,215,111,255,216,53,69,0,239,240,23,0,194,149,221,255,38,225,222,0,232,255,180,254,118,82,133,255,57,209,177,1,139,232,133,0,158,176,46,254,194,115,46,0,88,247,229,1,28,103,191,0,221,222,175,254,149,235,44,0,151,228,25,254,218,105,103,0,142,85,210,0,149,129,190,255,213,65,94,254,117,134,224,255,82,198,117,0,157,221,220,0,163,101,36,0,197,114,37,0,104,172,166,254,11,182,0,0,81,72,188,255,97,188,16,255,69,6,10,0,199,147,145,255,8,9,115,1,65,214,175,255,217,173,209,0,80,127,166,0,247,229,4,254,167,183,124,255,90,28,204,254,175,59,240,255,11,41,248,1,108,40,51,255,144,177,195,254,150,250,126,0,138,91,65,1,120,60,222,255,245,193,239,0,29,214,189,255,128,2,25,0,80,154,162,0,77,220,107,1,234,205,74,255,54,166,103,255,116,72,9,0,228,94,47,255,30,200,25,255,35,214,89,255,61,176,140,255,83,226,163,255,75,130,172,0,128,38,17,0,95,137,152,255,215,124,159,1,79,93,0,0,148,82,157,254,195,130,251,255,40,202,76,255,251,126,224,0,157,99,62,254,207,7,225,255,96,68,195,0,140,186,157,255,131,19,231,255,42,128,254,0,52,219,61,254,102,203,72,0,141,7,11,255,186,164,213,0,31,122,119,0,133,242,145,0,208,252,232,255,91,213,182,255,143,4,250,254,249,215,74,0,165,30,111,1,171,9,223,0,229,123,34,1,92,130,26,255,77,155,45,1,195,139,28,255,59,224,78,0,136,17,247,0,108,121,32,0,79,250,189,255,96,227,252,254,38,241,62,0,62,174,125,255,155,111,93,255,10,230,206,1,97,197,40,255,0,49,57,254,65,250,13,0,18,251,150,255,220,109,210,255,5,174,166,254,44,129,189,0,235,35,147,255,37,247,141,255,72,141,4,255,103,107,255,0,247,90,4,0,53,44,42,0,2,30,240,0,4,59,63,0,88,78,36,0,113,167,180,0,190,71,193,255,199,158,164,255,58,8,172,0,77,33,12,0,65,63,3,0,153,77,33,255,172,254,102,1,228,221,4,255,87,30,254,1,146,41,86,255,138,204,239,254,108,141,17,255,187,242,135,0,210,208,127,0,68,45,14,254,73,96,62,0,81,60,24,255,170,6,36,255,3,249,26,0,35,213,109,0,22,129,54,255,21,35,225,255,234,61,56,255,58,217,6,0,143,124,88,0,236,126,66,0,209,38,183,255,34,238,6,255,174,145,102,0,95,22,211,0,196,15,153,254,46,84,232,255,117,34,146,1,231,250,74,255,27,134,100,1,92,187,195,255,170,198,112,0,120,28,42,0,209,70,67,0,29,81,31,0,29,168,100,1,169,173,160,0,107,35,117,0,62,96,59,255,81,12,69,1,135,239,190,255,220,252,18,0,163,220,58,255,137,137,188,255,83,102,109,0,96,6,76,0,234,222,210,255,185,174,205,1,60,158,213,255,13,241,214,0,172,129,140,0,93,104,242,0,192,156,251,0,43,117,30,0,225,81,158,0,127,232,218,0,226,28,203,0,233,27,151,255,117,43,5,255,242,14,47,255,33,20,6,0,137,251,44,254,27,31,245,255,183,214,125,254,40,121,149,0,186,158,213,255,89,8,227,0,69,88,0,254,203,135,225,0,201,174,203,0,147,71,184,0,18,121,41,254,94,5,78,0,224,214,240,254,36,5,180,0,251,135,231,1,163,138,212,0,210,249,116,254,88,129,187,0,19,8,49,254,62,14,144,255,159,76,211,0,214,51,82,0,109,117,228,254,103,223,203,255,75,252,15,1,154,71,220,255,23,13,91,1,141,168,96,255,181,182,133,0,250,51,55,0,234,234,212,254,175,63,158,0,39,240,52,1,158,189,36,255,213,40,85,1,32,180,247,255,19,102,26,1,84,24,97,255,69,21,222,0,148,139,122,255,220,213,235,1,232,203,255,0,121,57,147,0,227,7,154,0,53,22,147,1,72,1,225,0,82,134,48,254,83,60,157,255,145,72,169,0,34,103,239,0,198,233,47,0,116,19,4,255,184,106,9,255,183,129,83,0,36,176,230,1,34,103,72,0,219,162,134,0,245,42,158,0,32,149,96,254,165,44,144,0,202,239,72,254,215,150,5,0,42,66,36,1,132,215,175,0,86,174,86,255,26,197,156,255,49,232,135,254,103,182,82,0,253,128,176,1,153,178,122,0,245,250,10,0,236,24,178,0,137,106,132,0,40,29,41,0,50,30,152,255,124,105,38,0,230,191,75,0,143,43,170,0,44,131,20,255,44,13,23,255,237,255,155,1,159,109,100,255,112,181,24,255,104,220,108,0,55,211,131,0,99,12,213,255,152,151,145,255,238,5,159,0,97,155,8,0,33,108,81,0,1,3,103,0,62,109,34,255,250,155,180,0,32,71,195,255,38,70,145,1,159,95,245,0,69,229,101,1,136,28,240,0,79,224,25,0,78,110,121,255,248,168,124,0,187,128,247,0,2,147,235,254,79,11,132,0,70,58,12,1,181,8,163,255,79,137,133,255,37,170,11,255,141,243,85,255,176,231,215,255,204,150,164,255,239,215,39,255,46,87,156,254,8,163,88,255,172,34,232,0,66,44,102,255,27,54,41,254,236,99,87,255,41,123,169,1,52,114,43,0,117,134,40,0,155,134,26,0,231,207,91,254,35,132,38,255,19,102,125,254,36,227,133,255,118,3,113,255,29,13,124,0,152,96,74,1,88,146,206,255,167,191,220,254,162,18,88,255,182,100,23,0,31,117,52,0,81,46,106,1,12,2,7,0,69,80,201,1,209,246,172,0,12,48,141,1,224,211,88,0,116,226,159,0,122,98,130,0,65,236,234,1,225,226,9,255,207,226,123,1,89,214,59,0,112,135,88,1,90,244,203,255,49,11,38,1,129,108,186,0,89,112,15,1,101,46,204,255,127,204,45,254,79,255,221,255,51,73,18,255,127,42,101,255,241,21,202,0,160,227,7,0,105,50,236,0,79,52,197,255,104,202,208,1,180,15,16,0,101,197,78,255,98,77,203,0,41,185,241,1,35,193,124,0,35,155,23,255,207,53,192,0,11,125,163,1,249,158,185,255,4,131,48,0,21,93,111,255,61,121,231,1,69,200,36,255,185,48,185,255,111,238,21,255,39,50,25,255,99,215,163,255,87,212,30,255,164,147,5,255,128,6,35,1,108,223,110,255,194,76,178,0,74,101,180,0,243,47,48,0,174,25,43,255,82,173,253,1,54,114,192,255,40,55,91,0,215,108,176,255,11,56,7,0,224,233,76,0,209,98,202,254,242,25,125,0,44,193,93,254,203,8,177,0,135,176,19,0,112,71,213,255,206,59,176,1,4,67,26,0,14,143,213,254,42,55,208,255,60,67,120,0,193,21,163,0,99,164,115,0,10,20,118,0,156,212,222,254,160,7,217,255,114,245,76,1,117,59,123,0,176,194,86,254,213,15,176,0,78,206,207,254,213,129,59,0,233,251,22,1,96,55,152,255,236,255,15,255,197,89,84,255,93,149,133,0,174,160,113,0,234,99,169,255,152,116,88,0,144,164,83,255,95,29,198,255,34,47,15,255,99,120,134,255,5,236,193,0,249,247,126,255,147,187,30,0,50,230,117,255,108,217,219,255,163,81,166,255,72,25,169,254,155,121,79,255,28,155,89,254,7,126,17,0,147,65,33,1,47,234,253,0,26,51,18,0,105,83,199,255,163,196,230,0,113,248,164,0,226,254,218,0,189,209,203,255,164,247,222,254,255,35,165,0,4,188,243,1,127,179,71,0,37,237,254,255,100,186,240,0,5,57,71,254,103,72,73,255,244,18,81,254,229,210,132,255,238,6,180,255,11,229,174,255,227,221,192,1,17,49,28,0,163,215,196,254,9,118,4,255,51,240,71,0,113,129,109,255,76,240,231,0,188,177,127,0,125,71,44,1,26,175,243,0,94,169,25,254,27,230,29,0,15,139,119,1,168,170,186,255,172,197,76,255,252,75,188,0,137,124,196,0,72,22,96,255,45,151,249,1,220,145,100,0,64,192,159,255,120,239,226,0,129,178,146,0,0,192,125,0,235,138,234,0,183,157,146,0,83,199,192,255,184,172,72,255,73,225,128,0,77,6,250,255,186,65,67,0,104,246,207,0,188,32,138,255,218,24,242,0,67,138,81,254,237,129,121,255,20,207,150,1,41,199,16,255,6,20,128,0,159,118,5,0,181,16,143,255,220,38,15,0,23,64,147,254,73,26,13,0,87,228,57,1,204,124,128,0,43,24,223,0,219,99,199,0,22,75,20,255,19,27,126,0,157,62,215,0,110,29,230,0,179,167,255,1,54,252,190,0,221,204,182,254,179,158,65,255,81,157,3,0,194,218,159,0,170,223,0,0,224,11,32,255,38,197,98,0,168,164,37,0,23,88,7,1,164,186,110,0,96,36,134,0,234,242,229,0,250,121,19,0,242,254,112,255,3,47,94,1,9,239,6,255,81,134,153,254,214,253,168,255,67,124,224,0,245,95,74,0,28,30,44,254,1,109,220,255,178,89,89,0,252,36,76,0,24,198,46,255,76,77,111,0,134,234,136,255,39,94,29,0,185,72,234,255,70,68,135,255,231,102,7,254,77,231,140,0,167,47,58,1,148,97,118,255,16,27,225,1,166,206,143,255,110,178,214,255,180,131,162,0,143,141,225,1,13,218,78,255,114,153,33,1,98,104,204,0,175,114,117,1,167,206,75,0,202,196,83,1,58,64,67,0,138,47,111,1,196,247,128,255,137,224,224,254,158,112,207,0,154,100,255,1,134,37,107,0,198,128,79,255,127,209,155,255,163,254,185,254,60,14,243,0,31,219,112,254,29,217,65,0,200,13,116,254,123,60,196,255,224,59,184,254,242,89,196,0,123,16,75,254,149,16,206,0,69,254,48,1,231,116,223,255,209,160,65,1,200,80,98,0,37,194,184,254,148,63,34,0,139,240,65,255,217,144,132,255,56,38,45,254,199,120,210,0,108,177,166,255,160,222,4,0,220,126,119,254,165,107,160,255,82,220,248,1,241,175,136,0,144,141,23,255,169,138,84,0,160,137,78,255,226,118,80,255,52,27,132,255,63,96,139,255,152,250,39,0,188,155,15,0,232,51,150,254,40,15,232,255,240,229,9,255,137,175,27,255,75,73,97,1,218,212,11,0,135,5,162,1,107,185,213,0,2,249,107,255,40,242,70,0,219,200,25,0,25,157,13,0,67,82,80,255,196,249,23,255,145,20,149,0,50,72,146,0,94,76,148,1,24,251,65,0,31,192,23,0,184,212,201,255,123,233,162,1,247,173,72,0,162,87,219,254,126,134,89,0,159,11,12,254,166,105,29,0,73,27,228,1,113,120,183,255,66,163,109,1,212,143,11,255,159,231,168,1,255,128,90,0,57,14,58,254,89,52,10,255,253,8,163,1,0,145,210,255,10,129,85,1,46,181,27,0,103,136,160,254,126,188,209,255,34,35,111,0,215,219,24,255,212,11,214,254,101,5,118,0,232,197,133,255,223,167,109,255,237,80,86,255,70,139,94,0,158,193,191,1,155,15,51,255,15,190,115,0,78,135,207,255,249,10,27,1,181,125,233,0,95,172,13,254,170,213,161,255,39,236,138,255,95,93,87,255,190,128,95,0,125,15,206,0,166,150,159,0,227,15,158,255,206,158,120,255,42,141,128,0,101,178,120,1,156,109,131,0,218,14,44,254,247,168,206,255,212,112,28,0,112,17,228,255,90,16,37,1,197,222,108,0,254,207,83,255,9,90,243,255,243,244,172,0,26,88,115,255,205,116,122,0,191,230,193,0,180,100,11,1,217,37,96,255,154,78,156,0,235,234,31,255,206,178,178,255,149,192,251,0,182,250,135,0,246,22,105,0,124,193,109,255,2,210,149,255,169,17,170,0,0,96,110,255,117,9,8,1,50,123,40,255,193,189,99,0,34,227,160,0,48,80,70,254,211,51,236,0,45,122,245,254,44,174,8,0,173,37,233,255,158,65,171,0,122,69,215,255,90,80,2,255,131,106,96,254,227,114,135,0,205,49,119,254,176,62,64,255,82,51,17,255,241,20,243,255,130,13,8,254,128,217,243,255,162,27,1,254,90,118,241,0,246,198,246,255,55,16,118,255,200,159,157,0,163,17,1,0,140,107,121,0,85,161,118,255,38,0,149,0,156,47,238,0,9,166,166,1,75,98,181,255,50,74,25,0,66,15,47,0,139,225,159,0,76,3,142,255,14,238,184,0,11,207,53,255,183,192,186,1,171,32,174,255,191,76,221,1,247,170,219,0,25,172,50,254,217,9,233,0,203,126,68,255,183,92,48,0,127,167,183,1,65,49,254,0,16,63,127,1,254,21,170,255,59,224,127,254,22,48,63,255,27,78,130,254,40,195,29,0,250,132,112,254,35,203,144,0,104,169,168,0,207,253,30,255,104,40,38,254,94,228,88,0,206,16,128,255,212,55,122,255,223,22,234,0,223,197,127,0,253,181,181,1,145,102,118,0,236,153,36,255,212,217,72,255,20,38,24,254,138,62,62,0,152,140,4,0,230,220,99,255,1,21,212,255,148,201,231,0,244,123,9,254,0,171,210,0,51,58,37,255,1,255,14,255,244,183,145,254,0,242,166,0,22,74,132,0,121,216,41,0,95,195,114,254,133,24,151,255,156,226,231,255,247,5,77,255,246,148,115,254,225,92,81,255,222,80,246,254,170,123,89,255,74,199,141,0,29,20,8,255,138,136,70,255,93,75,92,0,221,147,49,254,52,126,226,0,229,124,23,0,46,9,181,0,205,64,52,1,131,254,28,0,151,158,212,0,131,64,78,0,206,25,171,0,0,230,139,0,191,253,110,254,103,247,167,0,64,40,40,1,42,165,241,255,59,75,228,254,124,243,189,255,196,92,178,255,130,140,86,255,141,89,56,1,147,198,5,255,203,248,158,254,144,162,141,0,11,172,226,0,130,42,21,255,1,167,143,255,144,36,36,255,48,88,164,254,168,170,220,0,98,71,214,0,91,208,79,0,159,76,201,1,166,42,214,255,69,255,0,255,6,128,125,255,190,1,140,0,146,83,218,255,215,238,72,1,122,127,53,0,189,116,165,255,84,8,66,255,214,3,208,255,213,110,133,0,195,168,44,1,158,231,69,0,162,64,200,254,91,58,104,0,182,58,187,254,249,228,136,0,203,134,76,254,99,221,233,0,75,254,214,254,80,69,154,0,64,152,248,254,236,136,202,255,157,105,153,254,149,175,20,0,22,35,19,255,124,121,233,0,186,250,198,254,132,229,139,0,137,80,174,255,165,125,68,0,144,202,148,254,235,239,248,0,135,184,118,0,101,94,17,255,122,72,70,254,69,130,146,0,127,222,248,1,69,127,118,255,30,82,215,254,188,74,19,255,229,167,194,254,117,25,66,255,65,234,56,254,213,22,156,0,151,59,93,254,45,28,27,255,186,126,164,255,32,6,239,0,127,114,99,1,219,52,2,255,99,96,166,254,62,190,126,255,108,222,168,1,75,226,174,0,230,226,199,0,60,117,218,255,252,248,20,1,214,188,204,0,31,194,134,254,123,69,192,255,169,173,36,254,55,98,91,0,223,42,102,254,137,1,102,0,157,90,25,0,239,122,64,255,252,6,233,0,7,54,20,255,82,116,174,0,135,37,54,255,15,186,125,0,227,112,175,255,100,180,225,255,42,237,244,255,244,173,226,254,248,18,33,0,171,99,150,255,74,235,50,255,117,82,32,254,106,168,237,0,207,109,208,1,228,9,186,0,135,60,169,254,179,92,143,0,244,170,104,255,235,45,124,255,70,99,186,0,117,137,183,0,224,31,215,0,40,9,100,0,26,16,95,1,68,217,87,0,8,151,20,255,26,100,58,255,176,165,203,1,52,118,70,0,7,32,254,254,244,254,245,255,167,144,194,255,125,113,23,255,176,121,181,0,136,84,209,0,138,6,30,255,89,48,28,0,33,155,14,255,25,240,154,0,141,205,109,1,70,115,62,255,20,40,107,254,138,154,199,255,94,223,226,255,157,171,38,0,163,177,25,254,45,118,3,255,14,222,23,1,209,190,81,255,118,123,232,1,13,213,101,255,123,55,123,254,27,246,165,0,50,99,76,255,140,214,32,255,97,65,67,255,24,12,28,0,174,86,78,1,64,247,96,0,160,135,67,0,66,55,243,255,147,204,96,255,26,6,33,255,98,51,83,1,153,213,208,255,2,184,54,255,25,218,11,0,49,67,246,254,18,149,72,255,13,25,72,0,42,79,214,0,42,4,38,1,27,139,144,255,149,187,23,0,18,164,132,0,245,84,184,254,120,198,104,255,126,218,96,0,56,117,234,255,13,29,214,254,68,47,10,255,167,154,132,254,152,38,198,0,66,178,89,255,200,46,171,255,13,99,83,255,210,187,253,255,170,45,42,1,138,209,124,0,214,162,141,0,12,230,156,0,102,36,112,254,3,147,67,0,52,215,123,255,233,171,54,255,98,137,62,0,247,218,39,255,231,218,236,0,247,191,127,0,195,146,84,0,165,176,92,255,19,212,94,255,17,74,227,0,88,40,153,1,198,147,1,255,206,67,245,254,240,3,218,255,61,141,213,255,97,183,106,0,195,232,235,254,95,86,154,0,209,48,205,254,118,209,241,255,240,120,223,1,213,29,159,0,163,127,147,255,13,218,93,0,85,24,68,254,70,20,80,255,189,5,140,1,82,97,254,255,99,99,191,255,132,84,133,255,107,218,116,255,112,122,46,0,105,17,32,0,194,160,63,255,68,222,39,1,216,253,92,0,177,105,205,255,149,201,195,0,42,225,11,255,40,162,115,0,9,7,81,0,165,218,219,0,180,22,0,254,29,146,252,255,146,207,225,1,180,135,96,0,31,163,112,0,177,11,219,255,133,12,193,254,43,78,50,0,65,113,121,1,59,217,6,255,110,94,24,1,112,172,111,0,7,15,96,0,36,85,123,0,71,150,21,255,208,73,188,0,192,11,167,1,213,245,34,0,9,230,92,0,162,142,39,255,215,90,27,0,98,97,89,0,94,79,211,0,90,157,240,0,95,220,126,1,102,176,226,0,36,30,224,254,35,31,127,0,231,232,115,1,85,83,130,0,210,73,245,255,47,143,114,255,68,65,197,0,59,72,62,255,183,133,173,254,93,121,118,255,59,177,81,255,234,69,173,255,205,128,177,0,220,244,51,0,26,244,209,1,73,222,77,255,163,8,96,254,150,149,211,0,158,254,203,1,54,127,139,0,161,224,59,0,4,109,22,255,222,42,45,255,208,146,102,255,236,142,187,0,50,205,245,255,10,74,89,254,48,79,142,0,222,76,130,255,30,166,63,0,236,12,13,255,49,184,244,0,187,113,102,0,218,101,253,0,153,57,182,254,32,150,42,0,25,198,146,1,237,241,56,0,140,68,5,0,91,164,172,255,78,145,186,254,67,52,205,0,219,207,129,1,109,115,17,0,54,143,58,1,21,248,120,255,179,255,30,0,193,236,66,255,1,255,7,255,253,192,48,255,19,69,217,1,3,214,0,255,64,101,146,1,223,125,35,255,235,73,179,255,249,167,226,0,225,175,10,1,97,162,58,0,106,112,171,1,84,172,5,255,133,140,178,255,134,245,142,0,97,90,125,255,186,203,185,255,223,77,23,255,192,92,106,0,15,198,115,255,217,152,248,0,171,178,120,255,228,134,53,0,176,54,193,1,250,251,53,0,213,10,100,1,34,199,106,0,151,31,244,254,172,224,87,255,14,237,23,255,253,85,26,255,127,39,116,255,172,104,100,0,251,14,70,255,212,208,138,255,253,211,250,0,176,49,165,0,15,76,123,255,37,218,160,255,92,135,16,1,10,126,114,255,70,5,224,255,247,249,141,0,68,20,60,1,241,210,189,255,195,217,187,1,151,3,113,0,151,92,174,0,231,62,178,255,219,183,225,0,23,23,33,255,205,181,80,0,57,184,248,255,67,180,1,255,90,123,93,255,39,0,162,255,96,248,52,255,84,66,140,0,34,127,228,255,194,138,7,1,166,110,188,0,21,17,155,1,154,190,198,255,214,80,59,255,18,7,143,0,72,29,226,1,199,217,249,0,232,161,71,1,149,190,201,0,217,175,95,254,113,147,67,255,138,143,199,255,127,204,1,0,29,182,83,1,206,230,155,255,186,204,60,0,10,125,85,255,232,96,25,255,255,89,247,255,213,254,175,1,232,193,81,0,28,43,156,254,12,69,8,0,147,24,248,0,18,198,49,0,134,60,35,0,118,246,18,255,49,88,254,254,228,21,186,255,182,65,112,1,219,22,1,255,22,126,52,255,189,53,49,255,112,25,143,0,38,127,55,255,226,101,163,254,208,133,61,255,137,69,174,1,190,118,145,255,60,98,219,255,217,13,245,255,250,136,10,0,84,254,226,0,201,31,125,1,240,51,251,255,31,131,130,255,2,138,50,255,215,215,177,1,223,12,238,255,252,149,56,255,124,91,68,255,72,126,170,254,119,255,100,0,130,135,232,255,14,79,178,0,250,131,197,0,138,198,208,0,121,216,139,254,119,18,36,255,29,193,122,0,16,42,45,255,213,240,235,1,230,190,169,255,198,35,228,254,110,173,72,0,214,221,241,255,56,148,135,0,192,117,78,254,141,93,207,255,143,65,149,0,21,18,98,255,95,44,244,1,106,191,77,0,254,85,8,254,214,110,176,255,73,173,19,254,160,196,199,255,237,90,144,0,193,172,113,255,200,155,136,254,228,90,221,0,137,49,74,1,164,221,215,255,209,189,5,255,105,236,55,255,42,31,129,1,193,255,236,0,46,217,60,0,138,88,187,255,226,82,236,255,81,69,151,255,142,190,16,1,13,134,8,0,127,122,48,255,81,64,156,0,171,243,139,0,237,35,246,0,122,143,193,254,212,122,146,0,95,41,255,1,87,132,77,0,4,212,31,0,17,31,78,0,39,45,173,254,24,142,217,255,95,9,6,255,227,83,6,0,98,59,130,254,62,30,33,0,8,115,211,1,162,97,128,255,7,184,23,254,116,28,168,255,248,138,151,255,98,244,240,0,186,118,130,0,114,248,235,255,105,173,200,1,160,124,71,255,94,36,164,1,175,65,146,255,238,241,170,254,202,198,197,0,228,71,138,254,45,246,109,255,194,52,158,0,133,187,176,0,83,252,154,254,89,189,221,255,170,73,252,0,148,58,125,0,36,68,51,254,42,69,177,255,168,76,86,255,38,100,204,255,38,53,35,0,175,19,97,0,225,238,253,255,81,81,135,0,210,27,255,254,235,73,107,0,8,207,115,0,82,127,136,0,84,99,21,254,207,19,136,0,100,164,101,0,80,208,77,255,132,207,237,255,15,3,15,255,33,166,110,0,156,95,85,255,37,185,111,1,150,106,35,255,166,151,76,0,114,87,135,255,159,194,64,0,12,122,31,255,232,7,101,254,173,119,98,0,154,71,220,254,191,57,53,255,168,232,160,255,224,32,99,255,218,156,165,0,151,153,163,0,217,13,148,1,197,113,89,0,149,28,161,254,207,23,30,0,105,132,227,255,54,230,94,255,133,173,204,255,92,183,157,255,88,144,252,254,102,33,90,0,159,97,3,0,181,218,155,255,240,114,119,0,106,214,53,255,165,190,115,1,152,91,225,255,88,106,44,255,208,61,113,0,151,52,124,0,191,27,156,255,110,54,236,1,14,30,166,255,39,127,207,1,229,199,28,0,188,228,188,254,100,157,235,0,246,218,183,1,107,22,193,255,206,160,95,0,76,239,147,0,207,161,117,0,51,166,2,255,52,117,10,254,73,56,227,255,152,193,225,0,132,94,136,255,101,191,209,0,32,107,229,255,198,43,180,1,100,210,118,0,114,67,153,255,23,88,26,255,89,154,92,1,220,120,140,255,144,114,207,255,252,115,250,255,34,206,72,0,138,133,127,255,8,178,124,1,87,75,97,0,15,229,92,254,240,67,131,255,118,123,227,254,146,120,104,255,145,213,255,1,129,187,70,255,219,119,54,0,1,19,173,0,45,150,148,1,248,83,72,0,203,233,169,1,142,107,56,0,247,249,38,1,45,242,80,255,30,233,103,0,96,82,70,0,23,201,111,0,81,39,30,255,161,183,78,255,194,234,33,255,68,227,140,254,216,206,116,0,70,27,235,255,104,144,79,0,164,230,93,254,214,135,156,0,154,187,242,254,188,20,131,255,36,109,174,0,159,112,241,0,5,110,149,1,36,165,218,0,166,29,19,1,178,46,73,0,93,43,32,254,248,189,237,0,102,155,141,0,201,93,195,255,241,139,253,255,15,111,98,255,108,65,163,254,155,79,190,255,73,174,193,254,246,40,48,255,107,88,11,254,202,97,85,255,253,204,18,255,113,242,66,0,110,160,194,254,208,18,186,0,81,21,60,0,188,104,167,255,124,166,97,254,210,133,142,0,56,242,137,254,41,111,130,0,111,151,58,1,111,213,141,255,183,172,241,255,38,6,196,255,185,7,123,255,46,11,246,0,245,105,119,1,15,2,161,255,8,206,45,255,18,202,74,255,83,124,115,1,212,141,157,0,83,8,209,254,139,15,232,255,172,54,173,254,50,247,132,0,214,189,213,0,144,184,105,0,223,254,248,0,255,147,240,255,23,188,72,0,7,51,54,0,188,25,180,254,220,180,0,255,83,160,20,0,163,189,243,255,58,209,194,255,87,73,60,0,106,24,49,0,245,249,220,0,22,173,167,0,118,11,195,255,19,126,237,0,110,159,37,255,59,82,47,0,180,187,86,0,188,148,208,1,100,37,133,255,7,112,193,0,129,188,156,255,84,106,129,255,133,225,202,0,14,236,111,255,40,20,101,0,172,172,49,254,51,54,74,255,251,185,184,255,93,155,224,255,180,249,224,1,230,178,146,0,72,57,54,254,178,62,184,0,119,205,72,0,185,239,253,255,61,15,218,0,196,67,56,255,234,32,171,1,46,219,228,0,208,108,234,255,20,63,232,255,165,53,199,1,133,228,5,255,52,205,107,0,74,238,140,255,150,156,219,254,239,172,178,255,251,189,223,254,32,142,211,255,218,15,138,1,241,196,80,0,28,36,98,254,22,234,199,0,61,237,220,255,246,57,37,0,142,17,142,255,157,62,26,0,43,238,95,254,3,217,6,255,213,25,240,1,39,220,174,255,154,205,48,254,19,13,192,255,244,34,54,254,140,16,155,0,240,181,5,254,155,193,60,0,166,128,4,255,36,145,56,255,150,240,219,0,120,51,145,0,82,153,42,1,140,236,146,0,107,92,248,1,189,10,3,0,63,136,242,0,211,39,24,0,19,202,161,1,173,27,186,255,210,204,239,254,41,209,162,255,182,254,159,255,172,116,52,0,195,103,222,254,205,69,59,0,53,22,41,1,218,48,194,0,80,210,242,0,210,188,207,0,187,161,161,254,216,17,1,0,136,225,113,0,250,184,63,0,223,30,98,254,77,168,162,0,59,53,175,0,19,201,10,255,139,224,194,0,147,193,154,255,212,189,12,254,1,200,174,255,50,133,113,1,94,179,90,0,173,182,135,0,94,177,113,0,43,89,215,255,136,252,106,255,123,134,83,254,5,245,66,255,82,49,39,1,220,2,224,0,97,129,177,0,77,59,89,0,61,29,155,1,203,171,220,255,92,78,139,0,145,33,181,255,169,24,141,1,55,150,179,0,139,60,80,255,218,39,97,0,2,147,107,255,60,248,72,0,173,230,47,1,6,83,182,255,16,105,162,254,137,212,81,255,180,184,134,1,39,222,164,255,221,105,251,1,239,112,125,0,63,7,97,0,63,104,227,255,148,58,12,0,90,60,224,255,84,212,252,0,79,215,168,0,248,221,199,1,115,121,1,0,36,172,120,0,32,162,187,255,57,107,49,255,147,42,21,0,106,198,43,1,57,74,87,0,126,203,81,255,129,135,195,0,140,31,177,0,221,139,194,0,3,222,215,0,131,68,231,0,177,86,178,254,124,151,180,0,184,124,38,1,70,163,17,0,249,251,181,1,42,55,227,0,226,161,44,0,23,236,110,0,51,149,142,1,93,5,236,0,218,183,106,254,67,24,77,0,40,245,209,255,222,121,153,0,165,57,30,0,83,125,60,0,70,38,82,1,229,6,188,0,109,222,157,255,55,118,63,255,205,151,186,0,227,33,149,255,254,176,246,1,227,177,227,0,34,106,163,254,176,43,79,0,106,95,78,1,185,241,122,255,185,14,61,0,36,1,202,0,13,178,162,255,247,11,132,0,161,230,92,1,65,1,185,255,212,50,165,1,141,146,64,255,158,242,218,0,21,164,125,0,213,139,122,1,67,71,87,0,203,158,178,1,151,92,43,0,152,111,5,255,39,3,239,255,217,255,250,255,176,63,71,255,74,245,77,1,250,174,18,255,34,49,227,255,246,46,251,255,154,35,48,1,125,157,61,255,106,36,78,255,97,236,153,0,136,187,120,255,113,134,171,255,19,213,217,254,216,94,209,255,252,5,61,0,94,3,202,0,3,26,183,255,64,191,43,255,30,23,21,0,129,141,77,255,102,120,7,1,194,76,140,0,188,175,52,255,17,81,148,0,232,86,55,1,225,48,172,0,134,42,42,255,238,50,47,0,169,18,254,0,20,147,87,255,14,195,239,255,69,247,23,0,238,229,128,255,177,49,112,0,168,98,251,255,121,71,248,0,243,8,145,254,246,227,153,255,219,169,177,254,251,139,165,255,12,163,185,255,164,40,171,255,153,159,27,254,243,109,91,255,222,24,112,1,18,214,231,0,107,157,181,254,195,147,0,255,194,99,104,255,89,140,190,255,177,66,126,254,106,185,66,0,49,218,31,0,252,174,158,0,188,79,230,1,238,41,224,0,212,234,8,1,136,11,181,0,166,117,83,255,68,195,94,0,46,132,201,0,240,152,88,0,164,57,69,254,160,224,42,255,59,215,67,255,119,195,141,255,36,180,121,254,207,47,8,255,174,210,223,0,101,197,68,255,255,82,141,1,250,137,233,0,97,86,133,1,16,80,69,0,132,131,159,0,116,93,100,0,45,141,139,0,152,172,157,255,90,43,91,0,71,153,46,0,39,16,112,255,217,136,97,255,220,198,25,254,177,53,49,0,222,88,134,255,128,15,60,0,207,192,169,255,192,116,209,255,106,78,211,1,200,213,183,255,7,12,122,254,222,203,60,255,33,110,199,254,251,106,117,0,228,225,4,1,120,58,7,255,221,193,84,254,112,133,27,0,189,200,201,255,139,135,150,0,234,55,176,255,61,50,65,0,152,108,169,255,220,85,1,255,112,135,227,0,162,26,186,0,207,96,185,254,244,136,107,0,93,153,50,1,198,97,151,0,110,11,86,255,143,117,174,255,115,212,200,0,5,202,183,0,237,164,10,254,185,239,62,0,236,120,18,254,98,123,99,255,168,201,194,254,46,234,214,0,191,133,49,255,99,169,119,0,190,187,35,1,115,21,45,255,249,131,72,0,112,6,123,255,214,49,181,254,166,233,34,0,92,197,102,254,253,228,205,255,3,59,201,1,42,98,46,0,219,37,35,255,169,195,38,0,94,124,193,1,156,43,223,0,95,72,133,254,120,206,191,0,122,197,239,255,177,187,79,255,254,46,2,1,250,167,190,0,84,129,19,0,203,113,166,255,249,31,189,254,72,157,202,255,208,71,73,255,207,24,72,0,10,16,18,1,210,81,76,255,88,208,192,255,126,243,107,255,238,141,120,255,199,121,234,255,137,12,59,255,36,220,123,255,148,179,60,254,240,12,29,0,66,0,97,1,36,30,38,255,115,1,93,255,96,103,231,255,197,158,59,1,192,164,240,0,202,202,57,255,24,174,48,0,89,77,155,1,42,76,215,0,244,151,233,0,23,48,81,0,239,127,52,254,227,130,37,255,248,116,93,1,124,132,118,0,173,254,192,1,6,235,83,255,110,175,231,1,251,28,182,0,129,249,93,254,84,184,128,0,76,181,62,0,175,128,186,0,100,53,136,254,109,29,226,0,221,233,58,1,20,99,74,0,0,22,160,0,134,13,21,0,9,52,55,255,17,89,140,0,175,34,59,0,84,165,119,255,224,226,234,255,7,72,166,255,123,115,255,1,18,214,246,0,250,7,71,1,217,220,185,0,212,35,76,255,38,125,175,0,189,97,210,0,114,238,44,255,41,188,169,254,45,186,154,0,81,92,22,0,132,160,193,0,121,208,98,255,13,81,44,255,203,156,82,0,71,58,21,255,208,114,191,254,50,38,147,0,154,216,195,0,101,25,18,0,60,250,215,255,233,132,235,255,103,175,142,1,16,14,92,0,141,31,110,254,238,241,45,255,153,217,239,1,97,168,47,255,249,85,16,1,28,175,62,255,57,254,54,0,222,231,126,0,166,45,117,254,18,189,96,255,228,76,50,0,200,244,94,0,198,152,120,1,68,34,69,255,12,65,160,254,101,19,90,0,167,197,120,255,68,54,185,255,41,218,188,0,113,168,48,0,88,105,189,1,26,82,32,255,185,93,164,1,228,240,237,255,66,182,53,0,171,197,92,255,107,9,233,1,199,120,144,255,78,49,10,255,109,170,105,255,90,4,31,255,28,244,113,255,74,58,11,0,62,220,246,255,121,154,200,254,144,210,178,255,126,57,129,1,43,250,14,255,101,111,28,1,47,86,241,255,61,70,150,255,53,73,5,255,30,26,158,0,209,26,86,0,138,237,74,0,164,95,188,0,142,60,29,254,162,116,248,255,187,175,160,0,151,18,16,0,209,111,65,254,203,134,39,255,88,108,49,255,131,26,71,255,221,27,215,254,104,105,93,255,31,236,31,254,135,0,211,255,143,127,110,1,212,73,229,0,233,67,167,254,195,1,208,255,132,17,221,255,51,217,90,0,67,235,50,255,223,210,143,0,179,53,130,1,233,106,198,0,217,173,220,255,112,229,24,255,175,154,93,254,71,203,246,255,48,66,133,255,3,136,230,255,23,221,113,254,235,111,213,0,170,120,95,254,251,221,2,0,45,130,158,254,105,94,217,255,242,52,180,254,213,68,45,255,104,38,28,0,244,158,76,0,161,200,96,255,207,53,13,255,187,67,148,0,170,54,248,0,119,162,178,255,83,20,11,0,42,42,192,1,146,159,163,255,183,232,111,0,77,229,21,255,71,53,143,0,27,76,34,0,246,136,47,255,219,39,182,255,92,224,201,1,19,142,14,255,69,182,241,255,163,118,245,0,9,109,106,1,170,181,247,255,78,47,238,255,84,210,176,255,213,107,139,0,39,38,11,0,72,21,150,0,72,130,69,0,205,77,155,254,142,133,21,0,71,111,172,254,226,42,59,255,179,0,215,1,33,128,241,0,234,252,13,1,184,79,8,0,110,30,73,255,246,141,189,0,170,207,218,1,74,154,69,255,138,246,49,255,155,32,100,0,125,74,105,255,90,85,61,255,35,229,177,255,62,125,193,255,153,86,188,1,73,120,212,0,209,123,246,254,135,209,38,255,151,58,44,1,92,69,214,255,14,12,88,255,252,153,166,255,253,207,112,255,60,78,83,255,227,124,110,0,180,96,252,255,53,117,33,254,164,220,82,255,41,1,27,255,38,164,166,255,164,99,169,254,61,144,70,255,192,166,18,0,107,250,66,0,197,65,50,0,1,179,18,255,255,104,1,255,43,153,35,255,80,111,168,0,110,175,168,0,41,105,45,255,219,14,205,255,164,233,140,254,43,1,118,0,233,67,195,0,178,82,159,255,138,87,122,255,212,238,90,255,144,35,124,254,25,140,164,0,251,215,44,254,133,70,107,255,101,227,80,254,92,169,55,0,215,42,49,0,114,180,85,255,33,232,27,1,172,213,25,0,62,176,123,254,32,133,24,255,225,191,62,0,93,70,153,0,181,42,104,1,22,191,224,255,200,200,140,255,249,234,37,0,149,57,141,0,195,56,208,255,254,130,70,255,32,173,240,255,29,220,199,0,110,100,115,255,132,229,249,0,228,233,223,255,37,216,209,254,178,177,209,255,183,45,165,254,224,97,114,0,137,97,168,255,225,222,172,0,165,13,49,1,210,235,204,255,252,4,28,254,70,160,151,0,232,190,52,254,83,248,93,255,62,215,77,1,175,175,179,255,160,50,66,0,121,48,208,0,63,169,209,255,0,210,200,0,224,187,44,1,73,162,82,0,9,176,143,255,19,76,193,255,29,59,167,1,24,43,154,0,28,190,190,0,141,188,129,0,232,235,203,255,234,0,109,255,54,65,159,0,60,88,232,255,121,253,150,254,252,233,131,255,198,110,41,1,83,77,71,255,200,22,59,254,106,253,242,255,21,12,207,255,237,66,189,0,90,198,202,1,225,172,127,0,53,22,202,0,56,230,132,0,1,86,183,0,109,190,42,0,243,68,174,1,109,228,154,0,200,177,122,1,35,160,183,255,177,48,85,255,90,218,169,255,248,152,78,0,202,254,110,0,6,52,43,0,142,98,65,255,63,145,22,0,70,106,93,0,232,138,107,1,110,179,61,255,211,129,218,1,242,209,92,0,35,90,217,1,182,143,106,255,116,101,217,255,114,250,221,255,173,204,6,0,60,150,163,0,73,172,44,255,239,110,80,255,237,76,153,254,161,140,249,0,149,232,229,0,133,31,40,255,174,164,119,0,113,51,214,0,129,228,2,254,64,34,243,0,107,227,244,255,174,106,200,255,84,153,70,1,50,35,16,0,250,74,216,254,236,189,66,255,153,249,13,0,230,178,4,255,221,41,238,0,118,227,121,255,94,87,140,254,254,119,92,0,73,239,246,254,117,87,128,0,19,211,145,255,177,46,252,0,229,91,246,1,69,128,247,255,202,77,54,1,8,11,9,255,153,96,166,0,217,214,173,255,134,192,2,1,0,207,0,0,189,174,107,1,140,134,100,0,158,193,243,1,182,102,171,0,235,154,51,0,142,5,123,255,60,168,89,1,217,14,92,255,19,214,5,1,211,167,254,0,44,6,202,254,120,18,236,255,15,113,184,255,184,223,139],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE),allocate([40,177,119,254,182,123,90,255,176,165,176,0,247,77,194,0,27,234,120,0,231,0,214,255,59,39,30,0,125,99,145,255,150,68,68,1,141,222,248,0,153,123,210,255,110,127,152,255,229,33,214,1,135,221,197,0,137,97,2,0,12,143,204,255,81,41,188,0,115,79,130,255,94,3,132,0,152,175,187,255,124,141,10,255,126,192,179,255,11,103,198,0,149,6,45,0,219,85,187,1,230,18,178,255,72,182,152,0,3,198,184,255,128,112,224,1,97,161,230,0,254,99,38,255,58,159,197,0,151,66,219,0,59,69,143,255,185,112,249,0,119,136,47,255,123,130,132,0,168,71,95,255,113,176,40,1,232,185,173,0,207,93,117,1,68,157,108,255,102,5,147,254,49,97,33,0,89,65,111,254,247,30,163,255,124,217,221,1,102,250,216,0,198,174,75,254,57,55,18,0,227,5,236,1,229,213,173,0,201,109,218,1,49,233,239,0,30,55,158,1,25,178,106,0,155,111,188,1,94,126,140,0,215,31,238,1,77,240,16,0,213,242,25,1,38,71,168,0,205,186,93,254,49,211,140,255,219,0,180,255,134,118,165,0,160,147,134,255,110,186,35,255,198,243,42,0,243,146,119,0,134,235,163,1,4,241,135,255,193,46,193,254,103,180,79,255,225,4,184,254,242,118,130,0,146,135,176,1,234,111,30,0,69,66,213,254,41,96,123,0,121,94,42,255,178,191,195,255,46,130,42,0,117,84,8,255,233,49,214,254,238,122,109,0,6,71,89,1,236,211,123,0,244,13,48,254,119,148,14,0,114,28,86,255,75,237,25,255,145,229,16,254,129,100,53,255,134,150,120,254,168,157,50,0,23,72,104,255,224,49,14,0,255,123,22,255,151,185,151,255,170,80,184,1,134,182,20,0,41,100,101,1,153,33,16,0,76,154,111,1,86,206,234,255,192,160,164,254,165,123,93,255,1,216,164,254,67,17,175,255,169,11,59,255,158,41,61,255,73,188,14,255,195,6,137,255,22,147,29,255,20,103,3,255,246,130,227,255,122,40,128,0,226,47,24,254,35,36,32,0,152,186,183,255,69,202,20,0,195,133,195,0,222,51,247,0,169,171,94,1,183,0,160,255,64,205,18,1,156,83,15,255,197,58,249,254,251,89,110,255,50,10,88,254,51,43,216,0,98,242,198,1,245,151,113,0,171,236,194,1,197,31,199,255,229,81,38,1,41,59,20,0,253,104,230,0,152,93,14,255,246,242,146,254,214,169,240,255,240,102,108,254,160,167,236,0,154,218,188,0,150,233,202,255,27,19,250,1,2,71,133,255,175,12,63,1,145,183,198,0,104,120,115,255,130,251,247,0,17,212,167,255,62,123,132,255,247,100,189,0,155,223,152,0,143,197,33,0,155,59,44,255,150,93,240,1,127,3,87,255,95,71,207,1,167,85,1,255,188,152,116,255,10,23,23,0,137,195,93,1,54,98,97,0,240,0,168,255,148,188,127,0,134,107,151,0,76,253,171,0,90,132,192,0,146,22,54,0,224,66,54,254,230,186,229,255,39,182,196,0,148,251,130,255,65,131,108,254,128,1,160,0,169,49,167,254,199,254,148,255,251,6,131,0,187,254,129,255,85,82,62,0,178,23,58,255,254,132,5,0,164,213,39,0,134,252,146,254,37,53,81,255,155,134,82,0,205,167,238,255,94,45,180,255,132,40,161,0,254,111,112,1,54,75,217,0,179,230,221,1,235,94,191,255,23,243,48,1,202,145,203,255,39,118,42,255,117,141,253,0,254,0,222,0,43,251,50,0,54,169,234,1,80,68,208,0,148,203,243,254,145,7,135,0,6,254,0,0,252,185,127,0,98,8,129,255,38,35,72,255,211,36,220,1,40,26,89,0,168,64,197,254,3,222,239,255,2,83,215,254,180,159,105,0,58,115,194,0,186,116,106,255,229,247,219,255,129,118,193,0,202,174,183,1,166,161,72,0,201,107,147,254,237,136,74,0,233,230,106,1,105,111,168,0,64,224,30,1,1,229,3,0,102,151,175,255,194,238,228,255,254,250,212,0,187,237,121,0,67,251,96,1,197,30,11,0,183,95,204,0,205,89,138,0,64,221,37,1,255,223,30,255,178,48,211,255,241,200,90,255,167,209,96,255,57,130,221,0,46,114,200,255,61,184,66,0,55,182,24,254,110,182,33,0,171,190,232,255,114,94,31,0,18,221,8,0,47,231,254,0,255,112,83,0,118,15,215,255,173,25,40,254,192,193,31,255,238,21,146,255,171,193,118,255,101,234,53,254,131,212,112,0,89,192,107,1,8,208,27,0,181,217,15,255,231,149,232,0,140,236,126,0,144,9,199,255,12,79,181,254,147,182,202,255,19,109,182,255,49,212,225,0,74,163,203,0,175,233,148,0,26,112,51,0,193,193,9,255,15,135,249,0,150,227,130,0,204,0,219,1,24,242,205,0,238,208,117,255,22,244,112,0,26,229,34,0,37,80,188,255,38,45,206,254,240,90,225,255,29,3,47,255,42,224,76,0,186,243,167,0,32,132,15,255,5,51,125,0,139,135,24,0,6,241,219,0,172,229,133,255,246,214,50,0,231,11,207,255,191,126,83,1,180,163,170,255,245,56,24,1,178,164,211,255,3,16,202,1,98,57,118,255,141,131,89,254,33,51,24,0,243,149,91,255,253,52,14,0,35,169,67,254,49,30,88,255,179,27,36,255,165,140,183,0,58,189,151,0,88,31,0,0,75,169,66,0,66,101,199,255,24,216,199,1,121,196,26,255,14,79,203,254,240,226,81,255,94,28,10,255,83,193,240,255,204,193,131,255,94,15,86,0,218,40,157,0,51,193,209,0,0,242,177,0,102,185,247,0,158,109,116,0,38,135,91,0,223,175,149,0,220,66,1,255,86,60,232,0,25,96,37,255,225,122,162,1,215,187,168,255,158,157,46,0,56,171,162,0,232,240,101,1,122,22,9,0,51,9,21,255,53,25,238,255,217,30,232,254,125,169,148,0,13,232,102,0,148,9,37,0,165,97,141,1,228,131,41,0,222,15,243,255,254,18,17,0,6,60,237,1,106,3,113,0,59,132,189,0,92,112,30,0,105,208,213,0,48,84,179,255,187,121,231,254,27,216,109,255,162,221,107,254,73,239,195,255,250,31,57,255,149,135,89,255,185,23,115,1,3,163,157,255,18,112,250,0,25,57,187,255,161,96,164,0,47,16,243,0,12,141,251,254,67,234,184,255,41,18,161,0,175,6,96,255,160,172,52,254,24,176,183,255,198,193,85,1,124,121,137,255,151,50,114,255,220,203,60,255,207,239,5,1,0,38,107,255,55,238,94,254,70,152,94,0,213,220,77,1,120,17,69,255,85,164,190,255,203,234,81,0,38,49,37,254,61,144,124,0,137,78,49,254,168,247,48,0,95,164,252,0,105,169,135,0,253,228,134,0,64,166,75,0,81,73,20,255,207,210,10,0,234,106,150,255,94,34,90,255,254,159,57,254,220,133,99,0,139,147,180,254,24,23,185,0,41,57,30,255,189,97,76,0,65,187,223,255,224,172,37,255,34,62,95,1,231,144,240,0,77,106,126,254,64,152,91,0,29,98,155,0,226,251,53,255,234,211,5,255,144,203,222,255,164,176,221,254,5,231,24,0,179,122,205,0,36,1,134,255,125,70,151,254,97,228,252,0,172,129,23,254,48,90,209,255,150,224,82,1,84,134,30,0,241,196,46,0,103,113,234,255,46,101,121,254,40,124,250,255,135,45,242,254,9,249,168,255,140,108,131,255,143,163,171,0,50,173,199,255,88,222,142,255,200,95,158,0,142,192,163,255,7,117,135,0,111,124,22,0,236,12,65,254,68,38,65,255,227,174,254,0,244,245,38,0,240,50,208,255,161,63,250,0,60,209,239,0,122,35,19,0,14,33,230,254,2,159,113,0,106,20,127,255,228,205,96,0,137,210,174,254,180,212,144,255,89,98,154,1,34,88,139,0,167,162,112,1,65,110,197,0,241,37,169,0,66,56,131,255,10,201,83,254,133,253,187,255,177,112,45,254,196,251,0,0,196,250,151,255,238,232,214,255,150,209,205,0,28,240,118,0,71,76,83,1,236,99,91,0,42,250,131,1,96,18,64,255,118,222,35,0,113,214,203,255,122,119,184,255,66,19,36,0,204,64,249,0,146,89,139,0,134,62,135,1,104,233,101,0,188,84,26,0,49,249,129,0,208,214,75,255,207,130,77,255,115,175,235,0,171,2,137,255,175,145,186,1,55,245,135,255,154,86,181,1,100,58,246,255,109,199,60,255,82,204,134,255,215,49,230,1,140,229,192,255,222,193,251,255,81,136,15,255,179,149,162,255,23,39,29,255,7,95,75,254,191,81,222,0,241,81,90,255,107,49,201,255,244,211,157,0,222,140,149,255,65,219,56,254,189,246,90,255,178,59,157,1,48,219,52,0,98,34,215,0,28,17,187,255,175,169,24,0,92,79,161,255,236,200,194,1,147,143,234,0,229,225,7,1,197,168,14,0,235,51,53,1,253,120,174,0,197,6,168,255,202,117,171,0,163,21,206,0,114,85,90,255,15,41,10,255,194,19,99,0,65,55,216,254,162,146,116,0,50,206,212,255,64,146,29,255,158,158,131,1,100,165,130,255,172,23,129,255,125,53,9,255,15,193,18,1,26,49,11,255,181,174,201,1,135,201,14,255,100,19,149,0,219,98,79,0,42,99,143,254,96,0,48,255,197,249,83,254,104,149,79,255,235,110,136,254,82,128,44,255,65,41,36,254,88,211,10,0,187,121,187,0,98,134,199,0,171,188,179,254,210,11,238,255,66,123,130,254,52,234,61,0,48,113,23,254,6,86,120,255,119,178,245,0,87,129,201,0,242,141,209,0,202,114,85,0,148,22,161,0,103,195,48,0,25,49,171,255,138,67,130,0,182,73,122,254,148,24,130,0,211,229,154,0,32,155,158,0,84,105,61,0,177,194,9,255,166,89,86,1,54,83,187,0,249,40,117,255,109,3,215,255,53,146,44,1,63,47,179,0,194,216,3,254,14,84,136,0,136,177,13,255,72,243,186,255,117,17,125,255,211,58,211,255,93,79,223,0,90,88,245,255,139,209,111,255,70,222,47,0,10,246,79,255,198,217,178,0,227,225,11,1,78,126,179,255,62,43,126,0,103,148,35,0,129,8,165,254,245,240,148,0,61,51,142,0,81,208,134,0,15,137,115,255,211,119,236,255,159,245,248,255,2,134,136,255,230,139,58,1,160,164,254,0,114,85,141,255,49,166,182,255,144,70,84,1,85,182,7,0,46,53,93,0,9,166,161,255,55,162,178,255,45,184,188,0,146,28,44,254,169,90,49,0,120,178,241,1,14,123,127,255,7,241,199,1,189,66,50,255,198,143,101,254,189,243,135,255,141,24,24,254,75,97,87,0,118,251,154,1,237,54,156,0,171,146,207,255,131,196,246,255,136,64,113,1,151,232,57,0,240,218,115,0,49,61,27,255,64,129,73,1,252,169,27,255,40,132,10,1,90,201,193,255,252,121,240,1,186,206,41,0,43,198,97,0,145,100,183,0,204,216,80,254,172,150,65,0,249,229,196,254,104,123,73,255,77,104,96,254,130,180,8,0,104,123,57,0,220,202,229,255,102,249,211,0,86,14,232,255,182,78,209,0,239,225,164,0,106,13,32,255,120,73,17,255,134,67,233,0,83,254,181,0,183,236,112,1,48,64,131,255,241,216,243,255,65,193,226,0,206,241,100,254,100,134,166,255,237,202,197,0,55,13,81,0,32,124,102,255,40,228,177,0,118,181,31,1,231,160,134,255,119,187,202,0,0,142,60,255,128,38,189,255,166,201,150,0,207,120,26,1,54,184,172,0,12,242,204,254,133,66,230,0,34,38,31,1,184,112,80,0,32,51,165,254,191,243,55,0,58,73,146,254,155,167,205,255,100,104,152,255,197,254,207,255,173,19,247,0,238,10,202,0,239,151,242,0,94,59,39,255,240,29,102,255,10,92,154,255,229,84,219,255,161,129,80,0,208,90,204,1,240,219,174,255,158,102,145,1,53,178,76,255,52,108,168,1,83,222,107,0,211,36,109,0,118,58,56,0,8,29,22,0,237,160,199,0,170,209,157,0,137,71,47,0,143,86,32,0,198,242,2,0,212,48,136,1,92,172,186,0,230,151,105,1,96,191,229,0,138,80,191,254,240,216,130,255,98,43,6,254,168,196,49,0,253,18,91,1,144,73,121,0,61,146,39,1,63,104,24,255,184,165,112,254,126,235,98,0,80,213,98,255,123,60,87,255,82,140,245,1,223,120,173,255,15,198,134,1,206,60,239,0,231,234,92,255,33,238,19,255,165,113,142,1,176,119,38,0,160,43,166,254,239,91,105,0,107,61,194,1,25,4,68,0,15,139,51,0,164,132,106,255,34,116,46,254,168,95,197,0,137,212,23,0,72,156,58,0,137,112,69,254,150,105,154,255,236,201,157,0,23,212,154,255,136,82,227,254,226,59,221,255,95,149,192,0,81,118,52,255,33,43,215,1,14,147,75,255,89,156,121,254,14,18,79,0,147,208,139,1,151,218,62,255,156,88,8,1,210,184,98,255,20,175,123,255,102,83,229,0,220,65,116,1,150,250,4,255,92,142,220,255,34,247,66,255,204,225,179,254,151,81,151,0,71,40,236,255,138,63,62,0,6,79,240,255,183,185,181,0,118,50,27,0,63,227,192,0,123,99,58,1,50,224,155,255,17,225,223,254,220,224,77,255,14,44,123,1,141,128,175,0,248,212,200,0,150,59,183,255,147,97,29,0,150,204,181,0,253,37,71,0,145,85,119,0,154,200,186,0,2,128,249,255,83,24,124,0,14,87,143,0,168,51,245,1,124,151,231,255,208,240,197,1,124,190,185,0,48,58,246,0,20,233,232,0,125,18,98,255,13,254,31,255,245,177,130,255,108,142,35,0,171,125,242,254,140,12,34,255,165,161,162,0,206,205,101,0,247,25,34,1,100,145,57,0,39,70,57,0,118,204,203,255,242,0,162,0,165,244,30,0,198,116,226,0,128,111,153,255,140,54,182,1,60,122,15,255,155,58,57,1,54,50,198,0,171,211,29,255,107,138,167,255,173,107,199,255,109,161,193,0,89,72,242,255,206,115,89,255,250,254,142,254,177,202,94,255,81,89,50,0,7,105,66,255,25,254,255,254,203,64,23,255,79,222,108,255,39,249,75,0,241,124,50,0,239,152,133,0,221,241,105,0,147,151,98,0,213,161,121,254,242,49,137,0,233,37,249,254,42,183,27,0,184,119,230,255,217,32,163,255,208,251,228,1,137,62,131,255,79,64,9,254,94,48,113,0,17,138,50,254,193,255,22,0,247,18,197,1,67,55,104,0,16,205,95,255,48,37,66,0,55,156,63,1,64,82,74,255,200,53,71,254,239,67,125,0,26,224,222,0,223,137,93,255,30,224,202,255,9,220,132,0,198,38,235,1,102,141,86,0,60,43,81,1,136,28,26,0,233,36,8,254,207,242,148,0,164,162,63,0,51,46,224,255,114,48,79,255,9,175,226,0,222,3,193,255,47,160,232,255,255,93,105,254,14,42,230,0,26,138,82,1,208,43,244,0,27,39,38,255,98,208,127,255,64,149,182,255,5,250,209,0,187,60,28,254,49,25,218,255,169,116,205,255,119,18,120,0,156,116,147,255,132,53,109,255,13,10,202,0,110,83,167,0,157,219,137,255,6,3,130,255,50,167,30,255,60,159,47,255,129,128,157,254,94,3,189,0,3,166,68,0,83,223,215,0,150,90,194,1,15,168,65,0,227,83,51,255,205,171,66,255,54,187,60,1,152,102,45,255,119,154,225,0,240,247,136,0,100,197,178,255,139,71,223,255,204,82,16,1,41,206,42,255,156,192,221,255,216,123,244,255,218,218,185,255,187,186,239,255,252,172,160,255,195,52,22,0,144,174,181,254,187,100,115,255,211,78,176,255,27,7,193,0,147,213,104,255,90,201,10,255,80,123,66,1,22,33,186,0,1,7,99,254,30,206,10,0,229,234,5,0,53,30,210,0,138,8,220,254,71,55,167,0,72,225,86,1,118,190,188,0,254,193,101,1,171,249,172,255,94,158,183,254,93,2,108,255,176,93,76,255,73,99,79,255,74,64,129,254,246,46,65,0,99,241,127,254,246,151,102,255,44,53,208,254,59,102,234,0,154,175,164,255,88,242,32,0,111,38,1,0,255,182,190,255,115,176,15,254,169,60,129,0,122,237,241,0,90,76,63,0,62,74,120,255,122,195,110,0,119,4,178,0,222,242,210,0,130,33,46,254,156,40,41,0,167,146,112,1,49,163,111,255,121,176,235,0,76,207,14,255,3,25,198,1,41,235,213,0,85,36,214,1,49,92,109,255,200,24,30,254,168,236,195,0,145,39,124,1,236,195,149,0,90,36,184,255,67,85,170,255,38,35,26,254,131,124,68,255,239,155,35,255,54,201,164,0,196,22,117,255,49,15,205,0,24,224,29,1,126,113,144,0,117,21,182,0,203,159,141,0,223,135,77,0,176,230,176,255,190,229,215,255,99,37,181,255,51,21,138,255,25,189,89,255,49,48,165,254,152,45,247,0,170,108,222,0,80,202,5,0,27,69,103,254,204,22,129,255,180,252,62,254,210,1,91,255,146,110,254,255,219,162,28,0,223,252,213,1,59,8,33,0,206,16,244,0,129,211,48,0,107,160,208,0,112,59,209,0,109,77,216,254,34,21,185,255,246,99,56,255,179,139,19,255,185,29,50,255,84,89,19,0,74,250,98,255,225,42,200,255,192,217,205,255,210,16,167,0,99,132,95,1,43,230,57,0,254,11,203,255,99,188,63,255,119,193,251,254,80,105,54,0,232,181,189,1,183,69,112,255,208,171,165,255,47,109,180,255,123,83,165,0,146,162,52,255,154,11,4,255,151,227,90,255,146,137,97,254,61,233,41,255,94,42,55,255,108,164,236,0,152,68,254,0,10,140,131,255,10,106,79,254,243,158,137,0,67,178,66,254,177,123,198,255,15,62,34,0,197,88,42,255,149,95,177,255,152,0,198,255,149,254,113,255,225,90,163,255,125,217,247,0,18,17,224,0,128,66,120,254,192,25,9,255,50,221,205,0,49,212,70,0,233,255,164,0,2,209,9,0,221,52,219,254,172,224,244,255,94,56,206,1,242,179,2,255,31,91,164,1,230,46,138,255,189,230,220,0,57,47,61,255,111,11,157,0,177,91,152,0,28,230,98,0,97,87,126,0,198,89,145,255,167,79,107,0,249,77,160,1,29,233,230,255,150,21,86,254,60,11,193,0,151,37,36,254,185,150,243,255,228,212,83,1,172,151,180,0,201,169,155,0,244,60,234,0,142,235,4,1,67,218,60,0,192,113,75,1,116,243,207,255,65,172,155,0,81,30,156,255,80,72,33,254,18,231,109,255,142,107,21,254,125,26,132,255,176,16,59,255,150,201,58,0,206,169,201,0,208,121,226,0,40,172,14,255,150,61,94,255,56,57,156,255,141,60,145,255,45,108,149,255,238,145,155,255,209,85,31,254,192,12,210,0,99,98,93,254,152,16,151,0,225,185,220,0,141,235,44,255,160,172,21,254,71,26,31,255,13,64,93,254,28,56,198,0,177,62,248,1,182,8,241,0,166,101,148,255,78,81,133,255,129,222,215,1,188,169,129,255,232,7,97,0,49,112,60,255,217,229,251,0,119,108,138,0,39,19,123,254,131,49,235,0,132,84,145,0,130,230,148,255,25,74,187,0,5,245,54,255,185,219,241,1,18,194,228,255,241,202,102,0,105,113,202,0,155,235,79,0,21,9,178,255,156,1,239,0,200,148,61,0,115,247,210,255,49,221,135,0,58,189,8,1,35,46,9,0,81,65,5,255,52,158,185,255,125,116,46,255,74,140,13,255,210,92,172,254,147,23,71,0,217,224,253,254,115,108,180,255,145,58,48,254,219,177,24,255,156,255,60,1,154,147,242,0,253,134,87,0,53,75,229,0,48,195,222,255,31,175,50,255,156,210,120,255,208,35,222,255,18,248,179,1,2,10,101,255,157,194,248,255,158,204,101,255,104,254,197,255,79,62,4,0,178,172,101,1,96,146,251,255,65,10,156,0,2,137,165,255,116,4,231,0,242,215,1,0,19,35,29,255,43,161,79,0,59,149,246,1,251,66,176,0,200,33,3,255,80,110,142,255,195,161,17,1,228,56,66,255,123,47,145,254,132,4,164,0,67,174,172,0,25,253,114,0,87,97,87,1,250,220,84,0,96,91,200,255,37,125,59,0,19,65,118,0,161,52,241,255,237,172,6,255,176,191,255,255,1,65,130,254,223,190,230,0,101,253,231,255,146,35,109,0,250,29,77,1,49,0,19,0,123,90,155,1,22,86,32,255,218,213,65,0,111,93,127,0,60,93,169,255,8,127,182,0,17,186,14,254,253,137,246,255,213,25,48,254,76,238,0,255,248,92,70,255,99,224,139,0,184,9,255,1,7,164,208,0,205,131,198,1,87,214,199,0,130,214,95,0,221,149,222,0,23,38,171,254,197,110,213,0,43,115,140,254,215,177,118,0,96,52,66,1,117,158,237,0,14,64,182,255,46,63,174,255,158,95,190,255,225,205,177,255,43,5,142,255,172,99,212,255,244,187,147,0,29,51,153,255,228,116,24,254,30,101,207,0,19,246,150,255,134,231,5,0,125,134,226,1,77,65,98,0,236,130,33,255,5,110,62,0,69,108,127,255,7,113,22,0,145,20,83,254,194,161,231,255,131,181,60,0,217,209,177,255,229,148,212,254,3,131,184,0,117,177,187,1,28,14,31,255,176,102,80,0,50,84,151,255,125,31,54,255,21,157,133,255,19,179,139,1,224,232,26,0,34,117,170,255,167,252,171,255,73,141,206,254,129,250,35,0,72,79,236,1,220,229,20,255,41,202,173,255,99,76,238,255,198,22,224,255,108,198,195,255,36,141,96,1,236,158,59,255,106,100,87,0,110,226,2,0,227,234,222,0,154,93,119,255,74,112,164,255,67,91,2,255,21,145,33,255,102,214,137,255,175,230,103,254,163,246,166,0,93,247,116,254,167,224,28,255,220,2,57,1,171,206,84,0,123,228,17,255,27,120,119,0,119,11,147,1,180,47,225,255,104,200,185,254,165,2,114,0,77,78,212,0,45,154,177,255,24,196,121,254,82,157,182,0,90,16,190,1,12,147,197,0,95,239,152,255,11,235,71,0,86,146,119,255,172,134,214,0,60,131,196,0,161,225,129,0,31,130,120,254,95,200,51,0,105,231,210,255,58,9,148,255,43,168,221,255,124,237,142,0,198,211,50,254,46,245,103,0,164,248,84,0,152,70,208,255,180,117,177,0,70,79,185,0,243,74,32,0,149,156,207,0,197,196,161,1,245,53,239,0,15,93,246,254,139,240,49,255,196,88,36,255,162,38,123,0,128,200,157,1,174,76,103,255,173,169,34,254,216,1,171,255,114,51,17,0,136,228,194,0,110,150,56,254,106,246,159,0,19,184,79,255,150,77,240,255,155,80,162,0,0,53,169,255,29,151,86,0,68,94,16,0,92,7,110,254,98,117,149,255,249,77,230,255,253,10,140,0,214,124,92,254,35,118,235,0,89,48,57,1,22,53,166,0,184,144,61,255,179,255,194,0,214,248,61,254,59,110,246,0,121,21,81,254,166,3,228,0,106,64,26,255,69,232,134,255,242,220,53,254,46,220,85,0,113,149,247,255,97,179,103,255,190,127,11,0,135,209,182,0,95,52,129,1,170,144,206,255,122,200,204,255,168,100,146,0,60,144,149,254,70,60,40,0,122,52,177,255,246,211,101,255,174,237,8,0,7,51,120,0,19,31,173,0,126,239,156,255,143,189,203,0,196,128,88,255,233,133,226,255,30,125,173,255,201,108,50,0,123,100,59,255,254,163,3,1,221,148,181,255,214,136,57,254,222,180,137,255,207,88,54,255,28,33,251,255,67,214,52,1,210,208,100,0,81,170,94,0,145,40,53,0,224,111,231,254,35,28,244,255,226,199,195,254,238,17,230,0,217,217,164,254,169,157,221,0,218,46,162,1,199,207,163,255,108,115,162,1,14,96,187,255,118,60,76,0,184,159,152,0,209,231,71,254,42,164,186,255,186,153,51,254,221,171,182,255,162,142,173,0,235,47,193,0,7,139,16,1,95,164,64,255,16,221,166,0,219,197,16,0,132,29,44,255,100,69,117,255,60,235,88,254,40,81,173,0,71,190,61,255,187,88,157,0,231,11,23,0,237,117,164,0,225,168,223,255,154,114,116,255,163,152,242,1,24,32,170,0,125,98,113,254,168,19,76,0,17,157,220,254,155,52,5,0,19,111,161,255,71,90,252,255,173,110,240,0,10,198,121,255,253,255,240,255,66,123,210,0,221,194,215,254,121,163,17,255,225,7,99,0,190,49,182,0,115,9,133,1,232,26,138,255,213,68,132,0,44,119,122,255,179,98,51,0,149,90,106,0,71,50,230,255,10,153,118,255,177,70,25,0,165,87,205,0,55,138,234,0,238,30,97,0,113,155,207,0,98,153,127,0,34,107,219,254,117,114,172,255,76,180,255,254,242,57,179,255,221,34,172,254,56,162,49,255,83,3,255,255,113,221,189,255,188,25,228,254,16,88,89,255,71,28,198,254,22,17,149,255,243,121,254,255,107,202,99,255,9,206,14,1,220,47,153,0,107,137,39,1,97,49,194,255,149,51,197,254,186,58,11,255,107,43,232,1,200,6,14,255,181,133,65,254,221,228,171,255,123,62,231,1,227,234,179,255,34,189,212,254,244,187,249,0,190,13,80,1,130,89,1,0,223,133,173,0,9,222,198,255,66,127,74,0,167,216,93,255,155,168,198,1,66,145,0,0,68,102,46,1,172,90,154,0,216,128,75,255,160,40,51,0,158,17,27,1,124,240,49,0,236,202,176,255,151,124,192,255,38,193,190,0,95,182,61,0,163,147,124,255,255,165,51,255,28,40,17,254,215,96,78,0,86,145,218,254,31,36,202,255,86,9,5,0,111,41,200,255,237,108,97,0,57,62,44,0,117,184,15,1,45,241,116,0,152,1,220,255,157,165,188,0,250,15,131,1,60,44,125,255,65,220,251,255,75,50,184,0,53,90,128,255,231,80,194,255,136,129,127,1,21,18,187,255,45,58,161,255,71,147,34,0,174,249,11,254,35,141,29,0,239,68,177,255,115,110,58,0,238,190,177,1,87,245,166,255,190,49,247,255,146,83,184,255,173,14,39,255,146,215,104,0,142,223,120,0,149,200,155,255,212,207,145,1,16,181,217,0,173,32,87,255,255,35,181,0,119,223,161,1,200,223,94,255,70,6,186,255,192,67,85,255,50,169,152,0,144,26,123,255,56,243,179,254,20,68,136,0,39,140,188,254,253,208,5,255,200,115,135,1,43,172,229,255,156,104,187,0,151,251,167,0,52,135,23,0,151,153,72,0,147,197,107,254,148,158,5,255,238,143,206,0,126,153,137,255,88,152,197,254,7,68,167,0,252,159,165,255,239,78,54,255,24,63,55,255,38,222,94,0,237,183,12,255,206,204,210,0,19,39,246,254,30,74,231,0,135,108,29,1,179,115,0,0,117,118,116,1,132,6,252,255,145,129,161,1,105,67,141,0,82,37,226,255,238,226,228,255,204,214,129,254,162,123,100,255,185,121,234,0,45,108,231,0,66,8,56,255,132,136,128,0,172,224,66,254,175,157,188,0,230,223,226,254,242,219,69,0,184,14,119,1,82,162,56,0,114,123,20,0,162,103,85,255,49,239,99,254,156,135,215,0,111,255,167,254,39,196,214,0,144,38,79,1,249,168,125,0,155,97,156,255,23,52,219,255,150,22,144,0,44,149,165,255,40,127,183,0,196,77,233,255,118,129,210,255,170,135,230,255,214,119,198,0,233,240,35,0,253,52,7,255,117,102,48,255,21,204,154,255,179,136,177,255,23,2,3,1,149,130,89,255,252,17,159,1,70,60,26,0,144,107,17,0,180,190,60,255,56,182,59,255,110,71,54,255,198,18,129,255,149,224,87,255,223,21,152,255,138,22,182,255,250,156,205,0,236,45,208,255,79,148,242,1,101,70,209,0,103,78,174,0,101,144,172,255,152,136,237,1,191,194,136,0,113,80,125,1,152,4,141,0,155,150,53,255,196,116,245,0,239,114,73,254,19,82,17,255,124,125,234,255,40,52,191,0,42,210,158,255,155,132,165,0,178,5,42,1,64,92,40,255,36,85,77,255,178,228,118,0,137,66,96,254,115,226,66,0,110,240,69,254,151,111,80,0,167,174,236,255,227,108,107,255,188,242,65,255,183,81,255,0,57,206,181,255,47,34,181,255,213,240,158,1,71,75,95,0,156,40,24,255,102,210,81,0,171,199,228,255,154,34,41,0,227,175,75,0,21,239,195,0,138,229,95,1,76,192,49,0,117,123,87,1,227,225,130,0,125,62,63,255,2,198,171,0,254,36,13,254,145,186,206,0,148,255,244,255,35,0,166,0,30,150,219,1,92,228,212,0,92,198,60,254,62,133,200,255,201,41,59,0,125,238,109,255,180,163,238,1,140,122,82,0,9,22,88,255,197,157,47,255,153,94,57,0,88,30,182,0,84,161,85,0,178,146,124,0,166,166,7,255,21,208,223,0,156,182,242,0,155,121,185,0,83,156,174,254,154,16,118,255,186,83,232,1,223,58,121,255,29,23,88,0,35,125,127,255,170,5,149,254,164,12,130,255,155,196,29,0,161,96,136,0,7,35,29,1,162,37,251,0,3,46,242,255,0,217,188,0,57,174,226,1,206,233,2,0,57,187,136,254,123,189,9,255,201,117,127,255,186,36,204,0,231,25,216,0,80,78,105,0,19,134,129,255,148,203,68,0,141,81,125,254,248,165,200,255,214,144,135,0,151,55,166,255,38,235,91,0,21,46,154,0,223,254,150,255,35,153,180,255,125,176,29,1,43,98,30,255,216,122,230,255,233,160,12,0,57,185,12,254,240,113,7,255,5,9,16,254,26,91,108,0,109,198,203,0,8,147,40,0,129,134,228,255,124,186,40,255,114,98,132,254,166,132,23,0,99,69,44,0,9,242,238,255,184,53,59,0,132,129,102,255,52,32,243,254,147,223,200,255,123,83,179,254,135,144,201,255,141,37,56,1,151,60,227,255,90,73,156,1,203,172,187,0,80,151,47,255,94,137,231,255,36,191,59,255,225,209,181,255,74,215,213,254,6,118,179,255,153,54,193,1,50,0,231,0,104,157,72,1,140,227,154,255,182,226,16,254,96,225,92,255,115,20,170,254,6,250,78,0,248,75,173,255,53,89,6,255,0,180,118,0,72,173,1,0,64,8,206,1,174,133,223,0,185,62,133,255,214,11,98,0,197,31,208,0,171,167,244,255,22,231,181,1,150,218,185,0,247,169,97,1,165,139,247,255,47,120,149,1,103,248,51,0,60,69,28,254,25,179,196,0,124,7,218,254,58,107,81,0,184,233,156,255,252,74,36,0,118,188,67,0,141,95,53,255,222,94,165,254,46,61,53,0,206,59,115,255,47,236,250,255,74,5,32,1,129,154,238,255,106,32,226,0,121,187,61,255,3,166,241,254,67,170,172,255,29,216,178,255,23,201,252,0,253,110,243,0,200,125,57,0,109,192,96,255,52,115,238,0,38,121,243,255,201,56,33,0,194,118,130,0,75,96,25,255,170,30,230,254,39,63,253,0,36,45,250,255,251,1,239,0,160,212,92,1,45,209,237,0,243,33,87,254,237,84,201,255,212,18,157,254,212,99,127,255,217,98,16,254,139,172,239,0,168,201,130,255,143,193,169,255,238,151,193,1,215,104,41,0,239,61,165,254,2,3,242,0,22,203,177,254,177,204,22,0,149,129,213,254,31,11,41,255,0,159,121,254,160,25,114,255,162,80,200,0,157,151,11,0,154,134,78,1,216,54,252,0,48,103,133,0,105,220,197,0,253,168,77,254,53,179,23,0,24,121,240,1,255,46,96,255,107,60,135,254,98,205,249,255,63,249,119,255,120,59,211,255,114,180,55,254,91,85,237,0,149,212,77,1,56,73,49,0,86,198,150,0,93,209,160,0,69,205,182,255,244,90,43,0,20,36,176,0,122,116,221,0,51,167,39,1,231,1,63,255,13,197,134,0,3,209,34,255,135,59,202,0,167,100,78,0,47,223,76,0,185,60,62,0,178,166,123,1,132,12,161,255,61,174,43,0,195,69,144,0,127,47,191,1,34,44,78,0,57,234,52,1,255,22,40,255,246,94,146,0,83,228,128,0,60,78,224,255,0,96,210,255,153,175,236,0,159,21,73,0,180,115,196,254,131,225,106,0,255,167,134,0,159,8,112,255,120,68,194,255,176,196,198,255,118,48,168,255,93,169,1,0,112,200,102,1,74,24,254,0,19,141,4,254,142,62,63,0,131,179,187,255,77,156,155,255,119,86,164,0,170,208,146,255,208,133,154,255,148,155,58,255,162,120,232,254,252,213,155,0,241,13,42,0,94,50,131,0,179,170,112,0,140,83,151,255,55,119,84,1,140,35,239,255,153,45,67,1,236,175,39,0,54,151,103,255,158,42,65,255,196,239,135,254,86,53,203,0,149,97,47,254,216,35,17,255,70,3,70,1,103,36,90,255,40,26,173,0,184,48,13,0,163,219,217,255,81,6,1,255,221,170,108,254,233,208,93,0,100,201,249,254,86,36,35,255,209,154,30,1,227,201,251,255,2,189,167,254,100,57,3,0,13,128,41,0,197,100,75,0,150,204,235,255,145,174,59,0,120,248,149,255,85,55,225,0,114,210,53,254,199,204,119,0,14,247,74,1,63,251,129,0,67,104,151,1,135,130,80,0,79,89,55,255,117,230,157,255,25,96,143,0,213,145,5,0,69,241,120,1,149,243,95,255,114,42,20,0,131,72,2,0,154,53,20,255,73,62,109,0,196,102,152,0,41,12,204,255,122,38,11,1,250,10,145,0,207,125,148,0,246,244,222,255,41,32,85,1,112,213,126,0,162,249,86,1,71,198,127,255,81,9,21,1,98,39,4,255,204,71,45,1,75,111,137,0,234,59,231,0,32,48,95,255,204,31,114,1,29,196,181,255,51,241,167,254,93,109,142,0,104,144,45,0,235,12,181,255,52,112,164,0,76,254,202,255,174,14,162,0,61,235,147,255,43,64,185,254,233,125,217,0,243,88,167,254,74,49,8,0,156,204,66,0,124,214,123,0,38,221,118,1,146,112,236,0,114,98,177,0,151,89,199,0,87,197,112,0,185,149,161,0,44,96,165,0,248,179,20,255,188,219,216,254,40,62,13,0,243,142,141,0,229,227,206,255,172,202,35,255,117,176,225,255,82,110,38,1,42,245,14,255,20,83,97,0,49,171,10,0,242,119,120,0,25,232,61,0,212,240,147,255,4,115,56,255,145,17,239,254,202,17,251,255,249,18,245,255,99,117,239,0,184,4,179,255,246,237,51,255,37,239,137,255,166,112,166,255,81,188,33,255,185,250,142,255,54,187,173,0,208,112,201,0,246,43,228,1,104,184,88,255,212,52,196,255,51,117,108,255,254,117,155,0,46,91,15,255,87,14,144,255,87,227,204,0,83,26,83,1,159,76,227,0,159,27,213,1,24,151,108,0,117,144,179,254,137,209,82,0,38,159,10,0,115,133,201,0,223,182,156,1,110,196,93,255,57,60,233,0,5,167,105,255,154,197,164,0,96,34,186,255,147,133,37,1,220,99,190,0,1,167,84,255,20,145,171,0,194,197,251,254,95,78,133,255,252,248,243,255,225,93,131,255,187,134,196,255,216,153,170,0,20,118,158,254,140,1,118,0,86,158,15,1,45,211,41,255,147,1,100,254,113,116,76,255,211,127,108,1,103,15,48,0,193,16,102,1,69,51,95,255,107,128,157,0,137,171,233,0,90,124,144,1,106,161,182,0,175,76,236,1,200,141,172,255,163,58,104,0,233,180,52,255,240,253,14,255,162,113,254,255,38,239,138,254,52,46,166,0,241,101,33,254,131,186,156,0,111,208,62,255,124,94,160,255,31,172,254,0,112,174,56,255,188,99,27,255,67,138,251,0,125,58,128,1,156,152,174,255,178,12,247,255,252,84,158,0,82,197,14,254,172,200,83,255,37,39,46,1,106,207,167,0,24,189,34,0,131,178,144,0,206,213,4,0,161,226,210,0,72,51,105,255,97,45,187,255,78,184,223,255,176,29,251,0,79,160,86,255,116,37,178,0,82,77,213,1,82,84,141,255,226,101,212,1,175,88,199,255,245,94,247,1,172,118,109,255,166,185,190,0,131,181,120,0,87,254,93,255,134,240,73,255,32,245,143,255,139,162,103,255,179,98,18,254,217,204,112,0,147,223,120,255,53,10,243,0,166,140,150,0,125,80,200,255,14,109,219,255,91,218,1,255,252,252,47,254,109,156,116,255,115,49,127,1,204,87,211,255,148,202,217,255,26,85,249,255,14,245,134,1,76,89,169,255,242,45,230,0,59,98,172,255,114,73,132,254,78,155,49,255,158,126,84,0,49,175,43,255,16,182,84,255,157,103,35,0,104,193,109,255,67,221,154,0,201,172,1,254,8,162,88,0,165,1,29,255,125,155,229,255,30,154,220,1,103,239,92,0,220,1,109,255,202,198,1,0,94,2,142,1,36,54,44,0,235,226,158,255,170,251,214,255,185,77,9,0,97,74,242,0,219,163,149,255,240,35,118,255,223,114,88,254,192,199,3,0,106,37,24,255,201,161,118,255,97,89,99,1,224,58,103,255,101,199,147,254,222,60,99,0,234,25,59,1,52,135,27,0,102,3,91,254,168,216,235,0,229,232,136,0,104,60,129,0,46,168,238,0,39,191,67,0,75,163,47,0,143,97,98,255,56,216,168,1,168,233,252,255,35,111,22,255,92,84,43,0,26,200,87,1,91,253,152,0,202,56,70,0,142,8,77,0,80,10,175,1,252,199,76,0,22,110,82,255,129,1,194,0,11,128,61,1,87,14,145,255,253,222,190,1,15,72,174,0,85,163,86,254,58,99,44,255,45,24,188,254,26,205,15,0,19,229,210,254,248,67,195,0,99,71,184,0,154,199,37,255,151,243,121,255,38,51,75,255,201,85,130,254,44,65,250,0,57,147,243,254,146,43,59,255,89,28,53,0,33,84,24,255,179,51,18,254,189,70,83,0,11,156,179,1,98,134,119,0,158,111,111,0,119,154,73,255,200,63,140,254,45,13,13,255,154,192,2,254,81,72,42,0,46,160,185,254,44,112,6,0,146,215,149,1,26,176,104,0,68,28,87,1,236,50,153,255,179,128,250,254,206,193,191,255,166,92,137,254,53,40,239,0,210,1,204,254,168,173,35,0,141,243,45,1,36,50,109,255,15,242,194,255,227,159,122,255,176,175,202,254,70,57,72,0,40,223,56,0,208,162,58,255,183,98,93,0,15,111,12,0,30,8,76,255,132,127,246,255,45,242,103,0,69,181,15,255,10,209,30,0,3,179,121,0,241,232,218,1,123,199,88,255,2,210,202,1,188,130,81,255,94,101,208,1,103,36,45,0,76,193,24,1,95,26,241,255,165,162,187,0,36,114,140,0,202,66,5,255,37,56,147,0,152,11,243,1,127,85,232,255,250,135,212,1,185,177,113,0,90,220,75,255,69,248,146,0,50,111,50,0,92,22,80,0,244,36,115,254,163,100,82,255,25,193,6,1,127,61,36,0,253,67,30,254,65,236,170,255,161,17,215,254,63,175,140,0,55,127,4,0,79,112,233,0,109,160,40,0,143,83,7,255,65,26,238,255,217,169,140,255,78,94,189,255,0,147,190,255,147,71,186,254,106,77,127,255,233,157,233,1,135,87,237,255,208,13,236,1,155,109,36,255,180,100,218,0,180,163,18,0,190,110,9,1,17,63,123,255,179,136,180,255,165,123,123,255,144,188,81,254,71,240,108,255,25,112,11,255,227,218,51,255,167,50,234,255,114,79,108,255,31,19,115,255,183,240,99,0,227,87,143,255,72,217,248,255,102,169,95,1,129,149,149,0,238,133,12,1,227,204,35,0,208,115,26,1,102,8,234,0,112,88,143,1,144,249,14,0,240,158,172,254,100,112,119,0,194,141,153,254,40,56,83,255,121,176,46,0,42,53,76,255,158,191,154,0,91,209,92,0,173,13,16,1,5,72,226,255,204,254,149,0,80,184,207,0,100,9,122,254,118,101,171,255,252,203,0,254,160,207,54,0,56,72,249,1,56,140,13,255,10,64,107,254,91,101,52,255,225,181,248,1,139,255,132,0,230,145,17,0,233,56,23,0,119,1,241,255,213,169,151,255,99,99,9,254,185,15,191,255,173,103,109,1,174,13,251,255,178,88,7,254,27,59,68,255,10,33,2,255,248,97,59,0,26,30,146,1,176,147,10,0,95,121,207,1,188,88,24,0,185,94,254,254,115,55,201,0,24,50,70,0,120,53,6,0,142,66,146,0,228,226,249,255,104,192,222,1,173,68,219,0,162,184,36,255,143,102,137,255,157,11,23,0,125,45,98,0,235,93,225,254,56,112,160,255,70,116,243,1,153,249,55,255,129,39,17,1,241,80,244,0,87,69,21,1,94,228,73,255,78,66,65,255,194,227,231,0,61,146,87,255,173,155,23,255,112,116,219,254,216,38,11,255,131,186,133,0,94,212,187,0,100,47,91,0,204,254,175,255,222,18,215,254,173,68,108,255,227,228,79,255,38,221,213,0,163,227,150,254,31,190,18,0,160,179,11,1,10,90,94,255,220,174,88,0,163,211,229,255,199,136,52,0,130,95,221,255,140,188,231,254,139,113,128,255,117,171,236,254,49,220,20,255,59,20,171,255,228,109,188,0,20,225,32,254,195,16,174,0,227,254,136,1,135,39,105,0,150,77,206,255,210,238,226,0,55,212,132,254,239,57,124,0,170,194,93,255,249,16,247,255,24,151,62,255,10,151,10,0,79,139,178,255,120,242,202,0,26,219,213,0,62,125,35,255,144,2,108,255,230,33,83,255,81,45,216,1,224,62,17,0,214,217,125,0,98,153,153,255,179,176,106,254,131,93,138,255,109,62,36,255,178,121,32,255,120,252,70,0,220,248,37,0,204,88,103,1,128,220,251,255,236,227,7,1,106,49,198,255,60,56,107,0,99,114,238,0,220,204,94,1,73,187,1,0,89,154,34,0,78,217,165,255,14,195,249,255,9,230,253,255,205,135,245,0,26,252,7,255,84,205,27,1,134,2,112,0,37,158,32,0,231,91,237,255,191,170,204,255,152,7,222,0,109,192,49,0,193,166,146,255,232,19,181,255,105,142,52,255,103,16,27,1,253,200,165,0,195,217,4,255,52,189,144,255,123,155,160,254,87,130,54,255,78,120,61,255,14,56,41,0,25,41,125,255,87,168,245,0,214,165,70,0,212,169,6,255,219,211,194,254,72,93,164,255,197,33,103,255,43,142,141,0,131,225,172,0,244,105,28,0,68,68,225,0,136,84,13,255,130,57,40,254,139,77,56,0,84,150,53,0,54,95,157,0,144,13,177,254,95,115,186,0,117,23,118,255,244,166,241,255,11,186,135,0,178,106,203,255,97,218,93,0,43,253,45,0,164,152,4,0,139,118,239,0,96,1,24,254,235,153,211,255,168,110,20,255,50,239,176,0,114,41,232,0,193,250,53,0,254,160,111,254,136,122,41,255,97,108,67,0,215,152,23,255,140,209,212,0,42,189,163,0,202,42,50,255,106,106,189,255,190,68,217,255,233,58,117,0,229,220,243,1,197,3,4,0,37,120,54,254,4,156,134,255,36,61,171,254,165,136,100,255,212,232,14,0,90,174,10,0,216,198,65,255,12,3,64,0,116,113,115,255,248,103,8,0,231,125,18,255,160,28,197,0,30,184,35,1,223,73,249,255,123,20,46,254,135,56,37,255,173,13,229,1,119,161,34,255,245,61,73,0,205,125,112,0,137,104,134,0,217,246,30,255,237,142,143,0,65,159,102,255,108,164,190,0,219,117,173,255,34,37,120,254,200,69,80,0,31,124,218,254,74,27,160,255,186,154,199,255,71,199,252,0,104,81,159,1,17,200,39,0,211,61,192,1,26,238,91,0,148,217,12,0,59,91,213,255,11,81,183,255,129,230,122,255,114,203,145,1,119,180,66,255,72,138,180,0,224,149,106,0,119,82,104,255,208,140,43,0,98,9,182,255,205,101,134,255,18,101,38,0,95,197,166,255,203,241,147,0,62,208,145,255,133,246,251,0,2,169,14,0,13,247,184,0,142,7,254,0,36,200,23,255,88,205,223,0,91,129,52,255,21,186,30,0,143,228,210,1,247,234,248,255,230,69,31,254,176,186,135,255,238,205,52,1,139,79,43,0,17,176,217,254,32,243,67,0,242,111,233,0,44,35,9,255,227,114,81,1,4,71,12,255,38,105,191,0,7,117,50,255,81,79,16,0,63,68,65,255,157,36,110,255,77,241,3,255,226,45,251,1,142,25,206,0,120,123,209,1,28,254,238,255,5,128,126,255,91,222,215,255,162,15,191,0,86,240,73,0,135,185,81,254,44,241,163,0,212,219,210,255,112,162,155,0,207,101,118,0,168,72,56,255,196,5,52,0,72,172,242,255,126,22,157,255,146,96,59,255,162,121,152,254,140,16,95,0,195,254,200,254,82,150,162,0,119,43,145,254,204,172,78,255,166,224,159,0,104,19,237,255,245,126,208,255,226,59,213,0,117,217,197,0,152,72,237],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+10240),allocate([220,31,23,254,14,90,231,255,188,212,64,1,60,101,246,255,85,24,86,0,1,177,109,0,146,83,32,1,75,182,192,0,119,241,224,0,185,237,27,255,184,101,82,1,235,37,77,255,253,134,19,0,232,246,122,0,60,106,179,0,195,11,12,0,109,66,235,1,125,113,59,0,61,40,164,0,175,104,240,0,2,47,187,255,50,12,141,0,194,139,181,255,135,250,104,0,97,92,222,255,217,149,201,255,203,241,118,255,79,151,67,0,122,142,218,255,149,245,239,0,138,42,200,254,80,37,97,255,124,112,167,255,36,138,87,255,130,29,147,255,241,87,78,255,204,97,19,1,177,209,22,255,247,227,127,254,99,119,83,255,212,25,198,1,16,179,179,0,145,77,172,254,89,153,14,255,218,189,167,0,107,233,59,255,35,33,243,254,44,112,112,255,161,127,79,1,204,175,10,0,40,21,138,254,104,116,228,0,199,95,137,255,133,190,168,255,146,165,234,1,183,99,39,0,183,220,54,254,255,222,133,0,162,219,121,254,63,239,6,0,225,102,54,255,251,18,246,0,4,34,129,1,135,36,131,0,206,50,59,1,15,97,183,0,171,216,135,255,101,152,43,255,150,251,91,0,38,145,95,0,34,204,38,254,178,140,83,255,25,129,243,255,76,144,37,0,106,36,26,254,118,144,172,255,68,186,229,255,107,161,213,255,46,163,68,255,149,170,253,0,187,17,15,0,218,160,165,255,171,35,246,1,96,13,19,0,165,203,117,0,214,107,192,255,244,123,177,1,100,3,104,0,178,242,97,255,251,76,130,255,211,77,42,1,250,79,70,255,63,244,80,1,105,101,246,0,61,136,58,1,238,91,213,0,14,59,98,255,167,84,77,0,17,132,46,254,57,175,197,255,185,62,184,0,76,64,207,0,172,175,208,254,175,74,37,0,138,27,211,254,148,125,194,0,10,89,81,0,168,203,101,255,43,213,209,1,235,245,54,0,30,35,226,255,9,126,70,0,226,125,94,254,156,117,20,255,57,248,112,1,230,48,64,255,164,92,166,1,224,214,230,255,36,120,143,0,55,8,43,255,251,1,245,1,106,98,165,0,74,107,106,254,53,4,54,255,90,178,150,1,3,120,123,255,244,5,89,1,114,250,61,255,254,153,82,1,77,15,17,0,57,238,90,1,95,223,230,0,236,52,47,254,103,148,164,255,121,207,36,1,18,16,185,255,75,20,74,0,187,11,101,0,46,48,129,255,22,239,210,255,77,236,129,255,111,77,204,255,61,72,97,255,199,217,251,255,42,215,204,0,133,145,201,255,57,230,146,1,235,100,198,0,146,73,35,254,108,198,20,255,182,79,210,255,82,103,136,0,246,108,176,0,34,17,60,255,19,74,114,254,168,170,78,255,157,239,20,255,149,41,168,0,58,121,28,0,79,179,134,255,231,121,135,255,174,209,98,255,243,122,190,0,171,166,205,0,212,116,48,0,29,108,66,255,162,222,182,1,14,119,21,0,213,39,249,255,254,223,228,255,183,165,198,0,133,190,48,0,124,208,109,255,119,175,85,255,9,209,121,1,48,171,189,255,195,71,134,1,136,219,51,255,182,91,141,254,49,159,72,0,35,118,245,255,112,186,227,255,59,137,31,0,137,44,163,0,114,103,60,254,8,213,150,0,162,10,113,255,194,104,72,0,220,131,116,255,178,79,92,0,203,250,213,254,93,193,189,255,130,255,34,254,212,188,151,0,136,17,20,255,20,101,83,255,212,206,166,0,229,238,73,255,151,74,3,255,168,87,215,0,155,188,133,255,166,129,73,0,240,79,133,255,178,211,81,255,203,72,163,254,193,168,165,0,14,164,199,254,30,255,204,0,65,72,91,1,166,74,102,255,200,42,0,255,194,113,227,255,66,23,208,0,229,216,100,255,24,239,26,0,10,233,62,255,123,10,178,1,26,36,174,255,119,219,199,1,45,163,190,0,16,168,42,0,166,57,198,255,28,26,26,0,126,165,231,0,251,108,100,255,61,229,121,255,58,118,138,0,76,207,17,0,13,34,112,254,89,16,168,0,37,208,105,255,35,201,215,255,40,106,101,254,6,239,114,0,40,103,226,254,246,127,110,255,63,167,58,0,132,240,142,0,5,158,88,255,129,73,158,255,94,89,146,0,230,54,146,0,8,45,173,0,79,169,1,0,115,186,247,0,84,64,131,0,67,224,253,255,207,189,64,0,154,28,81,1,45,184,54,255,87,212,224,255,0,96,73,255,129,33,235,1,52,66,80,255,251,174,155,255,4,179,37,0,234,164,93,254,93,175,253,0,198,69,87,255,224,106,46,0,99,29,210,0,62,188,114,255,44,234,8,0,169,175,247,255,23,109,137,255,229,182,39,0,192,165,94,254,245,101,217,0,191,88,96,0,196,94,99,255,106,238,11,254,53,126,243,0,94,1,101,255,46,147,2,0,201,124,124,255,141,12,218,0,13,166,157,1,48,251,237,255,155,250,124,255,106,148,146,255,182,13,202,0,28,61,167,0,217,152,8,254,220,130,45,255,200,230,255,1,55,65,87,255,93,191,97,254,114,251,14,0,32,105,92,1,26,207,141,0,24,207,13,254,21,50,48,255,186,148,116,255,211,43,225,0,37,34,162,254,164,210,42,255,68,23,96,255,182,214,8,255,245,117,137,255,66,195,50,0,75,12,83,254,80,140,164,0,9,165,36,1,228,110,227,0,241,17,90,1,25,52,212,0,6,223,12,255,139,243,57,0,12,113,75,1,246,183,191,255,213,191,69,255,230,15,142,0,1,195,196,255,138,171,47,255,64,63,106,1,16,169,214,255,207,174,56,1,88,73,133,255,182,133,140,0,177,14,25,255,147,184,53,255,10,227,161,255,120,216,244,255,73,77,233,0,157,238,139,1,59,65,233,0,70,251,216,1,41,184,153,255,32,203,112,0,146,147,253,0,87,101,109,1,44,82,133,255,244,150,53,255,94,152,232,255,59,93,39,255,88,147,220,255,78,81,13,1,32,47,252,255,160,19,114,255,93,107,39,255,118,16,211,1,185,119,209,255,227,219,127,254,88,105,236,255,162,110,23,255,36,166,110,255,91,236,221,255,66,234,116,0,111,19,244,254,10,233,26,0,32,183,6,254,2,191,242,0,218,156,53,254,41,60,70,255,168,236,111,0,121,185,126,255,238,142,207,255,55,126,52,0,220,129,208,254,80,204,164,255,67,23,144,254,218,40,108,255,127,202,164,0,203,33,3,255,2,158,0,0,37,96,188,255,192,49,74,0,109,4,0,0,111,167,10,254,91,218,135,255,203,66,173,255,150,194,226,0,201,253,6,255,174,102,121,0,205,191,110,0,53,194,4,0,81,40,45,254,35,102,143,255,12,108,198,255,16,27,232,255,252,71,186,1,176,110,114,0,142,3,117,1,113,77,142,0,19,156,197,1,92,47,252,0,53,232,22,1,54,18,235,0,46,35,189,255,236,212,129,0,2,96,208,254,200,238,199,255,59,175,164,255,146,43,231,0,194,217,52,255,3,223,12,0,138,54,178,254,85,235,207,0,232,207,34,0,49,52,50,255,166,113,89,255,10,45,216,255,62,173,28,0,111,165,246,0,118,115,91,255,128,84,60,0,167,144,203,0,87,13,243,0,22,30,228,1,177,113,146,255,129,170,230,254,252,153,129,255,145,225,43,0,70,231,5,255,122,105,126,254,86,246,148,255,110,37,154,254,209,3,91,0,68,145,62,0,228,16,165,255,55,221,249,254,178,210,91,0,83,146,226,254,69,146,186,0,93,210,104,254,16,25,173,0,231,186,38,0,189,122,140,255,251,13,112,255,105,110,93,0,251,72,170,0,192,23,223,255,24,3,202,1,225,93,228,0,153,147,199,254,109,170,22,0,248,101,246,255,178,124,12,255,178,254,102,254,55,4,65,0,125,214,180,0,183,96,147,0,45,117,23,254,132,191,249,0,143,176,203,254,136,183,54,255,146,234,177,0,146,101,86,255,44,123,143,1,33,209,152,0,192,90,41,254,83,15,125,255,213,172,82,0,215,169,144,0,16,13,34,0,32,209,100,255,84,18,249,1,197,17,236,255,217,186,230,0,49,160,176,255,111,118,97,255,237,104,235,0,79,59,92,254,69,249,11,255,35,172,74,1,19,118,68,0,222,124,165,255,180,66,35,255,86,174,246,0,43,74,111,255,126,144,86,255,228,234,91,0,242,213,24,254,69,44,235,255,220,180,35,0,8,248,7,255,102,47,92,255,240,205,102,255,113,230,171,1,31,185,201,255,194,246,70,255,122,17,187,0,134,70,199,255,149,3,150,255,117,63,103,0,65,104,123,255,212,54,19,1,6,141,88,0,83,134,243,255,136,53,103,0,169,27,180,0,177,49,24,0,111,54,167,0,195,61,215,255,31,1,108,1,60,42,70,0,185,3,162,255,194,149,40,255,246,127,38,254,190,119,38,255,61,119,8,1,96,161,219,255,42,203,221,1,177,242,164,255,245,159,10,0,116,196,0,0,5,93,205,254,128,127,179,0,125,237,246,255,149,162,217,255,87,37,20,254,140,238,192,0,9,9,193,0,97,1,226,0,29,38,10,0,0,136,63,255,229,72,210,254,38,134,92,255,78,218,208,1,104,36,84,255,12,5,193,255,242,175,61,255,191,169,46,1,179,147,147,255,113,190,139,254,125,172,31,0,3,75,252,254,215,36,15,0,193,27,24,1,255,69,149,255,110,129,118,0,203,93,249,0,138,137,64,254,38,70,6,0,153,116,222,0,161,74,123,0,193,99,79,255,118,59,94,255,61,12,43,1,146,177,157,0,46,147,191,0,16,255,38,0,11,51,31,1,60,58,98,255,111,194,77,1,154,91,244,0,140,40,144,1,173,10,251,0,203,209,50,254,108,130,78,0,228,180,90,0,174,7,250,0,31,174,60,0,41,171,30,0,116,99,82,255,118,193,139,255,187,173,198,254,218,111,56,0,185,123,216,0,249,158,52,0,52,180,93,255,201,9,91,255,56,45,166,254,132,155,203,255,58,232,110,0,52,211,89,255,253,0,162,1,9,87,183,0,145,136,44,1,94,122,245,0,85,188,171,1,147,92,198,0,0,8,104,0,30,95,174,0,221,230,52,1,247,247,235,255,137,174,53,255,35,21,204,255,71,227,214,1,232,82,194,0,11,48,227,255,170,73,184,255,198,251,252,254,44,112,34,0,131,101,131,255,72,168,187,0,132,135,125,255,138,104,97,255,238,184,168,255,243,104,84,255,135,216,226,255,139,144,237,0,188,137,150,1,80,56,140,255,86,169,167,255,194,78,25,255,220,17,180,255,17,13,193,0,117,137,212,255,141,224,151,0,49,244,175,0,193,99,175,255,19,99,154,1,255,65,62,255,156,210,55,255,242,244,3,255,250,14,149,0,158,88,217,255,157,207,134,254,251,232,28,0,46,156,251,255,171,56,184,255,239,51,234,0,142,138,131,255,25,254,243,1,10,201,194,0,63,97,75,0,210,239,162,0,192,200,31,1,117,214,243,0,24,71,222,254,54,40,232,255,76,183,111,254,144,14,87,255,214,79,136,255,216,196,212,0,132,27,140,254,131,5,253,0,124,108,19,255,28,215,75,0,76,222,55,254,233,182,63,0,68,171,191,254,52,111,222,255,10,105,77,255,80,170,235,0,143,24,88,255,45,231,121,0,148,129,224,1,61,246,84,0,253,46,219,255,239,76,33,0,49,148,18,254,230,37,69,0,67,134,22,254,142,155,94,0,31,157,211,254,213,42,30,255,4,228,247,254,252,176,13,255,39,0,31,254,241,244,255,255,170,45,10,254,253,222,249,0,222,114,132,0,255,47,6,255,180,163,179,1,84,94,151,255,89,209,82,254,229,52,169,255,213,236,0,1,214,56,228,255,135,119,151,255,112,201,193,0,83,160,53,254,6,151,66,0,18,162,17,0,233,97,91,0,131,5,78,1,181,120,53,255,117,95,63,255,237,117,185,0,191,126,136,255,144,119,233,0,183,57,97,1,47,201,187,255,167,165,119,1,45,100,126,0,21,98,6,254,145,150,95,255,120,54,152,0,209,98,104,0,143,111,30,254,184,148,249,0,235,216,46,0,248,202,148,255,57,95,22,0,242,225,163,0,233,247,232,255,71,171,19,255,103,244,49,255,84,103,93,255,68,121,244,1,82,224,13,0,41,79,43,255,249,206,167,255,215,52,21,254,192,32,22,255,247,111,60,0,101,74,38,255,22,91,84,254,29,28,13,255,198,231,215,254,244,154,200,0,223,137,237,0,211,132,14,0,95,64,206,255,17,62,247,255,233,131,121,1,93,23,77,0,205,204,52,254,81,189,136,0,180,219,138,1,143,18,94,0,204,43,140,254,188,175,219,0,111,98,143,255,151,63,162,255,211,50,71,254,19,146,53,0,146,45,83,254,178,82,238,255,16,133,84,255,226,198,93,255,201,97,20,255,120,118,35,255,114,50,231,255,162,229,156,255,211,26,12,0,114,39,115,255,206,212,134,0,197,217,160,255,116,129,94,254,199,215,219,255,75,223,249,1,253,116,181,255,232,215,104,255,228,130,246,255,185,117,86,0,14,5,8,0,239,29,61,1,237,87,133,255,125,146,137,254,204,168,223,0,46,168,245,0,154,105,22,0,220,212,161,255,107,69,24,255,137,218,181,255,241,84,198,255,130,122,211,255,141,8,153,255,190,177,118,0,96,89,178,0,255,16,48,254,122,96,105,255,117,54,232,255,34,126,105,255,204,67,166,0,232,52,138,255,211,147,12,0,25,54,7,0,44,15,215,254,51,236,45,0,190,68,129,1,106,147,225,0,28,93,45,254,236,141,15,255,17,61,161,0,220,115,192,0,236,145,24,254,111,168,169,0,224,58,63,255,127,164,188,0,82,234,75,1,224,158,134,0,209,68,110,1,217,166,217,0,70,225,166,1,187,193,143,255,16,7,88,255,10,205,140,0,117,192,156,1,17,56,38,0,27,124,108,1,171,215,55,255,95,253,212,0,155,135,168,255,246,178,153,254,154,68,74,0,232,61,96,254,105,132,59,0,33,76,199,1,189,176,130,255,9,104,25,254,75,198,102,255,233,1,112,0,108,220,20,255,114,230,70,0,140,194,133,255,57,158,164,254,146,6,80,255,169,196,97,1,85,183,130,0,70,158,222,1,59,237,234,255,96,25,26,255,232,175,97,255,11,121,248,254,88,35,194,0,219,180,252,254,74,8,227,0,195,227,73,1,184,110,161,255,49,233,164,1,128,53,47,0,82,14,121,255,193,190,58,0,48,174,117,255,132,23,32,0,40,10,134,1,22,51,25,255,240,11,176,255,110,57,146,0,117,143,239,1,157,101,118,255,54,84,76,0,205,184,18,255,47,4,72,255,78,112,85,255,193,50,66,1,93,16,52,255,8,105,134,0,12,109,72,255,58,156,251,0,144,35,204,0,44,160,117,254,50,107,194,0,1,68,165,255,111,110,162,0,158,83,40,254,76,214,234,0,58,216,205,255,171,96,147,255,40,227,114,1,176,227,241,0,70,249,183,1,136,84,139,255,60,122,247,254,143,9,117,255,177,174,137,254,73,247,143,0,236,185,126,255,62,25,247,255,45,64,56,255,161,244,6,0,34,57,56,1,105,202,83,0,128,147,208,0,6,103,10,255,74,138,65,255,97,80,100,255,214,174,33,255,50,134,74,255,110,151,130,254,111,84,172,0,84,199,75,254,248,59,112,255,8,216,178,1,9,183,95,0,238,27,8,254,170,205,220,0,195,229,135,0,98,76,237,255,226,91,26,1,82,219,39,255,225,190,199,1,217,200,121,255,81,179,8,255,140,65,206,0,178,207,87,254,250,252,46,255,104,89,110,1,253,189,158,255,144,214,158,255,160,245,54,255,53,183,92,1,21,200,194,255,146,33,113,1,209,1,255,0,235,106,43,255,167,52,232,0,157,229,221,0,51,30,25,0,250,221,27,1,65,147,87,255,79,123,196,0,65,196,223,255,76,44,17,1,85,241,68,0,202,183,249,255,65,212,212,255,9,33,154,1,71,59,80,0,175,194,59,255,141,72,9,0,100,160,244,0,230,208,56,0,59,25,75,254,80,194,194,0,18,3,200,254,160,159,115,0,132,143,247,1,111,93,57,255,58,237,11,1,134,222,135,255,122,163,108,1,123,43,190,255,251,189,206,254,80,182,72,255,208,246,224,1,17,60,9,0,161,207,38,0,141,109,91,0,216,15,211,255,136,78,110,0,98,163,104,255,21,80,121,255,173,178,183,1,127,143,4,0,104,60,82,254,214,16,13,255,96,238,33,1,158,148,230,255,127,129,62,255,51,255,210,255,62,141,236,254,157,55,224,255,114,39,244,0,192,188,250,255,228,76,53,0,98,84,81,255,173,203,61,254,147,50,55,255,204,235,191,0,52,197,244,0,88,43,211,254,27,191,119,0,188,231,154,0,66,81,161,0,92,193,160,1,250,227,120,0,123,55,226,0,184,17,72,0,133,168,10,254,22,135,156,255,41,25,103,255,48,202,58,0,186,149,81,255,188,134,239,0,235,181,189,254,217,139,188,255,74,48,82,0,46,218,229,0,189,253,251,0,50,229,12,255,211,141,191,1,128,244,25,255,169,231,122,254,86,47,189,255,132,183,23,255,37,178,150,255,51,137,253,0,200,78,31,0,22,105,50,0,130,60,0,0,132,163,91,254,23,231,187,0,192,79,239,0,157,102,164,255,192,82,20,1,24,181,103,255,240,9,234,0,1,123,164,255,133,233,0,255,202,242,242,0,60,186,245,0,241,16,199,255,224,116,158,254,191,125,91,255,224,86,207,0,121,37,231,255,227,9,198,255,15,153,239,255,121,232,217,254,75,112,82,0,95,12,57,254,51,214,105,255,148,220,97,1,199,98,36,0,156,209,12,254,10,212,52,0,217,180,55,254,212,170,232,255,216,20,84,255,157,250,135,0,157,99,127,254,1,206,41,0,149,36,70,1,54,196,201,255,87,116,0,254,235,171,150,0,27,163,234,0,202,135,180,0,208,95,0,254,123,156,93,0,183,62,75,0,137,235,182,0,204,225,255,255,214,139,210,255,2,115,8,255,29,12,111,0,52,156,1,0,253,21,251,255,37,165,31,254,12,130,211,0,106,18,53,254,42,99,154,0,14,217,61,254,216,11,92,255,200,197,112,254,147,38,199,0,36,252,120,254,107,169,77,0,1,123,159,255,207,75,102,0,163,175,196,0,44,1,240,0,120,186,176,254,13,98,76,255,237,124,241,255,232,146,188,255,200,96,224,0,204,31,41,0,208,200,13,0,21,225,96,255,175,156,196,0,247,208,126,0,62,184,244,254,2,171,81,0,85,115,158,0,54,64,45,255,19,138,114,0,135,71,205,0,227,47,147,1,218,231,66,0,253,209,28,0,244,15,173,255,6,15,118,254,16,150,208,255,185,22,50,255,86,112,207,255,75,113,215,1,63,146,43,255,4,225,19,254,227,23,62,255,14,255,214,254,45,8,205,255,87,197,151,254,210,82,215,255,245,248,247,255,128,248,70,0,225,247,87,0,90,120,70,0,213,245,92,0,13,133,226,0,47,181,5,1,92,163,105,255,6,30,133,254,232,178,61,255,230,149,24,255,18,49,158,0,228,100,61,254,116,243,251,255,77,75,92,1,81,219,147,255,76,163,254,254,141,213,246,0,232,37,152,254,97,44,100,0,201,37,50,1,212,244,57,0,174,171,183,255,249,74,112,0,166,156,30,0,222,221,97,255,243,93,73,254,251,101,100,255,216,217,93,255,254,138,187,255,142,190,52,255,59,203,177,255,200,94,52,0,115,114,158,255,165,152,104,1,126,99,226,255,118,157,244,1,107,200,16,0,193,90,229,0,121,6,88,0,156,32,93,254,125,241,211,255,14,237,157,255,165,154,21,255,184,224,22,255,250,24,152,255,113,77,31,0,247,171,23,255,237,177,204,255,52,137,145,255,194,182,114,0,224,234,149,0,10,111,103,1,201,129,4,0,238,142,78,0,52,6,40,255,110,213,165,254,60,207,253,0,62,215,69,0,96,97,0,255,49,45,202,0,120,121,22,255,235,139,48,1,198,45,34,255,182,50,27,1,131,210,91,255,46,54,128,0,175,123,105,255,198,141,78,254,67,244,239,255,245,54,103,254,78,38,242,255,2,92,249,254,251,174,87,255,139,63,144,0,24,108,27,255,34,102,18,1,34,22,152,0,66,229,118,254,50,143,99,0,144,169,149,1,118,30,152,0,178,8,121,1,8,159,18,0,90,101,230,255,129,29,119,0,68,36,11,1,232,183,55,0,23,255,96,255,161,41,193,255,63,139,222,0,15,179,243,0,255,100,15,255,82,53,135,0,137,57,149,1,99,240,170,255,22,230,228,254,49,180,82,255,61,82,43,0,110,245,217,0,199,125,61,0,46,253,52,0,141,197,219,0,211,159,193,0,55,121,105,254,183,20,129,0,169,119,170,255,203,178,139,255,135,40,182,255,172,13,202,255,65,178,148,0,8,207,43,0,122,53,127,1,74,161,48,0,227,214,128,254,86,11,243,255,100,86,7,1,245,68,134,255,61,43,21,1,152,84,94,255,190,60,250,254,239,118,232,255,214,136,37,1,113,76,107,255,93,104,100,1,144,206,23,255,110,150,154,1,228,103,185,0,218,49,50,254,135,77,139,255,185,1,78,0,0,161,148,255,97,29,233,255,207,148,149,255,160,168,0,0,91,128,171,255,6,28,19,254,11,111,247,0,39,187,150,255,138,232,149,0,117,62,68,255,63,216,188,255,235,234,32,254,29,57,160,255,25,12,241,1,169,60,191,0,32,131,141,255,237,159,123,255,94,197,94,254,116,254,3,255,92,179,97,254,121,97,92,255,170,112,14,0,21,149,248,0,248,227,3,0,80,96,109,0,75,192,74,1,12,90,226,255,161,106,68,1,208,114,127,255,114,42,255,254,74,26,74,255,247,179,150,254,121,140,60,0,147,70,200,255,214,40,161,255,161,188,201,255,141,65,135,255,242,115,252,0,62,47,202,0,180,149,255,254,130,55,237,0,165,17,186,255,10,169,194,0,156,109,218,255,112,140,123,255,104,128,223,254,177,142,108,255,121,37,219,255,128,77,18,255,111,108,23,1,91,192,75,0,174,245,22,255,4,236,62,255,43,64,153,1,227,173,254,0,237,122,132,1,127,89,186,255,142,82,128,254,252,84,174,0,90,179,177,1,243,214,87,255,103,60,162,255,208,130,14,255,11,130,139,0,206,129,219,255,94,217,157,255,239,230,230,255,116,115,159,254,164,107,95,0,51,218,2,1,216,125,198,255,140,202,128,254,11,95,68,255,55,9,93,254,174,153,6,255,204,172,96,0,69,160,110,0,213,38,49,254,27,80,213,0,118,125,114,0,70,70,67,255,15,142,73,255,131,122,185,255,243,20,50,254,130,237,40,0,210,159,140,1,197,151,65,255,84,153,66,0,195,126,90,0,16,238,236,1,118,187,102,255,3,24,133,255,187,69,230,0,56,197,92,1,213,69,94,255,80,138,229,1,206,7,230,0,222,111,230,1,91,233,119,255,9,89,7,1,2,98,1,0,148,74,133,255,51,246,180,255,228,177,112,1,58,189,108,255,194,203,237,254,21,209,195,0,147,10,35,1,86,157,226,0,31,163,139,254,56,7,75,255,62,90,116,0,181,60,169,0,138,162,212,254,81,167,31,0,205,90,112,255,33,112,227,0,83,151,117,1,177,224,73,255,174,144,217,255,230,204,79,255,22,77,232,255,114,78,234,0,224,57,126,254,9,49,141,0,242,147,165,1,104,182,140,255,167,132,12,1,123,68,127,0,225,87,39,1,251,108,8,0,198,193,143,1,121,135,207,255,172,22,70,0,50,68,116,255,101,175,40,255,248,105,233,0,166,203,7,0,110,197,218,0,215,254,26,254,168,226,253,0,31,143,96,0,11,103,41,0,183,129,203,254,100,247,74,255,213,126,132,0,210,147,44,0,199,234,27,1,148,47,181,0,155,91,158,1,54,105,175,255,2,78,145,254,102,154,95,0,128,207,127,254,52,124,236,255,130,84,71,0,221,243,211,0,152,170,207,0,222,106,199,0,183,84,94,254,92,200,56,255,138,182,115,1,142,96,146,0,133,136,228,0,97,18,150,0,55,251,66,0,140,102,4,0,202,103,151,0,30,19,248,255,51,184,207,0,202,198,89,0,55,197,225,254,169,95,249,255,66,65,68,255,188,234,126,0,166,223,100,1,112,239,244,0,144,23,194,0,58,39,182,0,244,44,24,254,175,68,179,255,152,118,154,1,176,162,130,0,217,114,204,254,173,126,78,255,33,222,30,255,36,2,91,255,2,143,243,0,9,235,215,0,3,171,151,1,24,215,245,255,168,47,164,254,241,146,207,0,69,129,180,0,68,243,113,0,144,53,72,254,251,45,14,0,23,110,168,0,68,68,79,255,110,70,95,254,174,91,144,255,33,206,95,255,137,41,7,255,19,187,153,254,35,255,112,255,9,145,185,254,50,157,37,0,11,112,49,1,102,8,190,255,234,243,169,1,60,85,23,0,74,39,189,0,116,49,239,0,173,213,210,0,46,161,108,255,159,150,37,0,196,120,185,255,34,98,6,255,153,195,62,255,97,230,71,255,102,61,76,0,26,212,236,255,164,97,16,0,198,59,146,0,163,23,196,0,56,24,61,0,181,98,193,0,251,147,229,255,98,189,24,255,46,54,206,255,234,82,246,0,183,103,38,1,109,62,204,0,10,240,224,0,146,22,117,255,142,154,120,0,69,212,35,0,208,99,118,1,121,255,3,255,72,6,194,0,117,17,197,255,125,15,23,0,154,79,153,0,214,94,197,255,185,55,147,255,62,254,78,254,127,82,153,0,110,102,63,255,108,82,161,255,105,187,212,1,80,138,39,0,60,255,93,255,72,12,186,0,210,251,31,1,190,167,144,255,228,44,19,254,128,67,232,0,214,249,107,254,136,145,86,255,132,46,176,0,189,187,227,255,208,22,140,0,217,211,116,0,50,81,186,254,139,250,31,0,30,64,198,1,135,155,100,0,160,206,23,254,187,162,211,255,16,188,63,0,254,208,49,0,85,84,191,0,241,192,242,255,153,126,145,1,234,162,162,255,230,97,216,1,64,135,126,0,190,148,223,1,52,0,43,255,28,39,189,1,64,136,238,0,175,196,185,0,98,226,213,255,127,159,244,1,226,175,60,0,160,233,142,1,180,243,207,255,69,152,89,1,31,101,21,0,144,25,164,254,139,191,209,0,91,25,121,0,32,147,5,0,39,186,123,255,63,115,230,255,93,167,198,255,143,213,220,255,179,156,19,255,25,66,122,0,214,160,217,255,2,45,62,255,106,79,146,254,51,137,99,255,87,100,231,255,175,145,232,255,101,184,1,255,174,9,125,0,82,37,161,1,36,114,141,255,48,222,142,255,245,186,154,0,5,174,221,254,63,114,155,255,135,55,160,1,80,31,135,0,126,250,179,1,236,218,45,0,20,28,145,1,16,147,73,0,249,189,132,1,17,189,192,255,223,142,198,255,72,20,15,255,250,53,237,254,15,11,18,0,27,211,113,254,213,107,56,255,174,147,146,255,96,126,48,0,23,193,109,1,37,162,94,0,199,157,249,254,24,128,187,255,205,49,178,254,93,164,42,255,43,119,235,1,88,183,237,255,218,210,1,255,107,254,42,0,230,10,99,255,162,0,226,0,219,237,91,0,129,178,203,0,208,50,95,254,206,208,95,255,247,191,89,254,110,234,79,255,165,61,243,0,20,122,112,255,246,246,185,254,103,4,123,0,233,99,230,1,219,91,252,255,199,222,22,255,179,245,233,255,211,241,234,0,111,250,192,255,85,84,136,0,101,58,50,255,131,173,156,254,119,45,51,255,118,233,16,254,242,90,214,0,94,159,219,1,3,3,234,255,98,76,92,254,80,54,230,0,5,228,231,254,53,24,223,255,113,56,118,1,20,132,1,255,171,210,236,0,56,241,158,255,186,115,19,255,8,229,174,0,48,44,0,1,114,114,166,255,6,73,226,255,205,89,244,0,137,227,75,1,248,173,56,0,74,120,246,254,119,3,11,255,81,120,198,255,136,122,98,255,146,241,221,1,109,194,78,255,223,241,70,1,214,200,169,255,97,190,47,255,47,103,174,255,99,92,72,254,118,233,180,255,193,35,233,254,26,229,32,255,222,252,198,0,204,43,71,255,199,84,172,0,134,102,190,0,111,238,97,254,230,40,230,0,227,205,64,254,200,12,225,0,166,25,222,0,113,69,51,255,143,159,24,0,167,184,74,0,29,224,116,254,158,208,233,0,193,116,126,255,212,11,133,255,22,58,140,1,204,36,51,255,232,30,43,0,235,70,181,255,64,56,146,254,169,18,84,255,226,1,13,255,200,50,176,255,52,213,245,254,168,209,97,0,191,71,55,0,34,78,156,0,232,144,58,1,185,74,189,0,186,142,149,254,64,69,127,255,161,203,147,255,176,151,191,0,136,231,203,254,163,182,137,0,161,126,251,254,233,32,66,0,68,207,66,0,30,28,37,0,93,114,96,1,254,92,247,255,44,171,69,0,202,119,11,255,188,118,50,1,255,83,136,255,71,82,26,0,70,227,2,0,32,235,121,1,181,41,154,0,71,134,229,254,202,255,36,0,41,152,5,0,154,63,73,255,34,182,124,0,121,221,150,255,26,204,213,1,41,172,87,0,90,157,146,255,109,130,20,0,71,107,200,255,243,102,189,0,1,195,145,254,46,88,117,0,8,206,227,0,191,110,253,255,109,128,20,254,134,85,51,255,137,177,112,1,216,34,22,255,131,16,208,255,121,149,170,0,114,19,23,1,166,80,31,255,113,240,122,0,232,179,250,0,68,110,180,254,210,170,119,0,223,108,164,255,207,79,233,255,27,229,226,254,209,98,81,255,79,68,7,0,131,185,100,0,170,29,162,255,17,162,107,255,57,21,11,1,100,200,181,255,127,65,166,1,165,134,204,0,104,167,168,0,1,164,79,0,146,135,59,1,70,50,128,255,102,119,13,254,227,6,135,0,162,142,179,255,160,100,222,0,27,224,219,1,158,93,195,255,234,141,137,0,16,24,125,255,238,206,47,255,97,17,98,255,116,110,12,255,96,115,77,0,91,227,232,255,248,254,79,255,92,229,6,254,88,198,139,0,206,75,129,0,250,77,206,255,141,244,123,1,138,69,220,0,32,151,6,1,131,167,22,255,237,68,167,254,199,189,150,0,163,171,138,255,51,188,6,255,95,29,137,254,148,226,179,0,181,107,208,255,134,31,82,255,151,101,45,255,129,202,225,0,224,72,147,0,48,138,151,255,195,64,206,254,237,218,158,0,106,29,137,254,253,189,233,255,103,15,17,255,194,97,255,0,178,45,169,254,198,225,155,0,39,48,117,255,135,106,115,0,97,38,181,0,150,47,65,255,83,130,229,254,246,38,129,0,92,239,154,254,91,99,127,0,161,111,33,255,238,217,242,255,131,185,195,255,213,191,158,255,41,150,218,0,132,169,131,0,89,84,252,1,171,70,128,255,163,248,203,254,1,50,180,255,124,76,85,1,251,111,80,0,99,66,239,255,154,237,182,255,221,126,133,254,74,204,99,255,65,147,119,255,99,56,167,255,79,248,149,255,116,155,228,255,237,43,14,254,69,137,11,255,22,250,241,1,91,122,143,255,205,249,243,0,212,26,60,255,48,182,176,1,48,23,191,255,203,121,152,254,45,74,213,255,62,90,18,254,245,163,230,255,185,106,116,255,83,35,159,0,12,33,2,255,80,34,62,0,16,87,174,255,173,101,85,0,202,36,81,254,160,69,204,255,64,225,187,0,58,206,94,0,86,144,47,0,229,86,245,0,63,145,190,1,37,5,39,0,109,251,26,0,137,147,234,0,162,121,145,255,144,116,206,255,197,232,185,255,183,190,140,255,73,12,254,255,139,20,242,255,170,90,239,255,97,66,187,255,245,181,135,254,222,136,52,0,245,5,51,254,203,47,78,0,152,101,216,0,73,23,125,0,254,96,33,1,235,210,73,255,43,209,88,1,7,129,109,0,122,104,228,254,170,242,203,0,242,204,135,255,202,28,233,255,65,6,127,0,159,144,71,0,100,140,95,0,78,150,13,0,251,107,118,1,182,58,125,255,1,38,108,255,141,189,209,255,8,155,125,1,113,163,91,255,121,79,190,255,134,239,108,255,76,47,248,0,163,228,239,0,17,111,10,0,88,149,75,255,215,235,239,0,167,159,24,255,47,151,108,255,107,209,188,0,233,231,99,254,28,202,148,255,174,35,138,255,110,24,68,255,2,69,181,0,107,102,82,0,102,237,7,0,92,36,237,255,221,162,83,1,55,202,6,255,135,234,135,255,24,250,222,0,65,94,168,254,245,248,210,255,167,108,201,254,255,161,111,0,205,8,254,0,136,13,116,0,100,176,132,255,43,215,126,255,177,133,130,255,158,79,148,0,67,224,37,1,12,206,21,255,62,34,110,1,237,104,175,255,80,132,111,255,142,174,72,0,84,229,180,254,105,179,140,0,64,248,15,255,233,138,16,0,245,67,123,254,218,121,212,255,63,95,218,1,213,133,137,255,143,182,82,255,48,28,11,0,244,114,141,1,209,175,76,255,157,181,150,255,186,229,3,255,164,157,111,1,231,189,139,0,119,202,190,255,218,106,64,255,68,235,63,254,96,26,172,255,187,47,11,1,215,18,251,255,81,84,89,0,68,58,128,0,94,113,5,1,92,129,208,255,97,15,83,254,9,28,188,0,239,9,164,0,60,205,152,0,192,163,98,255,184,18,60,0,217,182,139,0,109,59,120,255,4,192,251,0,169,210,240,255,37,172,92,254,148,211,245,255,179,65,52,0,253,13,115,0,185,174,206,1,114,188,149,255,237,90,173,0,43,199,192,255,88,108,113,0,52,35,76,0,66,25,148,255,221,4,7,255,151,241,114,255,190,209,232,0,98,50,199,0,151,150,213,255,18,74,36,1,53,40,7,0,19,135,65,255,26,172,69,0,174,237,85,0,99,95,41,0,3,56,16,0,39,160,177,255,200,106,218,254,185,68,84,255,91,186,61,254,67,143,141,255,13,244,166,255,99,114,198,0,199,110,163,255,193,18,186,0,124,239,246,1,110,68,22,0,2,235,46,1,212,60,107,0,105,42,105,1,14,230,152,0,7,5,131,0,141,104,154,255,213,3,6,0,131,228,162,255,179,100,28,1,231,123,85,255,206,14,223,1,253,96,230,0,38,152,149,1,98,137,122,0,214,205,3,255,226,152,179,255,6,133,137,0,158,69,140,255,113,162,154,255,180,243,172,255,27,189,115,255,143,46,220,255,213,134,225,255,126,29,69,0,188,43,137,1,242,70,9,0,90,204,255,255,231,170,147,0,23,56,19,254,56,125,157,255,48,179,218,255,79,182,253,255,38,212,191,1,41,235,124,0,96,151,28,0,135,148,190,0,205,249,39,254,52,96,136,255,212,44,136,255,67,209,131,255,252,130,23,255,219,128,20,255,198,129,118,0,108,101,11,0,178,5,146,1,62,7,100,255,181,236,94,254,28,26,164,0,76,22,112,255,120,102,79,0,202,192,229,1,200,176,215,0,41,64,244,255,206,184,78,0,167,45,63,1,160,35,0,255,59,12,142,255,204,9,144,255,219,94,229,1,122,27,112,0,189,105,109,255,64,208,74,255,251,127,55,1,2,226,198,0,44,76,209,0,151,152,77,255,210,23,46,1,201,171,69,255,44,211,231,0,190,37,224,255,245,196,62,255,169,181,222,255,34,211,17,0,119,241,197,255,229,35,152,1,21,69,40,255,178,226,161,0,148,179,193,0,219,194,254,1,40,206,51,255,231,92,250,1,67,153,170,0,21,148,241,0,170,69,82,255,121,18,231,255,92,114,3,0,184,62,230,0,225,201,87,255,146,96,162,255,181,242,220,0,173,187,221,1,226,62,170,255,56,126,217,1,117,13,227,255,179,44,239,0,157,141,155,255,144,221,83,0,235,209,208,0,42,17,165,1,251,81,133,0,124,245,201,254,97,211,24,255,83,214,166,0,154,36,9,255,248,47,127,0,90,219,140,255,161,217,38,254,212,147,63,255,66,84,148,1,207,3,1,0,230,134,89,1,127,78,122,255,224,155,1,255,82,136,74,0,178,156,208,255,186,25,49,255,222,3,210,1,229,150,190,255,85,162,52,255,41,84,141,255,73,123,84,254,93,17,150,0,119,19,28,1,32,22,215,255,28,23,204,255,142,241,52,255,228,52,125,0,29,76,207,0,215,167,250,254,175,164,230,0,55,207,105,1,109,187,245,255,161,44,220,1,41,101,128,255,167,16,94,0,93,214,107,255,118,72,0,254,80,61,234,255,121,175,125,0,139,169,251,0,97,39,147,254,250,196,49,255,165,179,110,254,223,70,187,255,22,142,125,1,154,179,138,255,118,176,42,1,10,174,153,0,156,92,102,0,168,13,161,255,143,16,32,0,250,197,180,255,203,163,44,1,87,32,36,0,161,153,20,255,123,252,15,0,25,227,80,0,60,88,142,0,17,22,201,1,154,205,77,255,39,63,47,0,8,122,141,0,128,23,182,254,204,39,19,255,4,112,29,255,23,36,140,255,210,234,116,254,53,50,63,255,121,171,104,255,160,219,94,0,87,82,14,254,231,42,5,0,165,139,127,254,86,78,38,0,130,60,66,254,203,30,45,255,46,196,122,1,249,53,162,255,136,143,103,254,215,210,114,0,231,7,160,254,169,152,42,255,111,45,246,0,142,131,135,255,131,71,204,255,36,226,11,0,0,28,242,255,225,138,213,255,247,46,216,254,245,3,183,0,108,252,74,1,206,26,48,255,205,54,246,255,211,198,36,255,121,35,50,0,52,216,202,255,38,139,129,254,242,73,148,0,67,231,141,255,42,47,204,0,78,116,25,1,4,225,191,255,6,147,228,0,58,88,177,0,122,165,229,255,252,83,201,255,224,167,96,1,177,184,158,255,242,105,179,1,248,198,240,0,133,66,203,1,254,36,47,0,45,24,115,255,119,62,254,0,196,225,186,254,123,141,172,0,26,85,41,255,226,111,183,0,213,231,151,0,4,59,7,255,238,138,148,0,66,147,33,255,31,246,141,255,209,141,116,255,104,112,31,0,88,161,172,0,83,215,230,254,47,111,151,0,45,38,52,1,132,45,204,0,138,128,109,254,233,117,134,255,243,190,173,254,241,236,240,0,82,127,236,254,40,223,161,255,110,182,225,255,123,174,239,0,135,242,145,1,51,209,154,0,150,3,115,254,217,164,252,255,55,156,69,1,84,94,255,255,232,73,45,1,20,19,212,255,96,197,59,254,96,251,33,0,38,199,73,1,64,172,247,255,117,116,56,255,228,17,18,0,62,138,103,1,246,229,164,255,244,118,201,254,86,32,159,255,109,34,137,1,85,211,186,0,10,193,193,254,122,194,177,0,122,238,102,255,162,218,171,0,108,217,161,1,158,170,34,0,176,47,155,1,181,228,11,255,8,156,0,0,16,75,93,0,206,98,255,1,58,154,35,0,12,243,184,254,67,117,66,255,230,229,123,0,201,42,110,0,134,228,178,254,186,108,118,255,58,19,154,255,82,169,62,255,114,143,115,1,239,196,50,255,173,48,193,255,147,2,84,255,150,134,147,254,95,232,73,0,109,227,52,254,191,137,10,0,40,204,30,254,76,52,97,255,164,235,126,0,254,124,188,0,74,182,21,1,121,29,35,255,241,30,7,254,85,218,214,255,7,84,150,254,81,27,117,255,160,159,152,254,66,24,221,255,227,10,60,1,141,135,102,0,208,189,150,1,117,179,92,0,132,22,136,255,120,199,28,0,21,129,79,254,182,9,65,0,218,163,169,0,246,147,198,255,107,38,144,1,78,175,205,255,214,5,250,254,47,88,29,255,164,47,204,255,43,55,6,255,131,134,207,254,116,100,214,0,96,140,75,1,106,220,144,0,195,32,28,1,172,81,5,255,199,179,52,255,37,84,203,0,170,112,174,0,11,4,91,0,69,244,27,1,117,131,92,0,33,152,175,255,140,153,107,255,251,135,43,254,87,138,4,255,198,234,147,254,121,152,84,255,205,101,155,1,157,9,25,0,72,106,17,254,108,153,0,255,189,229,186,0,193,8,176,255,174,149,209,0,238,130,29,0,233,214,126,1,61,226,102,0,57,163,4,1,198,111,51,255,45,79,78,1,115,210,10,255,218,9,25,255,158,139,198,255,211,82,187,254,80,133,83,0,157,129,230,1,243,133,134,255,40,136,16,0,77,107,79,255,183,85,92,1,177,204,202,0,163,71,147,255,152,69,190,0,172,51,188,1,250,210,172,255,211,242,113,1,89,89,26,255,64,66,111,254,116,152,42,0,161,39,27,255,54,80,254,0,106,209,115,1,103,124,97,0,221,230,98,255,31,231,6,0,178,192,120,254,15,217,203,255,124,158,79,0,112,145,247,0,92,250,48,1,163,181,193,255,37,47,142,254,144,189,165,255,46,146,240,0,6,75,128,0,41,157,200,254,87,121,213,0,1,113,236,0,5,45,250,0,144,12,82,0,31,108,231,0,225,239,119,255,167,7,189,255,187,228,132,255,110,189,34,0,94,44,204,1,162,52,197,0,78,188,241,254,57,20,141,0,244,146,47,1,206,100,51,0,125,107,148,254,27,195,77,0,152,253,90,1,7,143,144,255,51,37,31,0,34,119,38,255,7,197,118,0,153,188,211,0,151,20,116,254,245,65,52,255,180,253,110,1,47,177,209,0,161,99,17,255,118,222,202,0,125,179,252,1,123,54,126,255,145,57,191,0,55,186,121,0,10,243,138,0,205,211,229,255,125,156,241,254,148,156,185,255,227,19,188,255,124,41,32,255,31,34,206,254,17,57,83,0,204,22,37,255,42,96,98,0,119,102,184,1,3,190,28,0,110,82,218,255,200,204,192,255,201,145,118,0,117,204,146,0,132,32,98,1,192,194,121,0,106,161,248,1,237,88,124,0,23,212,26,0,205,171,90,255,248,48,216,1,141,37,230,255,124,203,0,254,158,168,30,255,214,248,21,0,112,187,7,255,75,133,239,255,74,227,243,255,250,147,70,0,214,120,162,0,167,9,179,255,22,158,18,0,218,77,209,1,97,109,81,255,244,33,179,255,57,52,57,255,65,172,210,255,249,71,209,255,142,169,238,0,158,189,153,255,174,254,103,254,98,33,14,0,141,76,230,255,113,139,52,255,15,58,212,0,168,215,201,255,248,204,215,1,223,68,160,255,57,154,183,254,47,231,121,0,106,166,137,0,81,136,138,0,165,43,51,0,231,139,61,0,57,95,59,254,118,98,25,255,151,63,236,1,94,190,250,255,169,185,114,1,5,250,58,255,75,105,97,1,215,223,134,0,113,99,163,1,128,62,112,0,99,106,147,0,163,195,10,0,33,205,182,0,214,14,174,255,129,38,231,255,53,182,223,0,98,42,159,255,247,13,40,0,188,210,177,1,6,21,0,255,255,61,148,254,137,45,129,255,89,26,116,254,126,38,114,0,251,50,242,254,121,134,128,255,204,249,167,254,165,235,215,0,202,177,243,0,133,141,62,0,240,130,190,1,110,175,255,0,0,20,146,1,37,210,121,255,7,39,130,0,142,250,84,255,141,200,207,0,9,95,104,255,11,244,174,0,134,232,126,0,167,1,123,254,16,193,149,255,232,233,239,1,213,70,112,255,252,116,160,254,242,222,220,255,205,85,227,0,7,185,58,0,118,247,63,1,116,77,177,255,62,245,200,254,63,18,37,255,107,53,232,254,50,221,211,0,162,219,7,254,2,94,43,0,182,62,182,254,160,78,200,255,135,140,170,0,235,184,228,0,175,53,138,254,80,58,77,255,152,201,2,1,63,196,34,0,5,30,184,0,171,176,154,0,121,59,206,0,38,99,39,0,172,80,77,254,0,134,151,0,186,33,241,254,94,253,223,255,44,114,252,0,108,126,57,255,201,40,13,255,39,229,27,255,39,239,23,1,151,121,51,255,153,150,248,0,10,234,174,255,118,246,4,254,200,245,38,0,69,161,242,1,16,178,150,0,113,56,130,0,171,31,105,0,26,88,108,255,49,42,106,0,251,169,66,0,69,93,149,0,20,57,254,0,164,25,111,0,90,188,90,255,204,4,197,0,40,213,50,1,212,96,132,255,88,138,180,254,228,146,124,255,184,246,247,0,65,117,86,255,253,102,210,254,254,121,36,0,137,115,3,255,60,24,216,0,134,18,29,0,59,226,97,0,176,142,71,0,7,209,161,0,189,84,51,254,155,250,72,0,213,84,235,255,45,222,224,0,238,148,143,255,170,42,53,255,78,167,117,0,186,0,40,255,125,177,103,255,69,225,66,0,227,7,88,1,75,172,6,0,169,45,227,1,16,36,70,255,50,2,9,255,139,193,22,0,143,183,231,254,218,69,50,0,236,56,161,1,213,131,42,0,138,145,44,254,136,229,40,255,49,63,35,255,61,145,245,255,101,192,2,254,232,167,113,0,152,104,38,1,121,185,218,0,121,139,211,254,119,240,35,0,65,189,217,254,187,179,162,255,160,187,230,0,62,248,14,255,60,78,97,0,255,247,163,255,225,59,91,255,107,71,58,255,241,47,33,1,50,117,236,0,219,177,63,254,244,90,179,0,35,194,215,255,189,67,50,255,23,135,129,0,104,189,37,255,185,57,194,0,35,62,231,255,220,248,108,0,12,231,178,0,143,80,91,1,131,93,101,255,144,39,2,1,255,250,178],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+20480),allocate([5,17,236,254,139,32,46,0,204,188,38,254,245,115,52,255,191,113,73,254,191,108,69,255,22,69,245,1,23,203,178,0,170,99,170,0,65,248,111,0,37,108,153,255,64,37,69,0,0,88,62,254,89,148,144,255,191,68,224,1,241,39,53,0,41,203,237,255,145,126,194,255,221,42,253,255,25,99,151,0,97,253,223,1,74,115,49,255,6,175,72,255,59,176,203,0,124,183,249,1,228,228,99,0,129,12,207,254,168,192,195,255,204,176,16,254,152,234,171,0,77,37,85,255,33,120,135,255,142,194,227,1,31,214,58,0,213,187,125,255,232,46,60,255,190,116,42,254,151,178,19,255,51,62,237,254,204,236,193,0,194,232,60,0,172,34,157,255,189,16,184,254,103,3,95,255,141,233,36,254,41,25,11,255,21,195,166,0,118,245,45,0,67,213,149,255,159,12,18,255,187,164,227,1,160,25,5,0,12,78,195,1,43,197,225,0,48,142,41,254,196,155,60,255,223,199,18,1,145,136,156,0,252,117,169,254,145,226,238,0,239,23,107,0,109,181,188,255,230,112,49,254,73,170,237,255,231,183,227,255,80,220,20,0,194,107,127,1,127,205,101,0,46,52,197,1,210,171,36,255,88,3,90,255,56,151,141,0,96,187,255,255,42,78,200,0,254,70,70,1,244,125,168,0,204,68,138,1,124,215,70,0,102,66,200,254,17,52,228,0,117,220,143,254,203,248,123,0,56,18,174,255,186,151,164,255,51,232,208,1,160,228,43,255,249,29,25,1,68,190,63,0,133,59,140,1,189,241,36,255,248,37,195,1,96,220,55,0,183,76,62,255,195,66,61,0,50,76,164,1,225,164,76,255,76,61,163,255,117,62,31,0,81,145,64,255,118,65,14,0,162,115,214,255,6,138,46,0,124,230,244,255,10,138,143,0,52,26,194,0,184,244,76,0,129,143,41,1,190,244,19,255,123,170,122,255,98,129,68,0,121,213,147,0,86,101,30,255,161,103,155,0,140,89,67,255,239,229,190,1,67,11,181,0,198,240,137,254,238,69,188,255,67,151,238,0,19,42,108,255,229,85,113,1,50,68,135,255,17,106,9,0,50,103,1,255,80,1,168,1,35,152,30,255,16,168,185,1,56,89,232,255,101,210,252,0,41,250,71,0,204,170,79,255,14,46,239,255,80,77,239,0,189,214,75,255,17,141,249,0,38,80,76,255,190,85,117,0,86,228,170,0,156,216,208,1,195,207,164,255,150,66,76,255,175,225,16,255,141,80,98,1,76,219,242,0,198,162,114,0,46,218,152,0,155,43,241,254,155,160,104,255,51,187,165,0,2,17,175,0,66,84,160,1,247,58,30,0,35,65,53,254,69,236,191,0,45,134,245,1,163,123,221,0,32,110,20,255,52,23,165,0,186,214,71,0,233,176,96,0,242,239,54,1,57,89,138,0,83,0,84,255,136,160,100,0,92,142,120,254,104,124,190,0,181,177,62,255,250,41,85,0,152,130,42,1,96,252,246,0,151,151,63,254,239,133,62,0,32,56,156,0,45,167,189,255,142,133,179,1,131,86,211,0,187,179,150,254,250,170,14,255,210,163,78,0,37,52,151,0,99,77,26,0,238,156,213,255,213,192,209,1,73,46,84,0,20,65,41,1,54,206,79,0,201,131,146,254,170,111,24,255,177,33,50,254,171,38,203,255,78,247,116,0,209,221,153,0,133,128,178,1,58,44,25,0,201,39,59,1,189,19,252,0,49,229,210,1,117,187,117,0,181,179,184,1,0,114,219,0,48,94,147,0,245,41,56,0,125,13,204,254,244,173,119,0,44,221,32,254,84,234,20,0,249,160,198,1,236,126,234,255,47,99,168,254,170,226,153,255,102,179,216,0,226,141,122,255,122,66,153,254,182,245,134,0,227,228,25,1,214,57,235,255,216,173,56,255,181,231,210,0,119,128,157,255,129,95,136,255,110,126,51,0,2,169,183,255,7,130,98,254,69,176,94,255,116,4,227,1,217,242,145,255,202,173,31,1,105,1,39,255,46,175,69,0,228,47,58,255,215,224,69,254,207,56,69,255,16,254,139,255,23,207,212,255,202,20,126,255,95,213,96,255,9,176,33,0,200,5,207,255,241,42,128,254,35,33,192,255,248,229,196,1,129,17,120,0,251,103,151,255,7,52,112,255,140,56,66,255,40,226,245,255,217,70,37,254,172,214,9,255,72,67,134,1,146,192,214,255,44,38,112,0,68,184,75,255,206,90,251,0,149,235,141,0,181,170,58,0,116,244,239,0,92,157,2,0,102,173,98,0,233,137,96,1,127,49,203,0,5,155,148,0,23,148,9,255,211,122,12,0,34,134,26,255,219,204,136,0,134,8,41,255,224,83,43,254,85,25,247,0,109,127,0,254,169,136,48,0,238,119,219,255,231,173,213,0,206,18,254,254,8,186,7,255,126,9,7,1,111,42,72,0,111,52,236,254,96,63,141,0,147,191,127,254,205,78,192,255,14,106,237,1,187,219,76,0,175,243,187,254,105,89,173,0,85,25,89,1,162,243,148,0,2,118,209,254,33,158,9,0,139,163,46,255,93,70,40,0,108,42,142,254,111,252,142,255,155,223,144,0,51,229,167,255,73,252,155,255,94,116,12,255,152,160,218,255,156,238,37,255,179,234,207,255,197,0,179,255,154,164,141,0,225,196,104,0,10,35,25,254,209,212,242,255,97,253,222,254,184,101,229,0,222,18,127,1,164,136,135,255,30,207,140,254,146,97,243,0,129,192,26,254,201,84,33,255,111,10,78,255,147,81,178,255,4,4,24,0,161,238,215,255,6,141,33,0,53,215,14,255,41,181,208,255,231,139,157,0,179,203,221,255,255,185,113,0,189,226,172,255,113,66,214,255,202,62,45,255,102,64,8,255,78,174,16,254,133,117,68,255,220,227,61,255,55,242,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,146,248,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,28,254,77,93,218,255,85,164,113,254,84,201,69,255,19,80,70,255,228,25,251,255,161,155,226,0,21,228,98,255,98,173,253,254,240,199,249,255,243,154,124,0,216,32,153,255,92,250,251,254,184,34,48,0,13,120,71,1,190,95,22,0,224,219,40,254,59,210,158,255,163,69,160,0,120,24,52,255,121,44,48,255,198,97,223,0,3,43,69,0,178,44,117,0,253,147,0,1,237,162,13,255,32,32,163,254,19,247,29,255,33,76,209,0,68,40,157,255,134,145,179,254,238,64,70,255,168,48,73,1,250,9,69,0,240,27,185,255,47,67,247,0,63,68,122,0,216,36,127,255,126,6,49,0,204,15,105,0,1,0,0,0,0,0,0,0,130,128,0,0,0,0,0,0,138,128,0,0,0,0,0,128,0,128,0,128,0,0,0,128,139,128,0,0,0,0,0,0,1,0,0,128,0,0,0,0,129,128,0,128,0,0,0,128,9,128,0,0,0,0,0,128,138,0,0,0,0,0,0,0,136,0,0,0,0,0,0,0,9,128,0,128,0,0,0,0,10,0,0,128,0,0,0,0,139,128,0,128,0,0,0,0,139,0,0,0,0,0,0,128,137,128,0,0,0,0,0,128,3,128,0,0,0,0,0,128,2,128,0,0,0,0,0,128,128,0,0,0,0,0,0,128,10,128,0,0,0,0,0,0,10,0,0,128,0,0,0,128,129,128,0,128,0,0,0,128,128,128,0,0,0,0,0,128,1,0,0,128,0,0,0,0,8,128,0,128,0,0,0,128,1,0,0,0,3,0,0,0,6,0,0,0,10,0,0,0,15,0,0,0,21,0,0,0,28,0,0,0,36,0,0,0,45,0,0,0,55,0,0,0,2,0,0,0,14,0,0,0,27,0,0,0,41,0,0,0,56,0,0,0,8,0,0,0,25,0,0,0,43,0,0,0,62,0,0,0,18,0,0,0,39,0,0,0,61,0,0,0,20,0,0,0,44,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,17,0,0,0,18,0,0,0,3,0,0,0,5,0,0,0,16,0,0,0,8,0,0,0,21,0,0,0,24,0,0,0,4,0,0,0,15,0,0,0,23,0,0,0,19,0,0,0,13,0,0,0,12,0,0,0,2,0,0,0,20,0,0,0,14,0,0,0,22,0,0,0,9,0,0,0,6,0,0,0,1,0,0,0],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+30720);var tempDoublePtr=Runtime.alignMemory(allocate(12,"i8",ALLOC_STATIC),8);function copyTempFloat(e){HEAP8[tempDoublePtr]=HEAP8[e],HEAP8[tempDoublePtr+1]=HEAP8[e+1],HEAP8[tempDoublePtr+2]=HEAP8[e+2],HEAP8[tempDoublePtr+3]=HEAP8[e+3]}function copyTempDouble(e){HEAP8[tempDoublePtr]=HEAP8[e],HEAP8[tempDoublePtr+1]=HEAP8[e+1],HEAP8[tempDoublePtr+2]=HEAP8[e+2],HEAP8[tempDoublePtr+3]=HEAP8[e+3],HEAP8[tempDoublePtr+4]=HEAP8[e+4],HEAP8[tempDoublePtr+5]=HEAP8[e+5],HEAP8[tempDoublePtr+6]=HEAP8[e+6],HEAP8[tempDoublePtr+7]=HEAP8[e+7]}function _malloc(e){var t=Runtime.dynamicAlloc(e+8);return t+8&4294967288}function ___assert_fail(e,t,r,o){throw ABORT=!0,"Assertion failed: "+Pointer_stringify(e)+", at: "+[t?Pointer_stringify(t):"unknown filename",r,o?Pointer_stringify(o):"unknown function"]+" at "+stackTrace()}function _free(){}assert(tempDoublePtr%8==0),Module["_bitshift64Ashr"]=_bitshift64Ashr,Module["_malloc"]=_malloc,Module["_i64Subtract"]=_i64Subtract,Module["_i64Add"]=_i64Add,Module["_memset"]=_memset,Module["_bitshift64Lshr"]=_bitshift64Lshr,Module["_free"]=_free,Module["_bitshift64Shl"]=_bitshift64Shl;var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86},ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"},___errno_state=0;function ___setErrNo(e){return SAFE_HEAP_STORE(0|___errno_state,0|e,4,0),e}var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(e,t){TTY.ttys[e]={input:[],output:[],ops:t},FS.registerDevice(e,TTY.stream_ops)},stream_ops:{open:function(e){var t=TTY.ttys[e.node.rdev];if(!t)throw new FS.ErrnoError(ERRNO_CODES.ENODEV);e.tty=t,e.seekable=!1},close:function(e){e.tty.output.length&&e.tty.ops.put_char(e.tty,10)},read:function(e,t,r,o,n){if(!e.tty||!e.tty.ops.get_char)throw new FS.ErrnoError(ERRNO_CODES.ENXIO);for(var a=0,i=0;i<o;i++){var s;try{s=e.tty.ops.get_char(e.tty)}catch(u){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(void 0===s&&0===a)throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);if(null===s||void 0===s)break;a++,t[r+i]=s}return a&&(e.node.timestamp=Date.now()),a},write:function(e,t,r,o,n){if(!e.tty||!e.tty.ops.put_char)throw new FS.ErrnoError(ERRNO_CODES.ENXIO);for(var a=0;a<o;a++)try{e.tty.ops.put_char(e.tty,t[r+a])}catch(i){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return o&&(e.node.timestamp=Date.now()),a}},default_tty_ops:{get_char:function(e){if(!e.input.length){var t=null;if(ENVIRONMENT_IS_NODE){if(t=process["stdin"]["read"](),!t)return process["stdin"]["_readableState"]&&process["stdin"]["_readableState"]["ended"]?null:void 0}else"undefined"!=typeof window&&"function"==typeof window.prompt?(t=window.prompt("Input: "),null!==t&&(t+="\n")):"function"==typeof readline&&(t=readline(),null!==t&&(t+="\n"));if(!t)return null;e.input=intArrayFromString(t,!0)}return e.input.shift()},put_char:function(e,t){null===t||10===t?(Module["print"](e.output.join("")),e.output=[]):e.output.push(TTY.utf8.processCChar(t))}},default_tty1_ops:{put_char:function(e,t){null===t||10===t?(Module["printErr"](e.output.join("")),e.output=[]):e.output.push(TTY.utf8.processCChar(t))}}},MEMFS={ops_table:null,mount:function(e){return MEMFS.createNode(null,"/",16895,0)},createNode:function(e,t,r,o){if(FS.isBlkdev(r)||FS.isFIFO(r))throw new FS.ErrnoError(ERRNO_CODES.EPERM);MEMFS.ops_table||(MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}});var n=FS.createNode(e,t,r,o);return FS.isDir(n.mode)?(n.node_ops=MEMFS.ops_table.dir.node,n.stream_ops=MEMFS.ops_table.dir.stream,n.contents={}):FS.isFile(n.mode)?(n.node_ops=MEMFS.ops_table.file.node,n.stream_ops=MEMFS.ops_table.file.stream,n.usedBytes=0,n.contents=null):FS.isLink(n.mode)?(n.node_ops=MEMFS.ops_table.link.node,n.stream_ops=MEMFS.ops_table.link.stream):FS.isChrdev(n.mode)&&(n.node_ops=MEMFS.ops_table.chrdev.node,n.stream_ops=MEMFS.ops_table.chrdev.stream),n.timestamp=Date.now(),e&&(e.contents[t]=n),n},getFileDataAsRegularArray:function(e){if(e.contents&&e.contents.subarray){for(var t=[],r=0;r<e.usedBytes;++r)t.push(e.contents[r]);return t}return e.contents},getFileDataAsTypedArray:function(e){return e.contents&&e.contents.subarray?e.contents.subarray(0,e.usedBytes):new Uint8Array(e.contents)},expandFileStorage:function(e,t){if(e.contents&&e.contents.subarray&&t>e.contents.length&&(e.contents=MEMFS.getFileDataAsRegularArray(e),e.usedBytes=e.contents.length),!e.contents||e.contents.subarray){var r=e.contents?e.contents.buffer.byteLength:0;if(r>=t)return;var o=1048576;t=Math.max(t,r*(r<o?2:1.125)|0),0!=r&&(t=Math.max(t,256));var n=e.contents;return e.contents=new Uint8Array(t),void(e.usedBytes>0&&e.contents.set(n.subarray(0,e.usedBytes),0))}!e.contents&&t>0&&(e.contents=[]);while(e.contents.length<t)e.contents.push(0)},resizeFileStorage:function(e,t){if(e.usedBytes!=t){if(0==t)return e.contents=null,void(e.usedBytes=0);if(!e.contents||e.contents.subarray){var r=e.contents;return e.contents=new Uint8Array(new ArrayBuffer(t)),r&&e.contents.set(r.subarray(0,Math.min(t,e.usedBytes))),void(e.usedBytes=t)}if(e.contents||(e.contents=[]),e.contents.length>t)e.contents.length=t;else while(e.contents.length<t)e.contents.push(0);e.usedBytes=t}},node_ops:{getattr:function(e){var t={};return t.dev=FS.isChrdev(e.mode)?e.id:1,t.ino=e.id,t.mode=e.mode,t.nlink=1,t.uid=0,t.gid=0,t.rdev=e.rdev,FS.isDir(e.mode)?t.size=4096:FS.isFile(e.mode)?t.size=e.usedBytes:FS.isLink(e.mode)?t.size=e.link.length:t.size=0,t.atime=new Date(e.timestamp),t.mtime=new Date(e.timestamp),t.ctime=new Date(e.timestamp),t.blksize=4096,t.blocks=Math.ceil(t.size/t.blksize),t},setattr:function(e,t){void 0!==t.mode&&(e.mode=t.mode),void 0!==t.timestamp&&(e.timestamp=t.timestamp),void 0!==t.size&&MEMFS.resizeFileStorage(e,t.size)},lookup:function(e,t){throw FS.genericErrors[ERRNO_CODES.ENOENT]},mknod:function(e,t,r,o){return MEMFS.createNode(e,t,r,o)},rename:function(e,t,r){if(FS.isDir(e.mode)){var o;try{o=FS.lookupNode(t,r)}catch(a){}if(o)for(var n in o.contents)throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete e.parent.contents[e.name],e.name=r,t.contents[r]=e,e.parent=t},unlink:function(e,t){delete e.contents[t]},rmdir:function(e,t){var r=FS.lookupNode(e,t);for(var o in r.contents)throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);delete e.contents[t]},readdir:function(e){var t=[".",".."];for(var r in e.contents)e.contents.hasOwnProperty(r)&&t.push(r);return t},symlink:function(e,t,r){var o=MEMFS.createNode(e,t,41471,0);return o.link=r,o},readlink:function(e){if(!FS.isLink(e.mode))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);return e.link}},stream_ops:{read:function(e,t,r,o,n){var a=e.node.contents;if(n>=e.node.usedBytes)return 0;var i=Math.min(e.node.usedBytes-n,o);if(assert(i>=0),i>8&&a.subarray)t.set(a.subarray(n,n+i),r);else for(var s=0;s<i;s++)t[r+s]=a[n+s];return i},write:function(e,t,r,o,n,a){if(!o)return 0;var i=e.node;if(i.timestamp=Date.now(),t.subarray&&(!i.contents||i.contents.subarray)){if(a)return i.contents=t.subarray(r,r+o),i.usedBytes=o,o;if(0===i.usedBytes&&0===n)return i.contents=new Uint8Array(t.subarray(r,r+o)),i.usedBytes=o,o;if(n+o<=i.usedBytes)return i.contents.set(t.subarray(r,r+o),n),o}if(MEMFS.expandFileStorage(i,n+o),i.contents.subarray&&t.subarray)i.contents.set(t.subarray(r,r+o),n);else for(var s=0;s<o;s++)i.contents[n+s]=t[r+s];return i.usedBytes=Math.max(i.usedBytes,n+o),o},llseek:function(e,t,r){var o=t;if(1===r?o+=e.position:2===r&&FS.isFile(e.node.mode)&&(o+=e.node.usedBytes),o<0)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);return e.ungotten=[],e.position=o,o},allocate:function(e,t,r){MEMFS.expandFileStorage(e.node,t+r),e.node.usedBytes=Math.max(e.node.usedBytes,t+r)},mmap:function(e,t,r,o,n,a,i){if(!FS.isFile(e.node.mode))throw new FS.ErrnoError(ERRNO_CODES.ENODEV);var s,u,l=e.node.contents;if(2&i||l.buffer!==t&&l.buffer!==t.buffer){if((n>0||n+o<e.node.usedBytes)&&(l=l.subarray?l.subarray(n,n+o):Array.prototype.slice.call(l,n,n+o)),u=!0,s=_malloc(o),!s)throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);t.set(l,s)}else u=!1,s=l.byteOffset;return{ptr:s,allocated:u}}}},IDBFS={dbs:{},indexedDB:function(){if("undefined"!==typeof indexedDB)return indexedDB;var e=null;return"object"===typeof window&&(e=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB),assert(e,"IDBFS used, but indexedDB not supported"),e},DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function(e){return MEMFS.mount.apply(null,arguments)},syncfs:function(e,t,r){IDBFS.getLocalSet(e,(function(o,n){if(o)return r(o);IDBFS.getRemoteSet(e,(function(e,o){if(e)return r(e);var a=t?o:n,i=t?n:o;IDBFS.reconcile(a,i,r)}))}))},getDB:function(e,t){var r,o=IDBFS.dbs[e];if(o)return t(null,o);try{r=IDBFS.indexedDB().open(e,IDBFS.DB_VERSION)}catch(n){return t(n)}r.onupgradeneeded=function(e){var t,r=e.target.result,o=e.target.transaction;t=r.objectStoreNames.contains(IDBFS.DB_STORE_NAME)?o.objectStore(IDBFS.DB_STORE_NAME):r.createObjectStore(IDBFS.DB_STORE_NAME),t.createIndex("timestamp","timestamp",{unique:!1})},r.onsuccess=function(){o=r.result,IDBFS.dbs[e]=o,t(null,o)},r.onerror=function(){t(this.error)}},getLocalSet:function(e,t){var r={};function o(e){return"."!==e&&".."!==e}function n(e){return function(t){return PATH.join2(e,t)}}var a=FS.readdir(e.mountpoint).filter(o).map(n(e.mountpoint));while(a.length){var i,s=a.pop();try{i=FS.stat(s)}catch(u){return t(u)}FS.isDir(i.mode)&&a.push.apply(a,FS.readdir(s).filter(o).map(n(s))),r[s]={timestamp:i.mtime}}return t(null,{type:"local",entries:r})},getRemoteSet:function(e,t){var r={};IDBFS.getDB(e.mountpoint,(function(e,o){if(e)return t(e);var n=o.transaction([IDBFS.DB_STORE_NAME],"readonly");n.onerror=function(){t(this.error)};var a=n.objectStore(IDBFS.DB_STORE_NAME),i=a.index("timestamp");i.openKeyCursor().onsuccess=function(e){var n=e.target.result;if(!n)return t(null,{type:"remote",db:o,entries:r});r[n.primaryKey]={timestamp:n.key},n.continue()}}))},loadLocalEntry:function(e,t){var r,o;try{var n=FS.lookupPath(e);o=n.node,r=FS.stat(e)}catch(a){return t(a)}return FS.isDir(r.mode)?t(null,{timestamp:r.mtime,mode:r.mode}):FS.isFile(r.mode)?(o.contents=MEMFS.getFileDataAsTypedArray(o),t(null,{timestamp:r.mtime,mode:r.mode,contents:o.contents})):t(new Error("node type not supported"))},storeLocalEntry:function(e,t,r){try{if(FS.isDir(t.mode))FS.mkdir(e,t.mode);else{if(!FS.isFile(t.mode))return r(new Error("node type not supported"));FS.writeFile(e,t.contents,{encoding:"binary",canOwn:!0})}FS.utime(e,t.timestamp,t.timestamp)}catch(o){return r(o)}r(null)},removeLocalEntry:function(e,t){try{FS.lookupPath(e);var r=FS.stat(e);FS.isDir(r.mode)?FS.rmdir(e):FS.isFile(r.mode)&&FS.unlink(e)}catch(o){return t(o)}t(null)},loadRemoteEntry:function(e,t,r){var o=e.get(t);o.onsuccess=function(e){r(null,e.target.result)},o.onerror=function(){r(this.error)}},storeRemoteEntry:function(e,t,r,o){var n=e.put(r,t);n.onsuccess=function(){o(null)},n.onerror=function(){o(this.error)}},removeRemoteEntry:function(e,t,r){var o=e.delete(t);o.onsuccess=function(){r(null)},o.onerror=function(){r(this.error)}},reconcile:function(e,t,r){var o=0,n=[];Object.keys(e.entries).forEach((function(r){var a=e.entries[r],i=t.entries[r];(!i||a.timestamp>i.timestamp)&&(n.push(r),o++)}));var a=[];if(Object.keys(t.entries).forEach((function(r){t.entries[r];var n=e.entries[r];n||(a.push(r),o++)})),!o)return r(null);var i=0,s="remote"===e.type?e.db:t.db,u=s.transaction([IDBFS.DB_STORE_NAME],"readwrite"),l=u.objectStore(IDBFS.DB_STORE_NAME);function c(e){return e?c.errored?void 0:(c.errored=!0,r(e)):++i>=o?r(null):void 0}u.onerror=function(){c(this.error)},n.sort().forEach((function(e){"local"===t.type?IDBFS.loadRemoteEntry(l,e,(function(t,r){if(t)return c(t);IDBFS.storeLocalEntry(e,r,c)})):IDBFS.loadLocalEntry(e,(function(t,r){if(t)return c(t);IDBFS.storeRemoteEntry(l,e,r,c)}))})),a.sort().reverse().forEach((function(e){"local"===t.type?IDBFS.removeLocalEntry(e,c):IDBFS.removeRemoteEntry(l,e,c)}))}},NODEFS={isWindows:!1,staticInit:function(){NODEFS.isWindows=!!process.platform.match(/^win/)},mount:function(e){return assert(ENVIRONMENT_IS_NODE),NODEFS.createNode(null,"/",NODEFS.getMode(e.opts.root),0)},createNode:function(e,t,r,o){if(!FS.isDir(r)&&!FS.isFile(r)&&!FS.isLink(r))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var n=FS.createNode(e,t,r);return n.node_ops=NODEFS.node_ops,n.stream_ops=NODEFS.stream_ops,n},getMode:function(e){var t;try{t=fs.lstatSync(e),NODEFS.isWindows&&(t.mode=t.mode|(146&t.mode)>>1)}catch(r){if(!r.code)throw r;throw new FS.ErrnoError(ERRNO_CODES[r.code])}return t.mode},realPath:function(e){var t=[];while(e.parent!==e)t.push(e.name),e=e.parent;return t.push(e.mount.opts.root),t.reverse(),PATH.join.apply(null,t)},flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function(e){return e in NODEFS.flagsToPermissionStringMap?NODEFS.flagsToPermissionStringMap[e]:e},node_ops:{getattr:function(e){var t,r=NODEFS.realPath(e);try{t=fs.lstatSync(r)}catch(o){if(!o.code)throw o;throw new FS.ErrnoError(ERRNO_CODES[o.code])}return NODEFS.isWindows&&!t.blksize&&(t.blksize=4096),NODEFS.isWindows&&!t.blocks&&(t.blocks=(t.size+t.blksize-1)/t.blksize|0),{dev:t.dev,ino:t.ino,mode:t.mode,nlink:t.nlink,uid:t.uid,gid:t.gid,rdev:t.rdev,size:t.size,atime:t.atime,mtime:t.mtime,ctime:t.ctime,blksize:t.blksize,blocks:t.blocks}},setattr:function(e,t){var r=NODEFS.realPath(e);try{if(void 0!==t.mode&&(fs.chmodSync(r,t.mode),e.mode=t.mode),void 0!==t.timestamp){var o=new Date(t.timestamp);fs.utimesSync(r,o,o)}void 0!==t.size&&fs.truncateSync(r,t.size)}catch(n){if(!n.code)throw n;throw new FS.ErrnoError(ERRNO_CODES[n.code])}},lookup:function(e,t){var r=PATH.join2(NODEFS.realPath(e),t),o=NODEFS.getMode(r);return NODEFS.createNode(e,t,o)},mknod:function(e,t,r,o){var n=NODEFS.createNode(e,t,r,o),a=NODEFS.realPath(n);try{FS.isDir(n.mode)?fs.mkdirSync(a,n.mode):fs.writeFileSync(a,"",{mode:n.mode})}catch(i){if(!i.code)throw i;throw new FS.ErrnoError(ERRNO_CODES[i.code])}return n},rename:function(e,t,r){var o=NODEFS.realPath(e),n=PATH.join2(NODEFS.realPath(t),r);try{fs.renameSync(o,n)}catch(a){if(!a.code)throw a;throw new FS.ErrnoError(ERRNO_CODES[a.code])}},unlink:function(e,t){var r=PATH.join2(NODEFS.realPath(e),t);try{fs.unlinkSync(r)}catch(o){if(!o.code)throw o;throw new FS.ErrnoError(ERRNO_CODES[o.code])}},rmdir:function(e,t){var r=PATH.join2(NODEFS.realPath(e),t);try{fs.rmdirSync(r)}catch(o){if(!o.code)throw o;throw new FS.ErrnoError(ERRNO_CODES[o.code])}},readdir:function(e){var t=NODEFS.realPath(e);try{return fs.readdirSync(t)}catch(r){if(!r.code)throw r;throw new FS.ErrnoError(ERRNO_CODES[r.code])}},symlink:function(e,t,r){var o=PATH.join2(NODEFS.realPath(e),t);try{fs.symlinkSync(r,o)}catch(n){if(!n.code)throw n;throw new FS.ErrnoError(ERRNO_CODES[n.code])}},readlink:function(e){var t=NODEFS.realPath(e);try{return fs.readlinkSync(t)}catch(r){if(!r.code)throw r;throw new FS.ErrnoError(ERRNO_CODES[r.code])}}},stream_ops:{open:function(e){var t=NODEFS.realPath(e.node);try{FS.isFile(e.node.mode)&&(e.nfd=fs.openSync(t,NODEFS.flagsToPermissionString(e.flags)))}catch(r){if(!r.code)throw r;throw new FS.ErrnoError(ERRNO_CODES[r.code])}},close:function(e){try{FS.isFile(e.node.mode)&&e.nfd&&fs.closeSync(e.nfd)}catch(t){if(!t.code)throw t;throw new FS.ErrnoError(ERRNO_CODES[t.code])}},read:function(e,t,r,o,n){var a,i=new Buffer(o);try{a=fs.readSync(e.nfd,i,0,o,n)}catch(u){throw new FS.ErrnoError(ERRNO_CODES[u.code])}if(a>0)for(var s=0;s<a;s++)t[r+s]=i[s];return a},write:function(e,t,r,o,n){var a,i=new Buffer(t.subarray(r,r+o));try{a=fs.writeSync(e.nfd,i,0,o,n)}catch(s){throw new FS.ErrnoError(ERRNO_CODES[s.code])}return a},llseek:function(e,t,r){var o=t;if(1===r)o+=e.position;else if(2===r&&FS.isFile(e.node.mode))try{var n=fs.fstatSync(e.nfd);o+=n.size}catch(a){throw new FS.ErrnoError(ERRNO_CODES[a.code])}if(o<0)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);return e.position=o,o}}},_stdin=allocate(1,"i32*",ALLOC_STATIC),_stdout=allocate(1,"i32*",ALLOC_STATIC),_stderr=allocate(1,"i32*",ALLOC_STATIC);function _fflush(e){}var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno)},lookupPath:function(e,t){if(e=PATH.resolve(FS.cwd(),e),t=t||{},!e)return{path:"",node:null};var r={follow_mount:!0,recurse_count:0};for(var o in r)void 0===t[o]&&(t[o]=r[o]);if(t.recurse_count>8)throw new FS.ErrnoError(ERRNO_CODES.ELOOP);for(var n=PATH.normalizeArray(e.split("/").filter((function(e){return!!e})),!1),a=FS.root,i="/",s=0;s<n.length;s++){var u=s===n.length-1;if(u&&t.parent)break;if(a=FS.lookupNode(a,n[s]),i=PATH.join2(i,n[s]),FS.isMountpoint(a)&&(!u||u&&t.follow_mount)&&(a=a.mounted.root),!u||t.follow){var l=0;while(FS.isLink(a.mode)){var c=FS.readlink(i);i=PATH.resolve(PATH.dirname(i),c);var d=FS.lookupPath(i,{recurse_count:t.recurse_count});if(a=d.node,l++>40)throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}return{path:i,node:a}},getPath:function(e){var t;while(1){if(FS.isRoot(e)){var r=e.mount.mountpoint;return t?"/"!==r[r.length-1]?r+"/"+t:r+t:r}t=t?e.name+"/"+t:e.name,e=e.parent}},hashName:function(e,t){for(var r=0,o=0;o<t.length;o++)r=(r<<5)-r+t.charCodeAt(o)|0;return(e+r>>>0)%FS.nameTable.length},hashAddNode:function(e){var t=FS.hashName(e.parent.id,e.name);e.name_next=FS.nameTable[t],FS.nameTable[t]=e},hashRemoveNode:function(e){var t=FS.hashName(e.parent.id,e.name);if(FS.nameTable[t]===e)FS.nameTable[t]=e.name_next;else{var r=FS.nameTable[t];while(r){if(r.name_next===e){r.name_next=e.name_next;break}r=r.name_next}}},lookupNode:function(e,t){var r=FS.mayLookup(e);if(r)throw new FS.ErrnoError(r);for(var o=FS.hashName(e.id,t),n=FS.nameTable[o];n;n=n.name_next){var a=n.name;if(n.parent.id===e.id&&a===t)return n}return FS.lookup(e,t)},createNode:function(e,t,r,o){if(!FS.FSNode){FS.FSNode=function(e,t,r,o){e||(e=this),this.parent=e,this.mount=e.mount,this.mounted=null,this.id=FS.nextInode++,this.name=t,this.mode=r,this.node_ops={},this.stream_ops={},this.rdev=o},FS.FSNode.prototype={};var n=365,a=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:function(){return(this.mode&n)===n},set:function(e){e?this.mode|=n:this.mode&=~n}},write:{get:function(){return(this.mode&a)===a},set:function(e){e?this.mode|=a:this.mode&=~a}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}})}var i=new FS.FSNode(e,t,r,o);return FS.hashAddNode(i),i},destroyNode:function(e){FS.hashRemoveNode(e)},isRoot:function(e){return e===e.parent},isMountpoint:function(e){return!!e.mounted},isFile:function(e){return 32768===(61440&e)},isDir:function(e){return 16384===(61440&e)},isLink:function(e){return 40960===(61440&e)},isChrdev:function(e){return 8192===(61440&e)},isBlkdev:function(e){return 24576===(61440&e)},isFIFO:function(e){return 4096===(61440&e)},isSocket:function(e){return 49152===(49152&e)},flagModes:{r:0,rs:1052672,"r+":2,w:577,wx:705,xw:705,"w+":578,"wx+":706,"xw+":706,a:1089,ax:1217,xa:1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function(e){var t=FS.flagModes[e];if("undefined"===typeof t)throw new Error("Unknown file open mode: "+e);return t},flagsToPermissionString:function(e){var t=2097155&e,r=["r","w","rw"][t];return 512&e&&(r+="w"),r},nodePermissions:function(e,t){return FS.ignorePermissions||(-1===t.indexOf("r")||292&e.mode)&&(-1===t.indexOf("w")||146&e.mode)&&(-1===t.indexOf("x")||73&e.mode)?0:ERRNO_CODES.EACCES},mayLookup:function(e){var t=FS.nodePermissions(e,"x");return t||(e.node_ops.lookup?0:ERRNO_CODES.EACCES)},mayCreate:function(e,t){try{FS.lookupNode(e,t);return ERRNO_CODES.EEXIST}catch(r){}return FS.nodePermissions(e,"wx")},mayDelete:function(e,t,r){var o;try{o=FS.lookupNode(e,t)}catch(a){return a.errno}var n=FS.nodePermissions(e,"wx");if(n)return n;if(r){if(!FS.isDir(o.mode))return ERRNO_CODES.ENOTDIR;if(FS.isRoot(o)||FS.getPath(o)===FS.cwd())return ERRNO_CODES.EBUSY}else if(FS.isDir(o.mode))return ERRNO_CODES.EISDIR;return 0},mayOpen:function(e,t){return e?FS.isLink(e.mode)?ERRNO_CODES.ELOOP:FS.isDir(e.mode)&&(0!==(2097155&t)||512&t)?ERRNO_CODES.EISDIR:FS.nodePermissions(e,FS.flagsToPermissionString(t)):ERRNO_CODES.ENOENT},MAX_OPEN_FDS:4096,nextfd:function(e,t){e=e||0,t=t||FS.MAX_OPEN_FDS;for(var r=e;r<=t;r++)if(!FS.streams[r])return r;throw new FS.ErrnoError(ERRNO_CODES.EMFILE)},getStream:function(e){return FS.streams[e]},createStream:function(e,t,r){FS.FSStream||(FS.FSStream=function(){},FS.FSStream.prototype={},Object.defineProperties(FS.FSStream.prototype,{object:{get:function(){return this.node},set:function(e){this.node=e}},isRead:{get:function(){return 1!==(2097155&this.flags)}},isWrite:{get:function(){return 0!==(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}}}));var o=new FS.FSStream;for(var n in e)o[n]=e[n];e=o;var a=FS.nextfd(t,r);return e.fd=a,FS.streams[a]=e,e},closeStream:function(e){FS.streams[e]=null},getStreamFromPtr:function(e){return FS.streams[e-1]},getPtrForStream:function(e){return e?e.fd+1:0},chrdev_stream_ops:{open:function(e){var t=FS.getDevice(e.node.rdev);e.stream_ops=t.stream_ops,e.stream_ops.open&&e.stream_ops.open(e)},llseek:function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}},major:function(e){return e>>8},minor:function(e){return 255&e},makedev:function(e,t){return e<<8|t},registerDevice:function(e,t){FS.devices[e]={stream_ops:t}},getDevice:function(e){return FS.devices[e]},getMounts:function(e){var t=[],r=[e];while(r.length){var o=r.pop();t.push(o),r.push.apply(r,o.mounts)}return t},syncfs:function(e,t){"function"===typeof e&&(t=e,e=!1);var r=FS.getMounts(FS.root.mount),o=0;function n(e){if(e)return n.errored?void 0:(n.errored=!0,t(e));++o>=r.length&&t(null)}r.forEach((function(t){if(!t.type.syncfs)return n(null);t.type.syncfs(t,e,n)}))},mount:function(e,t,r){var o,n="/"===r,a=!r;if(n&&FS.root)throw new FS.ErrnoError(ERRNO_CODES.EBUSY);if(!n&&!a){var i=FS.lookupPath(r,{follow_mount:!1});if(r=i.path,o=i.node,FS.isMountpoint(o))throw new FS.ErrnoError(ERRNO_CODES.EBUSY);if(!FS.isDir(o.mode))throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var s={type:e,opts:t,mountpoint:r,mounts:[]},u=e.mount(s);return u.mount=s,s.root=u,n?FS.root=u:o&&(o.mounted=s,o.mount&&o.mount.mounts.push(s)),u},unmount:function(e){var t=FS.lookupPath(e,{follow_mount:!1});if(!FS.isMountpoint(t.node))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var r=t.node,o=r.mounted,n=FS.getMounts(o);Object.keys(FS.nameTable).forEach((function(e){var t=FS.nameTable[e];while(t){var r=t.name_next;-1!==n.indexOf(t.mount)&&FS.destroyNode(t),t=r}})),r.mounted=null;var a=r.mount.mounts.indexOf(o);assert(-1!==a),r.mount.mounts.splice(a,1)},lookup:function(e,t){return e.node_ops.lookup(e,t)},mknod:function(e,t,r){var o=FS.lookupPath(e,{parent:!0}),n=o.node,a=PATH.basename(e);if(!a||"."===a||".."===a)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var i=FS.mayCreate(n,a);if(i)throw new FS.ErrnoError(i);if(!n.node_ops.mknod)throw new FS.ErrnoError(ERRNO_CODES.EPERM);return n.node_ops.mknod(n,a,t,r)},create:function(e,t){return t=void 0!==t?t:438,t&=4095,t|=32768,FS.mknod(e,t,0)},mkdir:function(e,t){return t=void 0!==t?t:511,t&=1023,t|=16384,FS.mknod(e,t,0)},mkdev:function(e,t,r){return"undefined"===typeof r&&(r=t,t=438),t|=8192,FS.mknod(e,t,r)},symlink:function(e,t){if(!PATH.resolve(e))throw new FS.ErrnoError(ERRNO_CODES.ENOENT);var r=FS.lookupPath(t,{parent:!0}),o=r.node;if(!o)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);var n=PATH.basename(t),a=FS.mayCreate(o,n);if(a)throw new FS.ErrnoError(a);if(!o.node_ops.symlink)throw new FS.ErrnoError(ERRNO_CODES.EPERM);return o.node_ops.symlink(o,n,e)},rename:function(e,t){var r,o,n,a=PATH.dirname(e),i=PATH.dirname(t),s=PATH.basename(e),u=PATH.basename(t);try{r=FS.lookupPath(e,{parent:!0}),o=r.node,r=FS.lookupPath(t,{parent:!0}),n=r.node}catch(m){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!o||!n)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(o.mount!==n.mount)throw new FS.ErrnoError(ERRNO_CODES.EXDEV);var l,c=FS.lookupNode(o,s),d=PATH.relative(e,i);if("."!==d.charAt(0))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);if(d=PATH.relative(t,a),"."!==d.charAt(0))throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);try{l=FS.lookupNode(n,u)}catch(m){}if(c!==l){var f=FS.isDir(c.mode),h=FS.mayDelete(o,s,f);if(h)throw new FS.ErrnoError(h);if(h=l?FS.mayDelete(n,u,f):FS.mayCreate(n,u),h)throw new FS.ErrnoError(h);if(!o.node_ops.rename)throw new FS.ErrnoError(ERRNO_CODES.EPERM);if(FS.isMountpoint(c)||l&&FS.isMountpoint(l))throw new FS.ErrnoError(ERRNO_CODES.EBUSY);if(n!==o&&(h=FS.nodePermissions(o,"w"),h))throw new FS.ErrnoError(h);try{FS.trackingDelegate["willMovePath"]&&FS.trackingDelegate["willMovePath"](e,t)}catch(m){console.log("FS.trackingDelegate['willMovePath']('"+e+"', '"+t+"') threw an exception: "+m.message)}FS.hashRemoveNode(c);try{o.node_ops.rename(c,n,u)}catch(m){throw m}finally{FS.hashAddNode(c)}try{FS.trackingDelegate["onMovePath"]&&FS.trackingDelegate["onMovePath"](e,t)}catch(m){console.log("FS.trackingDelegate['onMovePath']('"+e+"', '"+t+"') threw an exception: "+m.message)}}},rmdir:function(e){var t=FS.lookupPath(e,{parent:!0}),r=t.node,o=PATH.basename(e),n=FS.lookupNode(r,o),a=FS.mayDelete(r,o,!0);if(a)throw new FS.ErrnoError(a);if(!r.node_ops.rmdir)throw new FS.ErrnoError(ERRNO_CODES.EPERM);if(FS.isMountpoint(n))throw new FS.ErrnoError(ERRNO_CODES.EBUSY);try{FS.trackingDelegate["willDeletePath"]&&FS.trackingDelegate["willDeletePath"](e)}catch(i){console.log("FS.trackingDelegate['willDeletePath']('"+e+"') threw an exception: "+i.message)}r.node_ops.rmdir(r,o),FS.destroyNode(n);try{FS.trackingDelegate["onDeletePath"]&&FS.trackingDelegate["onDeletePath"](e)}catch(i){console.log("FS.trackingDelegate['onDeletePath']('"+e+"') threw an exception: "+i.message)}},readdir:function(e){var t=FS.lookupPath(e,{follow:!0}),r=t.node;if(!r.node_ops.readdir)throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);return r.node_ops.readdir(r)},unlink:function(e){var t=FS.lookupPath(e,{parent:!0}),r=t.node,o=PATH.basename(e),n=FS.lookupNode(r,o),a=FS.mayDelete(r,o,!1);if(a)throw a===ERRNO_CODES.EISDIR&&(a=ERRNO_CODES.EPERM),new FS.ErrnoError(a);if(!r.node_ops.unlink)throw new FS.ErrnoError(ERRNO_CODES.EPERM);if(FS.isMountpoint(n))throw new FS.ErrnoError(ERRNO_CODES.EBUSY);try{FS.trackingDelegate["willDeletePath"]&&FS.trackingDelegate["willDeletePath"](e)}catch(i){console.log("FS.trackingDelegate['willDeletePath']('"+e+"') threw an exception: "+i.message)}r.node_ops.unlink(r,o),FS.destroyNode(n);try{FS.trackingDelegate["onDeletePath"]&&FS.trackingDelegate["onDeletePath"](e)}catch(i){console.log("FS.trackingDelegate['onDeletePath']('"+e+"') threw an exception: "+i.message)}},readlink:function(e){var t=FS.lookupPath(e),r=t.node;if(!r)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(!r.node_ops.readlink)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);return r.node_ops.readlink(r)},stat:function(e,t){var r=FS.lookupPath(e,{follow:!t}),o=r.node;if(!o)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(!o.node_ops.getattr)throw new FS.ErrnoError(ERRNO_CODES.EPERM);return o.node_ops.getattr(o)},lstat:function(e){return FS.stat(e,!0)},chmod:function(e,t,r){var o;if("string"===typeof e){var n=FS.lookupPath(e,{follow:!r});o=n.node}else o=e;if(!o.node_ops.setattr)throw new FS.ErrnoError(ERRNO_CODES.EPERM);o.node_ops.setattr(o,{mode:4095&t|-4096&o.mode,timestamp:Date.now()})},lchmod:function(e,t){FS.chmod(e,t,!0)},fchmod:function(e,t){var r=FS.getStream(e);if(!r)throw new FS.ErrnoError(ERRNO_CODES.EBADF);FS.chmod(r.node,t)},chown:function(e,t,r,o){var n;if("string"===typeof e){var a=FS.lookupPath(e,{follow:!o});n=a.node}else n=e;if(!n.node_ops.setattr)throw new FS.ErrnoError(ERRNO_CODES.EPERM);n.node_ops.setattr(n,{timestamp:Date.now()})},lchown:function(e,t,r){FS.chown(e,t,r,!0)},fchown:function(e,t,r){var o=FS.getStream(e);if(!o)throw new FS.ErrnoError(ERRNO_CODES.EBADF);FS.chown(o.node,t,r)},truncate:function(e,t){if(t<0)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var r;if("string"===typeof e){var o=FS.lookupPath(e,{follow:!0});r=o.node}else r=e;if(!r.node_ops.setattr)throw new FS.ErrnoError(ERRNO_CODES.EPERM);if(FS.isDir(r.mode))throw new FS.ErrnoError(ERRNO_CODES.EISDIR);if(!FS.isFile(r.mode))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var n=FS.nodePermissions(r,"w");if(n)throw new FS.ErrnoError(n);r.node_ops.setattr(r,{size:t,timestamp:Date.now()})},ftruncate:function(e,t){var r=FS.getStream(e);if(!r)throw new FS.ErrnoError(ERRNO_CODES.EBADF);if(0===(2097155&r.flags))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);FS.truncate(r.node,t)},utime:function(e,t,r){var o=FS.lookupPath(e,{follow:!0}),n=o.node;n.node_ops.setattr(n,{timestamp:Math.max(t,r)})},open:function(e,t,r,o,n){if(""===e)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);var a;if(t="string"===typeof t?FS.modeStringToFlags(t):t,r="undefined"===typeof r?438:r,r=64&t?4095&r|32768:0,"object"===typeof e)a=e;else{e=PATH.normalize(e);try{var i=FS.lookupPath(e,{follow:!(131072&t)});a=i.node}catch(d){}}var s=!1;if(64&t)if(a){if(128&t)throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}else a=FS.mknod(e,r,0),s=!0;if(!a)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(FS.isChrdev(a.mode)&&(t&=-513),!s){var u=FS.mayOpen(a,t);if(u)throw new FS.ErrnoError(u)}512&t&&FS.truncate(a,0),t&=-641;var l=FS.createStream({node:a,path:FS.getPath(a),flags:t,seekable:!0,position:0,stream_ops:a.stream_ops,ungotten:[],error:!1},o,n);l.stream_ops.open&&l.stream_ops.open(l),!Module["logReadFiles"]||1&t||(FS.readFiles||(FS.readFiles={}),e in FS.readFiles||(FS.readFiles[e]=1,Module["printErr"]("read file: "+e)));try{if(FS.trackingDelegate["onOpenFile"]){var c=0;1!==(2097155&t)&&(c|=FS.tracking.openFlags.READ),0!==(2097155&t)&&(c|=FS.tracking.openFlags.WRITE),FS.trackingDelegate["onOpenFile"](e,c)}}catch(d){console.log("FS.trackingDelegate['onOpenFile']('"+e+"', flags) threw an exception: "+d.message)}return l},close:function(e){try{e.stream_ops.close&&e.stream_ops.close(e)}catch(t){throw t}finally{FS.closeStream(e.fd)}},llseek:function(e,t,r){if(!e.seekable||!e.stream_ops.llseek)throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);return e.stream_ops.llseek(e,t,r)},read:function(e,t,r,o,n){if(o<0||n<0)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);if(1===(2097155&e.flags))throw new FS.ErrnoError(ERRNO_CODES.EBADF);if(FS.isDir(e.node.mode))throw new FS.ErrnoError(ERRNO_CODES.EISDIR);if(!e.stream_ops.read)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var a=!0;if("undefined"===typeof n)n=e.position,a=!1;else if(!e.seekable)throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);var i=e.stream_ops.read(e,t,r,o,n);return a||(e.position+=i),i},write:function(e,t,r,o,n,a){if(o<0||n<0)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);if(0===(2097155&e.flags))throw new FS.ErrnoError(ERRNO_CODES.EBADF);if(FS.isDir(e.node.mode))throw new FS.ErrnoError(ERRNO_CODES.EISDIR);if(!e.stream_ops.write)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);1024&e.flags&&FS.llseek(e,0,2);var i=!0;if("undefined"===typeof n)n=e.position,i=!1;else if(!e.seekable)throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);var s=e.stream_ops.write(e,t,r,o,n,a);i||(e.position+=s);try{e.path&&FS.trackingDelegate["onWriteToFile"]&&FS.trackingDelegate["onWriteToFile"](e.path)}catch(u){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+u.message)}return s},allocate:function(e,t,r){if(t<0||r<=0)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);if(0===(2097155&e.flags))throw new FS.ErrnoError(ERRNO_CODES.EBADF);if(!FS.isFile(e.node.mode)&&!FS.isDir(node.mode))throw new FS.ErrnoError(ERRNO_CODES.ENODEV);if(!e.stream_ops.allocate)throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);e.stream_ops.allocate(e,t,r)},mmap:function(e,t,r,o,n,a,i){if(1===(2097155&e.flags))throw new FS.ErrnoError(ERRNO_CODES.EACCES);if(!e.stream_ops.mmap)throw new FS.ErrnoError(ERRNO_CODES.ENODEV);return e.stream_ops.mmap(e,t,r,o,n,a,i)},ioctl:function(e,t,r){if(!e.stream_ops.ioctl)throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);return e.stream_ops.ioctl(e,t,r)},readFile:function(e,t){if(t=t||{},t.flags=t.flags||"r",t.encoding=t.encoding||"binary","utf8"!==t.encoding&&"binary"!==t.encoding)throw new Error('Invalid encoding type "'+t.encoding+'"');var r,o=FS.open(e,t.flags),n=FS.stat(e),a=n.size,i=new Uint8Array(a);if(FS.read(o,i,0,a,0),"utf8"===t.encoding){r="";for(var s=new Runtime.UTF8Processor,u=0;u<a;u++)r+=s.processCChar(i[u])}else"binary"===t.encoding&&(r=i);return FS.close(o),r},writeFile:function(e,t,r){if(r=r||{},r.flags=r.flags||"w",r.encoding=r.encoding||"utf8","utf8"!==r.encoding&&"binary"!==r.encoding)throw new Error('Invalid encoding type "'+r.encoding+'"');var o=FS.open(e,r.flags,r.mode);if("utf8"===r.encoding){var n=new Runtime.UTF8Processor,a=new Uint8Array(n.processJSString(t));FS.write(o,a,0,a.length,0,r.canOwn)}else"binary"===r.encoding&&FS.write(o,t,0,t.length,0,r.canOwn);FS.close(o)},cwd:function(){return FS.currentPath},chdir:function(e){var t=FS.lookupPath(e,{follow:!0});if(!FS.isDir(t.node.mode))throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);var r=FS.nodePermissions(t.node,"x");if(r)throw new FS.ErrnoError(r);FS.currentPath=t.path},createDefaultDirectories:function(){FS.mkdir("/tmp"),FS.mkdir("/home"),FS.mkdir("/home/web_user")},createDefaultDevices:function(){var e;if(FS.mkdir("/dev"),FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(){return 0}}),FS.mkdev("/dev/null",FS.makedev(1,3)),TTY.register(FS.makedev(5,0),TTY.default_tty_ops),TTY.register(FS.makedev(6,0),TTY.default_tty1_ops),FS.mkdev("/dev/tty",FS.makedev(5,0)),FS.mkdev("/dev/tty1",FS.makedev(6,0)),"undefined"!==typeof crypto){var t=new Uint8Array(1);e=function(){return crypto.getRandomValues(t),t[0]}}else e=ENVIRONMENT_IS_NODE?function(){return __webpack_require__("7b04").randomBytes(1)[0]}:function(){return Math.floor(256*Math.random())};FS.createDevice("/dev","random",e),FS.createDevice("/dev","urandom",e),FS.mkdir("/dev/shm"),FS.mkdir("/dev/shm/tmp")},createStandardStreams:function(){Module["stdin"]?FS.createDevice("/dev","stdin",Module["stdin"]):FS.symlink("/dev/tty","/dev/stdin"),Module["stdout"]?FS.createDevice("/dev","stdout",null,Module["stdout"]):FS.symlink("/dev/tty","/dev/stdout"),Module["stderr"]?FS.createDevice("/dev","stderr",null,Module["stderr"]):FS.symlink("/dev/tty1","/dev/stderr");var e=FS.open("/dev/stdin","r");SAFE_HEAP_STORE(0|_stdin,0|FS.getPtrForStream(e),4,0),assert(0===e.fd,"invalid handle for stdin ("+e.fd+")");var t=FS.open("/dev/stdout","w");SAFE_HEAP_STORE(0|_stdout,0|FS.getPtrForStream(t),4,0),assert(1===t.fd,"invalid handle for stdout ("+t.fd+")");var r=FS.open("/dev/stderr","w");SAFE_HEAP_STORE(0|_stderr,0|FS.getPtrForStream(r),4,0),assert(2===r.fd,"invalid handle for stderr ("+r.fd+")")},ensureErrnoError:function(){FS.ErrnoError||(FS.ErrnoError=function(e){for(var t in this.errno=e,ERRNO_CODES)if(ERRNO_CODES[t]===e){this.code=t;break}this.message=ERRNO_MESSAGES[e]},FS.ErrnoError.prototype=new Error,FS.ErrnoError.prototype.constructor=FS.ErrnoError,[ERRNO_CODES.ENOENT].forEach((function(e){FS.genericErrors[e]=new FS.ErrnoError(e),FS.genericErrors[e].stack="<generic error, no stack>"})))},staticInit:function(){FS.ensureErrnoError(),FS.nameTable=new Array(4096),FS.mount(MEMFS,{},"/"),FS.createDefaultDirectories(),FS.createDefaultDevices()},init:function(e,t,r){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)"),FS.init.initialized=!0,FS.ensureErrnoError(),Module["stdin"]=e||Module["stdin"],Module["stdout"]=t||Module["stdout"],Module["stderr"]=r||Module["stderr"],FS.createStandardStreams()},quit:function(){FS.init.initialized=!1;for(var e=0;e<FS.streams.length;e++){var t=FS.streams[e];t&&FS.close(t)}},getMode:function(e,t){var r=0;return e&&(r|=365),t&&(r|=146),r},joinPath:function(e,t){var r=PATH.join.apply(null,e);return t&&"/"==r[0]&&(r=r.substr(1)),r},absolutePath:function(e,t){return PATH.resolve(t,e)},standardizePath:function(e){return PATH.normalize(e)},findObject:function(e,t){var r=FS.analyzePath(e,t);return r.exists?r.object:(___setErrNo(r.error),null)},analyzePath:function(e,t){try{var r=FS.lookupPath(e,{follow:!t});e=r.path}catch(n){}var o={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{r=FS.lookupPath(e,{parent:!0});o.parentExists=!0,o.parentPath=r.path,o.parentObject=r.node,o.name=PATH.basename(e),r=FS.lookupPath(e,{follow:!t}),o.exists=!0,o.path=r.path,o.object=r.node,o.name=r.node.name,o.isRoot="/"===r.path}catch(n){o.error=n.errno}return o},createFolder:function(e,t,r,o){var n=PATH.join2("string"===typeof e?e:FS.getPath(e),t),a=FS.getMode(r,o);return FS.mkdir(n,a)},createPath:function(e,t,r,o){e="string"===typeof e?e:FS.getPath(e);var n=t.split("/").reverse();while(n.length){var a=n.pop();if(a){var i=PATH.join2(e,a);try{FS.mkdir(i)}catch(s){}e=i}}return i},createFile:function(e,t,r,o,n){var a=PATH.join2("string"===typeof e?e:FS.getPath(e),t),i=FS.getMode(o,n);return FS.create(a,i)},createDataFile:function(e,t,r,o,n,a){var i=t?PATH.join2("string"===typeof e?e:FS.getPath(e),t):e,s=FS.getMode(o,n),u=FS.create(i,s);if(r){if("string"===typeof r){for(var l=new Array(r.length),c=0,d=r.length;c<d;++c)l[c]=r.charCodeAt(c);r=l}FS.chmod(u,146|s);var f=FS.open(u,"w");FS.write(f,r,0,r.length,0,a),FS.close(f),FS.chmod(u,s)}return u},createDevice:function(e,t,r,o){var n=PATH.join2("string"===typeof e?e:FS.getPath(e),t),a=FS.getMode(!!r,!!o);FS.createDevice.major||(FS.createDevice.major=64);var i=FS.makedev(FS.createDevice.major++,0);return FS.registerDevice(i,{open:function(e){e.seekable=!1},close:function(e){o&&o.buffer&&o.buffer.length&&o(10)},read:function(e,t,o,n,a){for(var i=0,s=0;s<n;s++){var u;try{u=r()}catch(l){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(void 0===u&&0===i)throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);if(null===u||void 0===u)break;i++,t[o+s]=u}return i&&(e.node.timestamp=Date.now()),i},write:function(e,t,r,n,a){for(var i=0;i<n;i++)try{o(t[r+i])}catch(s){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return n&&(e.node.timestamp=Date.now()),i}}),FS.mkdev(n,a,i)},createLink:function(e,t,r,o,n){var a=PATH.join2("string"===typeof e?e:FS.getPath(e),t);return FS.symlink(r,a)},forceLoadFile:function(e){if(e.isDevice||e.isFolder||e.link||e.contents)return!0;var t=!0;if("undefined"!==typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!Module["read"])throw new Error("Cannot load without read() or XMLHttpRequest.");try{e.contents=intArrayFromString(Module["read"](e.url),!0),e.usedBytes=e.contents.length}catch(r){t=!1}return t||___setErrNo(ERRNO_CODES.EIO),t},createLazyFile:function(e,t,r,o,n){function a(){this.lengthKnown=!1,this.chunks=[]}if(a.prototype.get=function(e){if(!(e>this.length-1||e<0)){var t=e%this.chunkSize,r=Math.floor(e/this.chunkSize);return this.getter(r)[t]}},a.prototype.setDataGetter=function(e){this.getter=e},a.prototype.cacheLength=function(){var e=new XMLHttpRequest;if(e.open("HEAD",r,!1),e.send(null),!(e.status>=200&&e.status<300||304===e.status))throw new Error("Couldn't load "+r+". Status: "+e.status);var t,o=Number(e.getResponseHeader("Content-length")),n=(t=e.getResponseHeader("Accept-Ranges"))&&"bytes"===t,a=1048576;n||(a=o);var i=function(e,t){if(e>t)throw new Error("invalid range ("+e+", "+t+") or no bytes requested!");if(t>o-1)throw new Error("only "+o+" bytes available! programmer error!");var n=new XMLHttpRequest;if(n.open("GET",r,!1),o!==a&&n.setRequestHeader("Range","bytes="+e+"-"+t),"undefined"!=typeof Uint8Array&&(n.responseType="arraybuffer"),n.overrideMimeType&&n.overrideMimeType("text/plain; charset=x-user-defined"),n.send(null),!(n.status>=200&&n.status<300||304===n.status))throw new Error("Couldn't load "+r+". Status: "+n.status);return void 0!==n.response?new Uint8Array(n.response||[]):intArrayFromString(n.responseText||"",!0)},s=this;s.setDataGetter((function(e){var t=e*a,r=(e+1)*a-1;if(r=Math.min(r,o-1),"undefined"===typeof s.chunks[e]&&(s.chunks[e]=i(t,r)),"undefined"===typeof s.chunks[e])throw new Error("doXHR failed!");return s.chunks[e]})),this._length=o,this._chunkSize=a,this.lengthKnown=!0},"undefined"!==typeof XMLHttpRequest){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var i=new a;Object.defineProperty(i,"length",{get:function(){return this.lengthKnown||this.cacheLength(),this._length}}),Object.defineProperty(i,"chunkSize",{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}});var s={isDevice:!1,contents:i}}else s={isDevice:!1,url:r};var u=FS.createFile(e,t,s,o,n);s.contents?u.contents=s.contents:s.url&&(u.contents=null,u.url=s.url),Object.defineProperty(u,"usedBytes",{get:function(){return this.contents.length}});var l={},c=Object.keys(u.stream_ops);return c.forEach((function(e){var t=u.stream_ops[e];l[e]=function(){if(!FS.forceLoadFile(u))throw new FS.ErrnoError(ERRNO_CODES.EIO);return t.apply(null,arguments)}})),l.read=function(e,t,r,o,n){if(!FS.forceLoadFile(u))throw new FS.ErrnoError(ERRNO_CODES.EIO);var a=e.node.contents;if(n>=a.length)return 0;var i=Math.min(a.length-n,o);if(assert(i>=0),a.slice)for(var s=0;s<i;s++)t[r+s]=a[n+s];else for(s=0;s<i;s++)t[r+s]=a.get(n+s);return i},u.stream_ops=l,u},createPreloadedFile:function(e,t,r,o,n,a,i,s,u){Browser.init();var l=t?PATH.resolve(PATH.join2(e,t)):e;function c(r){function c(r){s||FS.createDataFile(e,t,r,o,n,u),a&&a(),removeRunDependency("cp "+l)}var d=!1;Module["preloadPlugins"].forEach((function(e){d||e["canHandle"](l)&&(e["handle"](r,l,c,(function(){i&&i(),removeRunDependency("cp "+l)})),d=!0)})),d||c(r)}addRunDependency("cp "+l),"string"==typeof r?Browser.asyncLoad(r,(function(e){c(e)}),i):c(r)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(e,t,r){t=t||function(){},r=r||function(){};var o=FS.indexedDB();try{var n=o.open(FS.DB_NAME(),FS.DB_VERSION)}catch(a){return r(a)}n.onupgradeneeded=function(){console.log("creating db");var e=n.result;e.createObjectStore(FS.DB_STORE_NAME)},n.onsuccess=function(){var o=n.result,a=o.transaction([FS.DB_STORE_NAME],"readwrite"),i=a.objectStore(FS.DB_STORE_NAME),s=0,u=0,l=e.length;function c(){0==u?t():r()}e.forEach((function(e){var t=i.put(FS.analyzePath(e).object.contents,e);t.onsuccess=function(){s++,s+u==l&&c()},t.onerror=function(){u++,s+u==l&&c()}})),a.onerror=r},n.onerror=r},loadFilesFromDB:function(e,t,r){t=t||function(){},r=r||function(){};var o=FS.indexedDB();try{var n=o.open(FS.DB_NAME(),FS.DB_VERSION)}catch(a){return r(a)}n.onupgradeneeded=r,n.onsuccess=function(){var o=n.result;try{var i=o.transaction([FS.DB_STORE_NAME],"readonly")}catch(a){return void r(a)}var s=i.objectStore(FS.DB_STORE_NAME),u=0,l=0,c=e.length;function d(){0==l?t():r()}e.forEach((function(e){var t=s.get(e);t.onsuccess=function(){FS.analyzePath(e).exists&&FS.unlink(e),FS.createDataFile(PATH.dirname(e),PATH.basename(e),t.result,!0,!0,!0),u++,u+l==c&&d()},t.onerror=function(){l++,u+l==c&&d()}})),i.onerror=r},n.onerror=r}},PATH={splitPath:function(e){var t=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return t.exec(e).slice(1)},normalizeArray:function(e,t){for(var r=0,o=e.length-1;o>=0;o--){var n=e[o];"."===n?e.splice(o,1):".."===n?(e.splice(o,1),r++):r&&(e.splice(o,1),r--)}if(t)for(;r--;r)e.unshift("..");return e},normalize:function(e){var t="/"===e.charAt(0),r="/"===e.substr(-1);return e=PATH.normalizeArray(e.split("/").filter((function(e){return!!e})),!t).join("/"),e||t||(e="."),e&&r&&(e+="/"),(t?"/":"")+e},dirname:function(e){var t=PATH.splitPath(e),r=t[0],o=t[1];return r||o?(o&&(o=o.substr(0,o.length-1)),r+o):"."},basename:function(e){if("/"===e)return"/";var t=e.lastIndexOf("/");return-1===t?e:e.substr(t+1)},extname:function(e){return PATH.splitPath(e)[3]},join:function(){var e=Array.prototype.slice.call(arguments,0);return PATH.normalize(e.join("/"))},join2:function(e,t){return PATH.normalize(e+"/"+t)},resolve:function(){for(var e="",t=!1,r=arguments.length-1;r>=-1&&!t;r--){var o=r>=0?arguments[r]:FS.cwd();if("string"!==typeof o)throw new TypeError("Arguments to path.resolve must be strings");if(!o)return"";e=o+"/"+e,t="/"===o.charAt(0)}return e=PATH.normalizeArray(e.split("/").filter((function(e){return!!e})),!t).join("/"),(t?"/":"")+e||"."},relative:function(e,t){function r(e){for(var t=0;t<e.length;t++)if(""!==e[t])break;for(var r=e.length-1;r>=0;r--)if(""!==e[r])break;return t>r?[]:e.slice(t,r-t+1)}e=PATH.resolve(e).substr(1),t=PATH.resolve(t).substr(1);for(var o=r(e.split("/")),n=r(t.split("/")),a=Math.min(o.length,n.length),i=a,s=0;s<a;s++)if(o[s]!==n[s]){i=s;break}var u=[];for(s=i;s<o.length;s++)u.push("..");return u=u.concat(n.slice(i)),u.join("/")}},Browser={mainLoop:{scheduler:null,method:"",shouldPause:!1,paused:!1,queue:[],pause:function(){Browser.mainLoop.shouldPause=!0},resume:function(){Browser.mainLoop.paused&&(Browser.mainLoop.paused=!1,Browser.mainLoop.scheduler()),Browser.mainLoop.shouldPause=!1},updateStatus:function(){if(Module["setStatus"]){var e=Module["statusMessage"]||"Please wait...",t=Browser.mainLoop.remainingBlockers,r=Browser.mainLoop.expectedBlockers;t?t<r?Module["setStatus"](e+" ("+(r-t)+"/"+r+")"):Module["setStatus"](e):Module["setStatus"]("")}},runIter:function(e){if(!ABORT){if(Module["preMainLoop"]){var t=Module["preMainLoop"]();if(!1===t)return}try{e()}catch(r){if(r instanceof ExitStatus)return;throw r&&"object"===typeof r&&r.stack&&Module.printErr("exception thrown: "+[r,r.stack]),r}Module["postMainLoop"]&&Module["postMainLoop"]()}}},isFullScreen:!1,pointerLock:!1,moduleContextCreatedCallbacks:[],workers:[],init:function(){if(Module["preloadPlugins"]||(Module["preloadPlugins"]=[]),!Browser.initted){Browser.initted=!0;try{new Blob,Browser.hasBlobConstructor=!0}catch(n){Browser.hasBlobConstructor=!1,console.log("warning: no blob constructor, cannot create blobs with mimetypes")}Browser.BlobBuilder="undefined"!=typeof MozBlobBuilder?MozBlobBuilder:"undefined"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:Browser.hasBlobConstructor?null:console.log("warning: no BlobBuilder"),Browser.URLObject="undefined"!=typeof window?window.URL?window.URL:window.webkitURL:void 0,Module.noImageDecoding||"undefined"!==typeof Browser.URLObject||(console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available."),Module.noImageDecoding=!0);var e={canHandle:function(e){return!Module.noImageDecoding&&/\.(jpg|jpeg|png|bmp)$/i.test(e)},handle:function(e,t,r,o){var a=null;if(Browser.hasBlobConstructor)try{a=new Blob([e],{type:Browser.getMimetype(t)}),a.size!==e.length&&(a=new Blob([new Uint8Array(e).buffer],{type:Browser.getMimetype(t)}))}catch(n){Runtime.warnOnce("Blob constructor present but fails: "+n+"; falling back to blob builder")}if(!a){var i=new Browser.BlobBuilder;i.append(new Uint8Array(e).buffer),a=i.getBlob()}var s=Browser.URLObject.createObjectURL(a),u=new Image;u.onload=function(){assert(u.complete,"Image "+t+" could not be decoded");var o=document.createElement("canvas");o.width=u.width,o.height=u.height;var n=o.getContext("2d");n.drawImage(u,0,0),Module["preloadedImages"][t]=o,Browser.URLObject.revokeObjectURL(s),r&&r(e)},u.onerror=function(e){console.log("Image "+s+" could not be decoded"),o&&o()},u.src=s}};Module["preloadPlugins"].push(e);var t={canHandle:function(e){return!Module.noAudioDecoding&&e.substr(-4)in{".ogg":1,".wav":1,".mp3":1}},handle:function(e,t,r,o){var a=!1;function i(o){a||(a=!0,Module["preloadedAudios"][t]=o,r&&r(e))}function s(){a||(a=!0,Module["preloadedAudios"][t]=new Audio,o&&o())}if(!Browser.hasBlobConstructor)return s();try{var u=new Blob([e],{type:Browser.getMimetype(t)})}catch(n){return s()}var l=Browser.URLObject.createObjectURL(u),c=new Audio;c.addEventListener("canplaythrough",(function(){i(c)}),!1),c.onerror=function(r){function o(e){for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r="=",o="",n=0,a=0,i=0;i<e.length;i++){n=n<<8|e[i],a+=8;while(a>=6){var s=n>>a-6&63;a-=6,o+=t[s]}}return 2==a?(o+=t[(3&n)<<4],o+=r+r):4==a&&(o+=t[(15&n)<<2],o+=r),o}a||(console.log("warning: browser could not fully decode audio "+t+", trying slower base64 approach"),c.src="data:audio/x-"+t.substr(-3)+";base64,"+o(e),i(c))},c.src=l,Browser.safeSetTimeout((function(){i(c)}),1e4)}};Module["preloadPlugins"].push(t);var r=Module["canvas"];r&&(r.requestPointerLock=r["requestPointerLock"]||r["mozRequestPointerLock"]||r["webkitRequestPointerLock"]||r["msRequestPointerLock"]||function(){},r.exitPointerLock=document["exitPointerLock"]||document["mozExitPointerLock"]||document["webkitExitPointerLock"]||document["msExitPointerLock"]||function(){},r.exitPointerLock=r.exitPointerLock.bind(document),document.addEventListener("pointerlockchange",o,!1),document.addEventListener("mozpointerlockchange",o,!1),document.addEventListener("webkitpointerlockchange",o,!1),document.addEventListener("mspointerlockchange",o,!1),Module["elementPointerLock"]&&r.addEventListener("click",(function(e){!Browser.pointerLock&&r.requestPointerLock&&(r.requestPointerLock(),e.preventDefault())}),!1))}function o(){Browser.pointerLock=document["pointerLockElement"]===r||document["mozPointerLockElement"]===r||document["webkitPointerLockElement"]===r||document["msPointerLockElement"]===r}},createContext:function(e,t,r,o){if(t&&Module.ctx&&e==Module.canvas)return Module.ctx;var n,a;if(t){var i={antialias:!1,alpha:!1};if(o)for(var s in o)i[s]=o[s];a=GL.createContext(e,i),n=GL.getContext(a).GLctx,e.style.backgroundColor="black"}else n=e.getContext("2d");return n?(r&&(t||assert("undefined"===typeof GLctx,"cannot set in module if GLctx is used, but we are a non-GL context that would replace it"),Module.ctx=n,t&&GL.makeContextCurrent(a),Module.useWebGL=t,Browser.moduleContextCreatedCallbacks.forEach((function(e){e()})),Browser.init()),n):null},destroyContext:function(e,t,r){},fullScreenHandlersInstalled:!1,lockPointer:void 0,resizeCanvas:void 0,requestFullScreen:function(e,t){Browser.lockPointer=e,Browser.resizeCanvas=t,"undefined"===typeof Browser.lockPointer&&(Browser.lockPointer=!0),"undefined"===typeof Browser.resizeCanvas&&(Browser.resizeCanvas=!1);var r=Module["canvas"];function o(){Browser.isFullScreen=!1;var e=r.parentNode;(document["webkitFullScreenElement"]||document["webkitFullscreenElement"]||document["mozFullScreenElement"]||document["mozFullscreenElement"]||document["fullScreenElement"]||document["fullscreenElement"]||document["msFullScreenElement"]||document["msFullscreenElement"]||document["webkitCurrentFullScreenElement"])===e?(r.cancelFullScreen=document["cancelFullScreen"]||document["mozCancelFullScreen"]||document["webkitCancelFullScreen"]||document["msExitFullscreen"]||document["exitFullscreen"]||function(){},r.cancelFullScreen=r.cancelFullScreen.bind(document),Browser.lockPointer&&r.requestPointerLock(),Browser.isFullScreen=!0,Browser.resizeCanvas&&Browser.setFullScreenCanvasSize()):(e.parentNode.insertBefore(r,e),e.parentNode.removeChild(e),Browser.resizeCanvas&&Browser.setWindowedCanvasSize()),Module["onFullScreen"]&&Module["onFullScreen"](Browser.isFullScreen),Browser.updateCanvasDimensions(r)}Browser.fullScreenHandlersInstalled||(Browser.fullScreenHandlersInstalled=!0,document.addEventListener("fullscreenchange",o,!1),document.addEventListener("mozfullscreenchange",o,!1),document.addEventListener("webkitfullscreenchange",o,!1),document.addEventListener("MSFullscreenChange",o,!1));var n=document.createElement("div");r.parentNode.insertBefore(n,r),n.appendChild(r),n.requestFullScreen=n["requestFullScreen"]||n["mozRequestFullScreen"]||n["msRequestFullscreen"]||(n["webkitRequestFullScreen"]?function(){n["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"])}:null),n.requestFullScreen()},nextRAF:0,fakeRequestAnimationFrame:function(e){var t=Date.now();if(0===Browser.nextRAF)Browser.nextRAF=t+1e3/60;else while(t+2>=Browser.nextRAF)Browser.nextRAF+=1e3/60;var r=Math.max(Browser.nextRAF-t,0);setTimeout(e,r)},requestAnimationFrame:function(e){"undefined"===typeof window?Browser.fakeRequestAnimationFrame(e):(window.requestAnimationFrame||(window.requestAnimationFrame=window["requestAnimationFrame"]||window["mozRequestAnimationFrame"]||window["webkitRequestAnimationFrame"]||window["msRequestAnimationFrame"]||window["oRequestAnimationFrame"]||Browser.fakeRequestAnimationFrame),window.requestAnimationFrame(e))},safeCallback:function(e){return function(){if(!ABORT)return e.apply(null,arguments)}},safeRequestAnimationFrame:function(e){return Browser.requestAnimationFrame((function(){ABORT||e()}))},safeSetTimeout:function(e,t){return Module["noExitRuntime"]=!0,setTimeout((function(){ABORT||e()}),t)},safeSetInterval:function(e,t){return Module["noExitRuntime"]=!0,setInterval((function(){ABORT||e()}),t)},getMimetype:function(e){return{jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",bmp:"image/bmp",ogg:"audio/ogg",wav:"audio/wav",mp3:"audio/mpeg"}[e.substr(e.lastIndexOf(".")+1)]},getUserMedia:function(e){window.getUserMedia||(window.getUserMedia=navigator["getUserMedia"]||navigator["mozGetUserMedia"]),window.getUserMedia(e)},getMovementX:function(e){return e["movementX"]||e["mozMovementX"]||e["webkitMovementX"]||0},getMovementY:function(e){return e["movementY"]||e["mozMovementY"]||e["webkitMovementY"]||0},getMouseWheelDelta:function(e){var t=0;switch(e.type){case"DOMMouseScroll":t=e.detail;break;case"mousewheel":t=-e.wheelDelta;break;case"wheel":t=e.deltaY;break;default:throw"unrecognized mouse wheel event: "+e.type}return Math.max(-1,Math.min(1,t))},mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function(e){if(Browser.pointerLock)"mousemove"!=e.type&&"mozMovementX"in e?Browser.mouseMovementX=Browser.mouseMovementY=0:(Browser.mouseMovementX=Browser.getMovementX(e),Browser.mouseMovementY=Browser.getMovementY(e)),"undefined"!=typeof SDL?(Browser.mouseX=SDL.mouseX+Browser.mouseMovementX,Browser.mouseY=SDL.mouseY+Browser.mouseMovementY):(Browser.mouseX+=Browser.mouseMovementX,Browser.mouseY+=Browser.mouseMovementY);else{var t=Module["canvas"].getBoundingClientRect(),r=Module["canvas"].width,o=Module["canvas"].height,n="undefined"!==typeof window.scrollX?window.scrollX:window.pageXOffset,a="undefined"!==typeof window.scrollY?window.scrollY:window.pageYOffset;if("touchstart"===e.type||"touchend"===e.type||"touchmove"===e.type){var i=e.touch;if(void 0===i)return;var s=i.pageX-(n+t.left),u=i.pageY-(a+t.top);s*=r/t.width,u*=o/t.height;var l={x:s,y:u};return void("touchstart"===e.type?(Browser.lastTouches[i.identifier]=l,Browser.touches[i.identifier]=l):"touchend"!==e.type&&"touchmove"!==e.type||(Browser.lastTouches[i.identifier]=Browser.touches[i.identifier],Browser.touches[i.identifier]={x:s,y:u}))}var c=e.pageX-(n+t.left),d=e.pageY-(a+t.top);c*=r/t.width,d*=o/t.height,Browser.mouseMovementX=c-Browser.mouseX,Browser.mouseMovementY=d-Browser.mouseY,Browser.mouseX=c,Browser.mouseY=d}},xhrLoad:function(e,t,r){var o=new XMLHttpRequest;o.open("GET",e,!0),o.responseType="arraybuffer",o.onload=function(){200==o.status||0==o.status&&o.response?t(o.response):r()},o.onerror=r,o.send(null)},asyncLoad:function(e,t,r,o){Browser.xhrLoad(e,(function(r){assert(r,'Loading data file "'+e+'" failed (no arrayBuffer).'),t(new Uint8Array(r)),o||removeRunDependency("al "+e)}),(function(t){if(!r)throw'Loading data file "'+e+'" failed.';r()})),o||addRunDependency("al "+e)},resizeListeners:[],updateResizeListeners:function(){var e=Module["canvas"];Browser.resizeListeners.forEach((function(t){t(e.width,e.height)}))},setCanvasSize:function(e,t,r){var o=Module["canvas"];Browser.updateCanvasDimensions(o,e,t),r||Browser.updateResizeListeners()},windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function(){if("undefined"!=typeof SDL){var e=0|SAFE_HEAP_LOAD(SDL.screen+0*Runtime.QUANTUM_SIZE|0,4,0,1);e|=8388608,SAFE_HEAP_STORE(SDL.screen+0*Runtime.QUANTUM_SIZE|0,0|e,4,0)}Browser.updateResizeListeners()},setWindowedCanvasSize:function(){if("undefined"!=typeof SDL){var e=0|SAFE_HEAP_LOAD(SDL.screen+0*Runtime.QUANTUM_SIZE|0,4,0,1);e&=-8388609,SAFE_HEAP_STORE(SDL.screen+0*Runtime.QUANTUM_SIZE|0,0|e,4,0)}Browser.updateResizeListeners()},updateCanvasDimensions:function(e,t,r){t&&r?(e.widthNative=t,e.heightNative=r):(t=e.widthNative,r=e.heightNative);var o=t,n=r;if(Module["forcedAspectRatio"]&&Module["forcedAspectRatio"]>0&&(o/n<Module["forcedAspectRatio"]?o=Math.round(n*Module["forcedAspectRatio"]):n=Math.round(o/Module["forcedAspectRatio"])),(document["webkitFullScreenElement"]||document["webkitFullscreenElement"]||document["mozFullScreenElement"]||document["mozFullscreenElement"]||document["fullScreenElement"]||document["fullscreenElement"]||document["msFullScreenElement"]||document["msFullscreenElement"]||document["webkitCurrentFullScreenElement"])===e.parentNode&&"undefined"!=typeof screen){var a=Math.min(screen.width/o,screen.height/n);o=Math.round(o*a),n=Math.round(n*a)}Browser.resizeCanvas?(e.width!=o&&(e.width=o),e.height!=n&&(e.height=n),"undefined"!=typeof e.style&&(e.style.removeProperty("width"),e.style.removeProperty("height"))):(e.width!=t&&(e.width=t),e.height!=r&&(e.height=r),"undefined"!=typeof e.style&&(o!=t||n!=r?(e.style.setProperty("width",o+"px","important"),e.style.setProperty("height",n+"px","important")):(e.style.removeProperty("width"),e.style.removeProperty("height"))))}};function _emscripten_memcpy_big(e,t,r){return HEAPU8.set(HEAPU8.subarray(t,t+r),e),e}if(Module["_strlen"]=_strlen,Module["_memcpy"]=_memcpy,Module["requestFullScreen"]=function(e,t){Browser.requestFullScreen(e,t)},Module["requestAnimationFrame"]=function(e){Browser.requestAnimationFrame(e)},Module["setCanvasSize"]=function(e,t,r){Browser.setCanvasSize(e,t,r)},Module["pauseMainLoop"]=function(){Browser.mainLoop.pause()},Module["resumeMainLoop"]=function(){Browser.mainLoop.resume()},Module["getUserMedia"]=function(){Browser.getUserMedia()},FS.staticInit(),__ATINIT__.unshift({func:function(){Module["noFSInit"]||FS.init.initialized||FS.init()}}),__ATMAIN__.push({func:function(){FS.ignorePermissions=!1}}),__ATEXIT__.push({func:function(){FS.quit()}}),Module["FS_createFolder"]=FS.createFolder,Module["FS_createPath"]=FS.createPath,Module["FS_createDataFile"]=FS.createDataFile,Module["FS_createPreloadedFile"]=FS.createPreloadedFile,Module["FS_createLazyFile"]=FS.createLazyFile,Module["FS_createLink"]=FS.createLink,Module["FS_createDevice"]=FS.createDevice,___errno_state=Runtime.staticAlloc(4),SAFE_HEAP_STORE(0|___errno_state,0,4,0),__ATINIT__.unshift({func:function(){TTY.init()}}),__ATEXIT__.push({func:function(){TTY.shutdown()}}),TTY.utf8=new Runtime.UTF8Processor,ENVIRONMENT_IS_NODE){var fs=__webpack_require__("f1ac");NODEFS.staticInit()}STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP),staticSealed=!0,STACK_MAX=STACK_BASE+5242880,DYNAMIC_BASE=DYNAMICTOP=Runtime.alignMemory(STACK_MAX),assert(DYNAMIC_BASE<TOTAL_MEMORY,"TOTAL_MEMORY not big enough for stack");var ctlz_i8=allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"i8",ALLOC_DYNAMIC),cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",ALLOC_DYNAMIC),Math_min=Math.min;function asmPrintInt(e,t){Module.print("int "+e+","+t)}function asmPrintFloat(e,t){Module.print("float "+e+","+t)}var asm=function(e,t,r){"use asm";var o=new e.Int8Array(r);var n=new e.Int16Array(r);var a=new e.Int32Array(r);var i=new e.Uint8Array(r);var s=new e.Uint16Array(r);var u=new e.Uint32Array(r);var l=new e.Float32Array(r);var c=new e.Float64Array(r);var d=t.STACKTOP|0;var f=t.STACK_MAX|0;var h=t.tempDoublePtr|0;var m=t.ABORT|0;var p=t.cttz_i8|0;var g=t.ctlz_i8|0;var _=0;var v=0;var b=0;var w=0;var y=+t.NaN,E=+t.Infinity;var S=0,A=0,M=0,k=0,F=0.0,O=0,R=0,T=0,N=0.0;var P=0;var D=0;var x=0;var L=0;var I=0;var C=0;var z=0;var B=0;var j=0;var U=0;var H=e.Math.floor;var q=e.Math.abs;var V=e.Math.sqrt;var Y=e.Math.pow;var W=e.Math.cos;var G=e.Math.sin;var X=e.Math.tan;var K=e.Math.acos;var Z=e.Math.asin;var $=e.Math.atan;var J=e.Math.atan2;var Q=e.Math.exp;var ee=e.Math.log;var te=e.Math.ceil;var re=e.Math.imul;var oe=t.abort;var ne=t.assert;var ae=t.asmPrintInt;var ie=t.asmPrintFloat;var se=t.min;var ue=t.SAFE_HEAP_LOAD;var le=t.SAFE_HEAP_STORE;var ce=t.SAFE_FT_MASK;var de=t._free;var fe=t.___setErrNo;var he=t._malloc;var me=t._emscripten_memcpy_big;var pe=t._fflush;var ge=t.___assert_fail;var _e=0.0;function ve(e){e=e|0;var t=0;t=d;d=d+e|0;d=d+7&-8;return t|0}function be(){return d|0}function we(e){e=e|0;d=e}function ye(e,t){e=e|0;t=t|0;if((_|0)==0){_=e;v=t}}function Ee(e){e=e|0;le(h>>0|0,ue(e>>0|0,1,0,0)|0|0,1,0);le(h+1>>0|0,ue(e+1>>0|0,1,0,0)|0|0,1,0);le(h+2>>0|0,ue(e+2>>0|0,1,0,0)|0|0,1,0);le(h+3>>0|0,ue(e+3>>0|0,1,0,0)|0|0,1,0)}function Se(e){e=e|0;le(h>>0|0,ue(e>>0|0,1,0,0)|0|0,1,0);le(h+1>>0|0,ue(e+1>>0|0,1,0,0)|0|0,1,0);le(h+2>>0|0,ue(e+2>>0|0,1,0,0)|0|0,1,0);le(h+3>>0|0,ue(e+3>>0|0,1,0,0)|0|0,1,0);le(h+4>>0|0,ue(e+4>>0|0,1,0,0)|0|0,1,0);le(h+5>>0|0,ue(e+5>>0|0,1,0,0)|0|0,1,0);le(h+6>>0|0,ue(e+6>>0|0,1,0,0)|0|0,1,0);le(h+7>>0|0,ue(e+7>>0|0,1,0,0)|0|0,1,0)}function Ae(e){e=e|0;P=e}function Me(){return P|0}function ke(e,t,r){e=e|0;t=t|0;r=r|0;var o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,P=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0;o=d;Z=t+40|0;u=t+44|0;f=t+48|0;p=t+52|0;v=t+56|0;y=t+60|0;A=t+64|0;F=t+68|0;T=t+72|0;N=t+76|0;G=t+4|0;V=t+8|0;H=t+12|0;s=t+16|0;h=t+20|0;_=t+24|0;E=t+28|0;k=t+32|0;U=t+36|0;se=(ue(G|0,4,0,0)|0|0)+(ue(u|0,4,0,0)|0|0)|0;ie=(ue(V|0,4,0,0)|0|0)+(ue(f|0,4,0,0)|0|0)|0;ae=(ue(H|0,4,0,0)|0|0)+(ue(p|0,4,0,0)|0|0)|0;ne=(ue(s|0,4,0,0)|0|0)+(ue(v|0,4,0,0)|0|0)|0;oe=(ue(h|0,4,0,0)|0|0)+(ue(y|0,4,0,0)|0|0)|0;re=(ue(_|0,4,0,0)|0|0)+(ue(A|0,4,0,0)|0|0)|0;te=(ue(E|0,4,0,0)|0|0)+(ue(F|0,4,0,0)|0|0)|0;ee=(ue(k|0,4,0,0)|0|0)+(ue(T|0,4,0,0)|0|0)|0;Q=(ue(U|0,4,0,0)|0|0)+(ue(N|0,4,0,0)|0|0)|0;le(e|0,(ue(t|0,4,0,0)|0|0)+(ue(Z|0,4,0,0)|0|0)|0,4,0);ce=e+4|0;le(ce|0,se|0,4,0);se=e+8|0;le(se|0,ie|0,4,0);ie=e+12|0;le(ie|0,ae|0,4,0);ae=e+16|0;le(ae|0,ne|0,4,0);ne=e+20|0;le(ne|0,oe|0,4,0);oe=e+24|0;le(oe|0,re|0,4,0);re=e+28|0;le(re|0,te|0,4,0);te=e+32|0;le(te|0,ee|0,4,0);ee=e+36|0;le(ee|0,Q|0,4,0);Q=e+40|0;G=(ue(u|0,4,0,0)|0|0)-(ue(G|0,4,0,0)|0|0)|0;V=(ue(f|0,4,0,0)|0|0)-(ue(V|0,4,0,0)|0|0)|0;H=(ue(p|0,4,0,0)|0|0)-(ue(H|0,4,0,0)|0|0)|0;s=(ue(v|0,4,0,0)|0|0)-(ue(s|0,4,0,0)|0|0)|0;h=(ue(y|0,4,0,0)|0|0)-(ue(h|0,4,0,0)|0|0)|0;_=(ue(A|0,4,0,0)|0|0)-(ue(_|0,4,0,0)|0|0)|0;E=(ue(F|0,4,0,0)|0|0)-(ue(E|0,4,0,0)|0|0)|0;k=(ue(T|0,4,0,0)|0|0)-(ue(k|0,4,0,0)|0|0)|0;U=(ue(N|0,4,0,0)|0|0)-(ue(U|0,4,0,0)|0|0)|0;le(Q|0,(ue(Z|0,4,0,0)|0|0)-(ue(t|0,4,0,0)|0|0)|0,4,0);Z=e+44|0;le(Z|0,G|0,4,0);G=e+48|0;le(G|0,V|0,4,0);V=e+52|0;le(V|0,H|0,4,0);H=e+56|0;le(H|0,s|0,4,0);s=e+60|0;le(s|0,h|0,4,0);h=e+64|0;le(h|0,_|0,4,0);_=e+68|0;le(_|0,E|0,4,0);E=e+72|0;le(E|0,k|0,4,0);k=e+76|0;le(k|0,U|0,4,0);U=e+80|0;Fe(U,e,r);Fe(Q,Q,r+40|0);N=e+120|0;Fe(N,r+120|0,t+120|0);Fe(e,t+80|0,r+80|0);T=(ue(e|0,4,0,0)|0)<<1;F=(ue(ce|0,4,0,0)|0)<<1;A=(ue(se|0,4,0,0)|0)<<1;y=(ue(ie|0,4,0,0)|0)<<1;v=(ue(ae|0,4,0,0)|0)<<1;p=(ue(ne|0,4,0,0)|0)<<1;f=(ue(oe|0,4,0,0)|0)<<1;u=(ue(re|0,4,0,0)|0)<<1;a=(ue(te|0,4,0,0)|0)<<1;r=(ue(ee|0,4,0,0)|0)<<1;$=ue(U|0,4,0,0)|0|0;j=e+84|0;X=ue(j|0,4,0,0)|0|0;B=e+88|0;Y=ue(B|0,4,0,0)|0|0;z=e+92|0;t=ue(z|0,4,0,0)|0|0;C=e+96|0;i=ue(C|0,4,0,0)|0|0;I=e+100|0;c=ue(I|0,4,0,0)|0|0;L=e+104|0;g=ue(L|0,4,0,0)|0|0;x=e+108|0;w=ue(x|0,4,0,0)|0|0;D=e+112|0;M=ue(D|0,4,0,0)|0|0;P=e+116|0;R=ue(P|0,4,0,0)|0|0;J=ue(Q|0,4,0,0)|0|0;K=ue(Z|0,4,0,0)|0|0;W=ue(G|0,4,0,0)|0|0;q=ue(V|0,4,0,0)|0|0;n=ue(H|0,4,0,0)|0|0;l=ue(s|0,4,0,0)|0|0;m=ue(h|0,4,0,0)|0|0;b=ue(_|0,4,0,0)|0|0;S=ue(E|0,4,0,0)|0|0;O=ue(k|0,4,0,0)|0|0;le(e|0,$-J|0,4,0);le(ce|0,X-K|0,4,0);le(se|0,Y-W|0,4,0);le(ie|0,t-q|0,4,0);le(ae|0,i-n|0,4,0);le(ne|0,c-l|0,4,0);le(oe|0,g-m|0,4,0);le(re|0,w-b|0,4,0);le(te|0,M-S|0,4,0);le(ee|0,R-O|0,4,0);le(Q|0,J+$|0,4,0);le(Z|0,K+X|0,4,0);le(G|0,W+Y|0,4,0);le(V|0,q+t|0,4,0);le(H|0,n+i|0,4,0);le(s|0,l+c|0,4,0);le(h|0,m+g|0,4,0);le(_|0,b+w|0,4,0);le(E|0,S+M|0,4,0);le(k|0,O+R|0,4,0);R=ue(N|0,4,0,0)|0|0;O=e+124|0;k=ue(O|0,4,0,0)|0|0;M=e+128|0;S=ue(M|0,4,0,0)|0|0;E=e+132|0;w=ue(E|0,4,0,0)|0|0;b=e+136|0;_=ue(b|0,4,0,0)|0|0;g=e+140|0;m=ue(g|0,4,0,0)|0|0;h=e+144|0;c=ue(h|0,4,0,0)|0|0;l=e+148|0;s=ue(l|0,4,0,0)|0|0;i=e+152|0;n=ue(i|0,4,0,0)|0|0;e=e+156|0;t=ue(e|0,4,0,0)|0|0;le(U|0,R+T|0,4,0);le(j|0,k+F|0,4,0);le(B|0,S+A|0,4,0);le(z|0,w+y|0,4,0);le(C|0,_+v|0,4,0);le(I|0,m+p|0,4,0);le(L|0,c+f|0,4,0);le(x|0,s+u|0,4,0);le(D|0,n+a|0,4,0);le(P|0,t+r|0,4,0);le(N|0,T-R|0,4,0);le(O|0,F-k|0,4,0);le(M|0,A-S|0,4,0);le(E|0,y-w|0,4,0);le(b|0,v-_|0,4,0);le(g|0,p-m|0,4,0);le(h|0,f-c|0,4,0);le(l|0,u-s|0,4,0);le(i|0,a-n|0,4,0);le(e|0,r-t|0,4,0);d=o;return}function Fe(e,t,r){e=e|0;t=t|0;r=r|0;var o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0,de=0,fe=0,he=0,me=0,pe=0,ge=0,_e=0,ve=0,be=0,we=0,ye=0,Ee=0,Se=0,Ae=0,Me=0,ke=0,Fe=0,Oe=0,Re=0,Te=0,Ne=0,Pe=0,De=0,xe=0,Le=0,Ie=0,Ce=0,ze=0,Be=0,je=0,Ue=0,He=0,qe=0,Ve=0,Ye=0,We=0,Ge=0,Xe=0,Ke=0,Ze=0,$e=0,Je=0,Qe=0,et=0,tt=0,rt=0,ot=0,nt=0,at=0,it=0,st=0,dt=0,ft=0,mt=0,pt=0,gt=0,_t=0,vt=0,bt=0,wt=0,Et=0,St=0,At=0,Mt=0,kt=0,Ft=0,Ot=0,Rt=0,Tt=0,Nt=0,Pt=0,Dt=0,xt=0,Lt=0,It=0,Ct=0,zt=0,Bt=0,jt=0,Ut=0,Ht=0,qt=0,Vt=0,Yt=0,Wt=0,Gt=0,Xt=0,Kt=0,Zt=0,$t=0,Jt=0,Qt=0,er=0,tr=0,rr=0,or=0,nr=0,ar=0,ir=0,sr=0,ur=0,lr=0,cr=0,dr=0,fr=0,hr=0,mr=0,pr=0,gr=0,_r=0,vr=0,br=0,wr=0,yr=0,Er=0,Sr=0,Ar=0,Mr=0,kr=0,Fr=0,Or=0,Rr=0,Tr=0,Nr=0,Pr=0,Dr=0,xr=0,Lr=0,Ir=0,Cr=0,zr=0,Br=0,jr=0,Ur=0,Hr=0,qr=0,Vr=0,Yr=0,Wr=0,Gr=0,Xr=0,Kr=0,Zr=0,$r=0,Jr=0;o=d;f=ue(t|0,4,0,0)|0|0;b=ue(t+4|0,4,0,0)|0|0;l=ue(t+8|0,4,0,0)|0|0;$t=ue(t+12|0,4,0,0)|0|0;n=ue(t+16|0,4,0,0)|0|0;Oe=ue(t+20|0,4,0,0)|0|0;Fe=ue(t+24|0,4,0,0)|0|0;Dt=ue(t+28|0,4,0,0)|0|0;s=ue(t+32|0,4,0,0)|0|0;se=ue(t+36|0,4,0,0)|0|0;x=ue(r|0,4,0,0)|0|0;I=ue(r+4|0,4,0,0)|0|0;N=ue(r+8|0,4,0,0)|0|0;R=ue(r+12|0,4,0,0)|0|0;F=ue(r+16|0,4,0,0)|0|0;M=ue(r+20|0,4,0,0)|0|0;S=ue(r+24|0,4,0,0)|0|0;y=ue(r+28|0,4,0,0)|0|0;c=ue(r+32|0,4,0,0)|0|0;w=ue(r+36|0,4,0,0)|0|0;Xr=I*19|0;lr=N*19|0;Mt=R*19|0;Ie=F*19|0;_r=M*19|0;Ct=S*19|0;Xe=y*19|0;Jr=c*19|0;Zr=w*19|0;g=b<<1;a=$t<<1;B=Oe<<1;u=Dt<<1;t=se<<1;p=((f|0)<0)<<31>>31;L=((x|0)<0)<<31>>31;Wr=yt(x|0,L|0,f|0,p|0)|0;Yr=P;C=((I|0)<0)<<31>>31;Tr=yt(I|0,C|0,f|0,p|0)|0;Rr=P;D=((N|0)<0)<<31>>31;Ot=yt(N|0,D|0,f|0,p|0)|0;Ft=P;T=((R|0)<0)<<31>>31;Be=yt(R|0,T|0,f|0,p|0)|0;ze=P;O=((F|0)<0)<<31>>31;wr=yt(F|0,O|0,f|0,p|0)|0;br=P;k=((M|0)<0)<<31>>31;jt=yt(M|0,k|0,f|0,p|0)|0;Bt=P;A=((S|0)<0)<<31>>31;$e=yt(S|0,A|0,f|0,p|0)|0;Ze=P;E=((y|0)<0)<<31>>31;fe=yt(y|0,E|0,f|0,p|0)|0;de=P;Kr=((c|0)<0)<<31>>31;H=yt(c|0,Kr|0,f|0,p|0)|0;U=P;p=yt(w|0,((w|0)<0)<<31>>31|0,f|0,p|0)|0;f=P;w=((b|0)<0)<<31>>31;dr=yt(x|0,L|0,b|0,w|0)|0;fr=P;m=((g|0)<0)<<31>>31;Pt=yt(I|0,C|0,g|0,m|0)|0;Nt=P;Ue=yt(N|0,D|0,b|0,w|0)|0;je=P;Er=yt(R|0,T|0,g|0,m|0)|0;yr=P;Ht=yt(F|0,O|0,b|0,w|0)|0;Ut=P;Qe=yt(M|0,k|0,g|0,m|0)|0;Je=P;me=yt(S|0,A|0,b|0,w|0)|0;he=P;V=yt(y|0,E|0,g|0,m|0)|0;q=P;w=yt(c|0,Kr|0,b|0,w|0)|0;b=P;Kr=((Zr|0)<0)<<31>>31;m=yt(Zr|0,Kr|0,g|0,m|0)|0;g=P;c=((l|0)<0)<<31>>31;Tt=yt(x|0,L|0,l|0,c|0)|0;Rt=P;Ye=yt(I|0,C|0,l|0,c|0)|0;Ve=P;Ar=yt(N|0,D|0,l|0,c|0)|0;Sr=P;Vt=yt(R|0,T|0,l|0,c|0)|0;qt=P;tt=yt(F|0,O|0,l|0,c|0)|0;et=P;ge=yt(M|0,k|0,l|0,c|0)|0;pe=P;W=yt(S|0,A|0,l|0,c|0)|0;Y=P;E=yt(y|0,E|0,l|0,c|0)|0;y=P;$r=((Jr|0)<0)<<31>>31;Pr=yt(Jr|0,$r|0,l|0,c|0)|0;Nr=P;c=yt(Zr|0,Kr|0,l|0,c|0)|0;l=P;Jt=(($t|0)<0)<<31>>31;qe=yt(x|0,L|0,$t|0,Jt|0)|0;He=P;ie=((a|0)<0)<<31>>31;Or=yt(I|0,C|0,a|0,ie|0)|0;Fr=P;Wt=yt(N|0,D|0,$t|0,Jt|0)|0;Yt=P;ot=yt(R|0,T|0,a|0,ie|0)|0;rt=P;ve=yt(F|0,O|0,$t|0,Jt|0)|0;_e=P;X=yt(M|0,k|0,a|0,ie|0)|0;G=P;A=yt(S|0,A|0,$t|0,Jt|0)|0;S=P;Ke=((Xe|0)<0)<<31>>31;xr=yt(Xe|0,Ke|0,a|0,ie|0)|0;Dr=P;Jt=yt(Jr|0,$r|0,$t|0,Jt|0)|0;$t=P;ie=yt(Zr|0,Kr|0,a|0,ie|0)|0;a=P;j=((n|0)<0)<<31>>31;kr=yt(x|0,L|0,n|0,j|0)|0;Mr=P;Zt=yt(I|0,C|0,n|0,j|0)|0;Kt=P;at=yt(N|0,D|0,n|0,j|0)|0;nt=P;we=yt(R|0,T|0,n|0,j|0)|0;be=P;Z=yt(F|0,O|0,n|0,j|0)|0;K=P;k=yt(M|0,k|0,n|0,j|0)|0;M=P;zt=((Ct|0)<0)<<31>>31;Ir=yt(Ct|0,zt|0,n|0,j|0)|0;Lr=P;er=yt(Xe|0,Ke|0,n|0,j|0)|0;Qt=P;pt=yt(Jr|0,$r|0,n|0,j|0)|0;mt=P;j=yt(Zr|0,Kr|0,n|0,j|0)|0;n=P;Re=((Oe|0)<0)<<31>>31;Xt=yt(x|0,L|0,Oe|0,Re|0)|0;Gt=P;r=((B|0)<0)<<31>>31;ft=yt(I|0,C|0,B|0,r|0)|0;dt=P;Ee=yt(N|0,D|0,Oe|0,Re|0)|0;ye=P;J=yt(R|0,T|0,B|0,r|0)|0;$=P;O=yt(F|0,O|0,Oe|0,Re|0)|0;F=P;vr=((_r|0)<0)<<31>>31;zr=yt(_r|0,vr|0,B|0,r|0)|0;Cr=P;rr=yt(Ct|0,zt|0,Oe|0,Re|0)|0;tr=P;_t=yt(Xe|0,Ke|0,B|0,r|0)|0;gt=P;Re=yt(Jr|0,$r|0,Oe|0,Re|0)|0;Oe=P;r=yt(Zr|0,Kr|0,B|0,r|0)|0;B=P;i=((Fe|0)<0)<<31>>31;st=yt(x|0,L|0,Fe|0,i|0)|0;it=P;ke=yt(I|0,C|0,Fe|0,i|0)|0;Me=P;ee=yt(N|0,D|0,Fe|0,i|0)|0;Q=P;T=yt(R|0,T|0,Fe|0,i|0)|0;R=P;Ce=((Ie|0)<0)<<31>>31;jr=yt(Ie|0,Ce|0,Fe|0,i|0)|0;Br=P;nr=yt(_r|0,vr|0,Fe|0,i|0)|0;or=P;bt=yt(Ct|0,zt|0,Fe|0,i|0)|0;vt=P;Ne=yt(Xe|0,Ke|0,Fe|0,i|0)|0;Te=P;h=yt(Jr|0,$r|0,Fe|0,i|0)|0;v=P;i=yt(Zr|0,Kr|0,Fe|0,i|0)|0;Fe=P;xt=((Dt|0)<0)<<31>>31;Ae=yt(x|0,L|0,Dt|0,xt|0)|0;Se=P;ae=((u|0)<0)<<31>>31;ne=yt(I|0,C|0,u|0,ae|0)|0;oe=P;D=yt(N|0,D|0,Dt|0,xt|0)|0;N=P;kt=((Mt|0)<0)<<31>>31;Hr=yt(Mt|0,kt|0,u|0,ae|0)|0;Ur=P;ir=yt(Ie|0,Ce|0,Dt|0,xt|0)|0;ar=P;Et=yt(_r|0,vr|0,u|0,ae|0)|0;wt=P;De=yt(Ct|0,zt|0,Dt|0,xt|0)|0;Pe=P;mr=yt(Xe|0,Ke|0,u|0,ae|0)|0;hr=P;xt=yt(Jr|0,$r|0,Dt|0,xt|0)|0;Dt=P;ae=yt(Zr|0,Kr|0,u|0,ae|0)|0;u=P;z=((s|0)<0)<<31>>31;re=yt(x|0,L|0,s|0,z|0)|0;te=P;C=yt(I|0,C|0,s|0,z|0)|0;I=P;cr=((lr|0)<0)<<31>>31;Vr=yt(lr|0,cr|0,s|0,z|0)|0;qr=P;ur=yt(Mt|0,kt|0,s|0,z|0)|0;sr=P;At=yt(Ie|0,Ce|0,s|0,z|0)|0;St=P;Le=yt(_r|0,vr|0,s|0,z|0)|0;xe=P;gr=yt(Ct|0,zt|0,s|0,z|0)|0;pr=P;It=yt(Xe|0,Ke|0,s|0,z|0)|0;Lt=P;Ge=yt(Jr|0,$r|0,s|0,z|0)|0;We=P;z=yt(Zr|0,Kr|0,s|0,z|0)|0;s=P;ce=((se|0)<0)<<31>>31;L=yt(x|0,L|0,se|0,ce|0)|0;x=P;_=((t|0)<0)<<31>>31;Xr=yt(Xr|0,((Xr|0)<0)<<31>>31|0,t|0,_|0)|0;Gr=P;cr=yt(lr|0,cr|0,se|0,ce|0)|0;lr=P;kt=yt(Mt|0,kt|0,t|0,_|0)|0;Mt=P;Ce=yt(Ie|0,Ce|0,se|0,ce|0)|0;Ie=P;vr=yt(_r|0,vr|0,t|0,_|0)|0;_r=P;zt=yt(Ct|0,zt|0,se|0,ce|0)|0;Ct=P;Ke=yt(Xe|0,Ke|0,t|0,_|0)|0;Xe=P;ce=yt(Jr|0,$r|0,se|0,ce|0)|0;se=P;_=yt(Zr|0,Kr|0,t|0,_|0)|0;t=P;Yr=ct(Xr|0,Gr|0,Wr|0,Yr|0)|0;qr=ct(Yr|0,P|0,Vr|0,qr|0)|0;Ur=ct(qr|0,P|0,Hr|0,Ur|0)|0;Br=ct(Ur|0,P|0,jr|0,Br|0)|0;Cr=ct(Br|0,P|0,zr|0,Cr|0)|0;Lr=ct(Cr|0,P|0,Ir|0,Lr|0)|0;Dr=ct(Lr|0,P|0,xr|0,Dr|0)|0;Nr=ct(Dr|0,P|0,Pr|0,Nr|0)|0;g=ct(Nr|0,P|0,m|0,g|0)|0;m=P;fr=ct(Tr|0,Rr|0,dr|0,fr|0)|0;dr=P;Mr=ct(Or|0,Fr|0,kr|0,Mr|0)|0;Sr=ct(Mr|0,P|0,Ar|0,Sr|0)|0;yr=ct(Sr|0,P|0,Er|0,yr|0)|0;br=ct(yr|0,P|0,wr|0,br|0)|0;_r=ct(br|0,P|0,vr|0,_r|0)|0;pr=ct(_r|0,P|0,gr|0,pr|0)|0;hr=ct(pr|0,P|0,mr|0,hr|0)|0;v=ct(hr|0,P|0,h|0,v|0)|0;B=ct(v|0,P|0,r|0,B|0)|0;r=P;v=ct(g|0,m|0,33554432,0)|0;v=ut(v|0,P|0,26)|0;h=P;lr=ct(fr|0,dr|0,cr|0,lr|0)|0;sr=ct(lr|0,P|0,ur|0,sr|0)|0;ar=ct(sr|0,P|0,ir|0,ar|0)|0;or=ct(ar|0,P|0,nr|0,or|0)|0;tr=ct(or|0,P|0,rr|0,tr|0)|0;Qt=ct(tr|0,P|0,er|0,Qt|0)|0;$t=ct(Qt|0,P|0,Jt|0,$t|0)|0;l=ct($t|0,P|0,c|0,l|0)|0;l=ct(l|0,P|0,v|0,h|0)|0;c=P;h=ht(v|0,h|0,26)|0;h=lt(g|0,m|0,h|0,P|0)|0;m=P;g=ct(B|0,r|0,33554432,0)|0;g=ut(g|0,P|0,26)|0;v=P;Gt=ct(Zt|0,Kt|0,Xt|0,Gt|0)|0;Yt=ct(Gt|0,P|0,Wt|0,Yt|0)|0;qt=ct(Yt|0,P|0,Vt|0,qt|0)|0;Ut=ct(qt|0,P|0,Ht|0,Ut|0)|0;Bt=ct(Ut|0,P|0,jt|0,Bt|0)|0;Ct=ct(Bt|0,P|0,zt|0,Ct|0)|0;Lt=ct(Ct|0,P|0,It|0,Lt|0)|0;Dt=ct(Lt|0,P|0,xt|0,Dt|0)|0;Fe=ct(Dt|0,P|0,i|0,Fe|0)|0;Fe=ct(Fe|0,P|0,g|0,v|0)|0;i=P;v=ht(g|0,v|0,26)|0;v=lt(B|0,r|0,v|0,P|0)|0;r=P;B=ct(l|0,c|0,16777216,0)|0;B=ut(B|0,P|0,25)|0;g=P;Rt=ct(Pt|0,Nt|0,Tt|0,Rt|0)|0;Ft=ct(Rt|0,P|0,Ot|0,Ft|0)|0;Mt=ct(Ft|0,P|0,kt|0,Mt|0)|0;St=ct(Mt|0,P|0,At|0,St|0)|0;wt=ct(St|0,P|0,Et|0,wt|0)|0;vt=ct(wt|0,P|0,bt|0,vt|0)|0;gt=ct(vt|0,P|0,_t|0,gt|0)|0;mt=ct(gt|0,P|0,pt|0,mt|0)|0;a=ct(mt|0,P|0,ie|0,a|0)|0;a=ct(a|0,P|0,B|0,g|0)|0;ie=P;g=ht(B|0,g|0,25)|0;g=lt(l|0,c|0,g|0,P|0)|0;c=P;l=ct(Fe|0,i|0,16777216,0)|0;l=ut(l|0,P|0,25)|0;B=P;it=ct(ft|0,dt|0,st|0,it|0)|0;nt=ct(it|0,P|0,at|0,nt|0)|0;rt=ct(nt|0,P|0,ot|0,rt|0)|0;et=ct(rt|0,P|0,tt|0,et|0)|0;Je=ct(et|0,P|0,Qe|0,Je|0)|0;Ze=ct(Je|0,P|0,$e|0,Ze|0)|0;Xe=ct(Ze|0,P|0,Ke|0,Xe|0)|0;We=ct(Xe|0,P|0,Ge|0,We|0)|0;u=ct(We|0,P|0,ae|0,u|0)|0;u=ct(u|0,P|0,l|0,B|0)|0;ae=P;B=ht(l|0,B|0,25)|0;B=lt(Fe|0,i|0,B|0,P|0)|0;i=P;Fe=ct(a|0,ie|0,33554432,0)|0;Fe=ut(Fe|0,P|0,26)|0;l=P;He=ct(Ye|0,Ve|0,qe|0,He|0)|0;je=ct(He|0,P|0,Ue|0,je|0)|0;ze=ct(je|0,P|0,Be|0,ze|0)|0;Ie=ct(ze|0,P|0,Ce|0,Ie|0)|0;xe=ct(Ie|0,P|0,Le|0,xe|0)|0;Pe=ct(xe|0,P|0,De|0,Pe|0)|0;Te=ct(Pe|0,P|0,Ne|0,Te|0)|0;Oe=ct(Te|0,P|0,Re|0,Oe|0)|0;n=ct(Oe|0,P|0,j|0,n|0)|0;n=ct(n|0,P|0,Fe|0,l|0)|0;j=P;l=ht(Fe|0,l|0,26)|0;l=lt(a|0,ie|0,l|0,P|0)|0;ie=ct(u|0,ae|0,33554432,0)|0;ie=ut(ie|0,P|0,26)|0;a=P;Se=ct(ke|0,Me|0,Ae|0,Se|0)|0;ye=ct(Se|0,P|0,Ee|0,ye|0)|0;be=ct(ye|0,P|0,we|0,be|0)|0;_e=ct(be|0,P|0,ve|0,_e|0)|0;pe=ct(_e|0,P|0,ge|0,pe|0)|0;he=ct(pe|0,P|0,me|0,he|0)|0;de=ct(he|0,P|0,fe|0,de|0)|0;se=ct(de|0,P|0,ce|0,se|0)|0;s=ct(se|0,P|0,z|0,s|0)|0;s=ct(s|0,P|0,ie|0,a|0)|0;z=P;a=ht(ie|0,a|0,26)|0;a=lt(u|0,ae|0,a|0,P|0)|0;ae=ct(n|0,j|0,16777216,0)|0;ae=ut(ae|0,P|0,25)|0;u=P;r=ct(ae|0,u|0,v|0,r|0)|0;v=P;u=ht(ae|0,u|0,25)|0;u=lt(n|0,j|0,u|0,P|0)|0;j=ct(s|0,z|0,16777216,0)|0;j=ut(j|0,P|0,25)|0;n=P;te=ct(ne|0,oe|0,re|0,te|0)|0;Q=ct(te|0,P|0,ee|0,Q|0)|0;$=ct(Q|0,P|0,J|0,$|0)|0;K=ct($|0,P|0,Z|0,K|0)|0;G=ct(K|0,P|0,X|0,G|0)|0;Y=ct(G|0,P|0,W|0,Y|0)|0;q=ct(Y|0,P|0,V|0,q|0)|0;U=ct(q|0,P|0,H|0,U|0)|0;t=ct(U|0,P|0,_|0,t|0)|0;t=ct(t|0,P|0,j|0,n|0)|0;_=P;n=ht(j|0,n|0,25)|0;n=lt(s|0,z|0,n|0,P|0)|0;z=ct(r|0,v|0,33554432,0)|0;z=ut(z|0,P|0,26)|0;s=P;i=ct(B|0,i|0,z|0,s|0)|0;s=ht(z|0,s|0,26)|0;s=lt(r|0,v|0,s|0,P|0)|0;v=ct(t|0,_|0,33554432,0)|0;v=ut(v|0,P|0,26)|0;r=P;x=ct(C|0,I|0,L|0,x|0)|0;N=ct(x|0,P|0,D|0,N|0)|0;R=ct(N|0,P|0,T|0,R|0)|0;F=ct(R|0,P|0,O|0,F|0)|0;M=ct(F|0,P|0,k|0,M|0)|0;S=ct(M|0,P|0,A|0,S|0)|0;y=ct(S|0,P|0,E|0,y|0)|0;b=ct(y|0,P|0,w|0,b|0)|0;f=ct(b|0,P|0,p|0,f|0)|0;f=ct(f|0,P|0,v|0,r|0)|0;p=P;r=ht(v|0,r|0,26)|0;r=lt(t|0,_|0,r|0,P|0)|0;_=ct(f|0,p|0,16777216,0)|0;_=ut(_|0,P|0,25)|0;t=P;v=yt(_|0,t|0,19,0)|0;m=ct(v|0,P|0,h|0,m|0)|0;h=P;t=ht(_|0,t|0,25)|0;t=lt(f|0,p|0,t|0,P|0)|0;p=ct(m|0,h|0,33554432,0)|0;p=ut(p|0,P|0,26)|0;f=P;c=ct(g|0,c|0,p|0,f|0)|0;f=ht(p|0,f|0,26)|0;f=lt(m|0,h|0,f|0,P|0)|0;le(e|0,f|0,4,0);le(e+4|0,c|0,4,0);le(e+8|0,l|0,4,0);le(e+12|0,u|0,4,0);le(e+16|0,s|0,4,0);le(e+20|0,i|0,4,0);le(e+24|0,a|0,4,0);le(e+28|0,n|0,4,0);le(e+32|0,r|0,4,0);le(e+36|0,t|0,4,0);d=o;return}function Oe(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0;r=d;d=d+608|0;i=r+480|0;n=r+320|0;f=r+160|0;o=r;Re(e,t);g=ue(t+4|0,4,0,0)|0|0;p=ue(t+8|0,4,0,0)|0|0;m=ue(t+12|0,4,0,0)|0|0;h=ue(t+16|0,4,0,0)|0|0;c=ue(t+20|0,4,0,0)|0|0;a=ue(t+24|0,4,0,0)|0|0;u=ue(t+28|0,4,0,0)|0|0;l=ue(t+32|0,4,0,0)|0|0;s=ue(t+36|0,4,0,0)|0|0;le(i|0,ue(t|0,4,0,0)|0|0,4,0);le(i+4|0,g|0,4,0);le(i+8|0,p|0,4,0);le(i+12|0,m|0,4,0);le(i+16|0,h|0,4,0);le(i+20|0,c|0,4,0);le(i+24|0,a|0,4,0);le(i+28|0,u|0,4,0);le(i+32|0,l|0,4,0);le(i+36|0,s|0,4,0);s=ue(t+44|0,4,0,0)|0|0;l=ue(t+48|0,4,0,0)|0|0;u=ue(t+52|0,4,0,0)|0|0;a=ue(t+56|0,4,0,0)|0|0;c=ue(t+60|0,4,0,0)|0|0;h=ue(t+64|0,4,0,0)|0|0;m=ue(t+68|0,4,0,0)|0|0;p=ue(t+72|0,4,0,0)|0|0;g=ue(t+76|0,4,0,0)|0|0;le(i+40|0,ue(t+40|0,4,0,0)|0|0,4,0);le(i+44|0,s|0,4,0);le(i+48|0,l|0,4,0);le(i+52|0,u|0,4,0);le(i+56|0,a|0,4,0);le(i+60|0,c|0,4,0);le(i+64|0,h|0,4,0);le(i+68|0,m|0,4,0);le(i+72|0,p|0,4,0);le(i+76|0,g|0,4,0);g=ue(t+84|0,4,0,0)|0|0;p=ue(t+88|0,4,0,0)|0|0;m=ue(t+92|0,4,0,0)|0|0;h=ue(t+96|0,4,0,0)|0|0;c=ue(t+100|0,4,0,0)|0|0;a=ue(t+104|0,4,0,0)|0|0;u=ue(t+108|0,4,0,0)|0|0;l=ue(t+112|0,4,0,0)|0|0;s=ue(t+116|0,4,0,0)|0|0;le(i+80|0,ue(t+80|0,4,0,0)|0|0,4,0);le(i+84|0,g|0,4,0);le(i+88|0,p|0,4,0);le(i+92|0,m|0,4,0);le(i+96|0,h|0,4,0);le(i+100|0,c|0,4,0);le(i+104|0,a|0,4,0);le(i+108|0,u|0,4,0);le(i+112|0,l|0,4,0);le(i+116|0,s|0,4,0);De(n,i);i=n+120|0;Fe(f,n,i);t=n+40|0;s=n+80|0;Fe(f+40|0,t,s);Fe(f+80|0,s,i);Fe(f+120|0,n,t);ke(n,f,e);Fe(o,n,i);l=o+40|0;Fe(l,t,s);u=o+80|0;Fe(u,s,i);a=o+120|0;Fe(a,n,t);c=e+160|0;Re(c,o);ke(n,f,c);Fe(o,n,i);Fe(l,t,s);Fe(u,s,i);Fe(a,n,t);c=e+320|0;Re(c,o);ke(n,f,c);Fe(o,n,i);Fe(l,t,s);Fe(u,s,i);Fe(a,n,t);c=e+480|0;Re(c,o);ke(n,f,c);Fe(o,n,i);Fe(l,t,s);Fe(u,s,i);Fe(a,n,t);c=e+640|0;Re(c,o);ke(n,f,c);Fe(o,n,i);Fe(l,t,s);Fe(u,s,i);Fe(a,n,t);c=e+800|0;Re(c,o);ke(n,f,c);Fe(o,n,i);Fe(l,t,s);Fe(u,s,i);Fe(a,n,t);c=e+960|0;Re(c,o);ke(n,f,c);Fe(o,n,i);Fe(l,t,s);Fe(u,s,i);Fe(a,n,t);Re(e+1120|0,o);d=r;return}function Re(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0;r=d;h=t+40|0;E=t+44|0;y=t+48|0;w=t+52|0;b=t+56|0;v=t+60|0;_=t+64|0;g=t+68|0;p=t+72|0;m=t+76|0;o=t+4|0;n=t+8|0;a=t+12|0;i=t+16|0;s=t+20|0;u=t+24|0;l=t+28|0;c=t+32|0;f=t+36|0;N=(ue(o|0,4,0,0)|0|0)+(ue(E|0,4,0,0)|0|0)|0;T=(ue(n|0,4,0,0)|0|0)+(ue(y|0,4,0,0)|0|0)|0;R=(ue(a|0,4,0,0)|0|0)+(ue(w|0,4,0,0)|0|0)|0;O=(ue(i|0,4,0,0)|0|0)+(ue(b|0,4,0,0)|0|0)|0;F=(ue(s|0,4,0,0)|0|0)+(ue(v|0,4,0,0)|0|0)|0;k=(ue(u|0,4,0,0)|0|0)+(ue(_|0,4,0,0)|0|0)|0;M=(ue(l|0,4,0,0)|0|0)+(ue(g|0,4,0,0)|0|0)|0;A=(ue(c|0,4,0,0)|0|0)+(ue(p|0,4,0,0)|0|0)|0;S=(ue(f|0,4,0,0)|0|0)+(ue(m|0,4,0,0)|0|0)|0;le(e|0,(ue(t|0,4,0,0)|0|0)+(ue(h|0,4,0,0)|0|0)|0,4,0);le(e+4|0,N|0,4,0);le(e+8|0,T|0,4,0);le(e+12|0,R|0,4,0);le(e+16|0,O|0,4,0);le(e+20|0,F|0,4,0);le(e+24|0,k|0,4,0);le(e+28|0,M|0,4,0);le(e+32|0,A|0,4,0);le(e+36|0,S|0,4,0);o=(ue(E|0,4,0,0)|0|0)-(ue(o|0,4,0,0)|0|0)|0;n=(ue(y|0,4,0,0)|0|0)-(ue(n|0,4,0,0)|0|0)|0;a=(ue(w|0,4,0,0)|0|0)-(ue(a|0,4,0,0)|0|0)|0;i=(ue(b|0,4,0,0)|0|0)-(ue(i|0,4,0,0)|0|0)|0;s=(ue(v|0,4,0,0)|0|0)-(ue(s|0,4,0,0)|0|0)|0;u=(ue(_|0,4,0,0)|0|0)-(ue(u|0,4,0,0)|0|0)|0;l=(ue(g|0,4,0,0)|0|0)-(ue(l|0,4,0,0)|0|0)|0;c=(ue(p|0,4,0,0)|0|0)-(ue(c|0,4,0,0)|0|0)|0;f=(ue(m|0,4,0,0)|0|0)-(ue(f|0,4,0,0)|0|0)|0;le(e+40|0,(ue(h|0,4,0,0)|0|0)-(ue(t|0,4,0,0)|0|0)|0,4,0);le(e+44|0,o|0,4,0);le(e+48|0,n|0,4,0);le(e+52|0,a|0,4,0);le(e+56|0,i|0,4,0);le(e+60|0,s|0,4,0);le(e+64|0,u|0,4,0);le(e+68|0,l|0,4,0);le(e+72|0,c|0,4,0);le(e+76|0,f|0,4,0);f=ue(t+84|0,4,0,0)|0|0;c=ue(t+88|0,4,0,0)|0|0;l=ue(t+92|0,4,0,0)|0|0;u=ue(t+96|0,4,0,0)|0|0;s=ue(t+100|0,4,0,0)|0|0;i=ue(t+104|0,4,0,0)|0|0;a=ue(t+108|0,4,0,0)|0|0;n=ue(t+112|0,4,0,0)|0|0;o=ue(t+116|0,4,0,0)|0|0;le(e+80|0,ue(t+80|0,4,0,0)|0|0,4,0);le(e+84|0,f|0,4,0);le(e+88|0,c|0,4,0);le(e+92|0,l|0,4,0);le(e+96|0,u|0,4,0);le(e+100|0,s|0,4,0);le(e+104|0,i|0,4,0);le(e+108|0,a|0,4,0);le(e+112|0,n|0,4,0);le(e+116|0,o|0,4,0);Fe(e+120|0,t+120|0,320);d=r;return}function Te(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0;r=d;n=t+120|0;Fe(e,t,n);o=t+40|0;a=t+80|0;Fe(e+40|0,o,a);Fe(e+80|0,a,n);Fe(e+120|0,t,o);d=r;return}function Ne(e,t,r,o){e=e|0;t=t|0;r=r|0;o=o|0;var n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,P=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0,de=0,fe=0,he=0,me=0,pe=0,ge=0,_e=0,ve=0,be=0,we=0,ye=0,Ee=0,Se=0,Ae=0,Me=0,Re=0,Te=0,Ne=0,Ie=0,Ce=0,ze=0,Be=0,je=0,Ue=0,He=0,qe=0,Ve=0,Ye=0,We=0,Ge=0,Xe=0,Ke=0,Ze=0,$e=0,Je=0,Qe=0,et=0,tt=0,rt=0,ot=0,nt=0,at=0,it=0,st=0,ut=0,lt=0,ct=0;i=d;d=d+2112|0;n=i+1856|0;a=i+1600|0;l=i+320|0;s=i+160|0;u=i;Pe(n,t);Pe(a,o);Oe(l,r);c=e+0|0;t=c+40|0;do{le(c|0,0|0,4,0);c=c+4|0}while((c|0)<(t|0));r=e+40|0;le(r|0,1|0,4,0);c=e+44|0;t=c+36|0;do{le(c|0,0|0,4,0);c=c+4|0}while((c|0)<(t|0));o=e+80|0;le(o|0,1|0,4,0);c=e+84|0;t=c+36|0;do{le(c|0,0|0,4,0);c=c+4|0}while((c|0)<(t|0));Te=255;while(1){if((ue(n+Te>>0|0,1,0,0)|0|0)!=0){break}t=Te+-1|0;if((ue(a+Te>>0|0,1,0,0)|0|0)!=0){break}if((Te|0)>0){Te=t}else{Te=t;break}}if(!((Te|0)>-1)){d=i;return}b=s+120|0;E=u+40|0;w=s+40|0;y=s+80|0;S=u+80|0;A=u+120|0;M=u+44|0;k=u+48|0;F=u+52|0;O=u+56|0;R=u+60|0;T=u+64|0;N=u+68|0;P=u+72|0;D=u+76|0;x=u+4|0;L=u+8|0;I=u+12|0;C=u+16|0;z=u+20|0;B=u+24|0;j=u+28|0;U=u+32|0;H=u+36|0;q=s+4|0;V=s+8|0;h=s+12|0;W=s+16|0;G=s+20|0;X=s+24|0;K=s+28|0;Z=s+32|0;$=s+36|0;J=s+44|0;Q=s+48|0;ee=s+52|0;te=s+56|0;re=s+60|0;oe=s+64|0;ne=s+68|0;ae=s+72|0;ie=s+76|0;se=u+84|0;ce=u+88|0;de=u+92|0;fe=u+96|0;he=u+100|0;me=u+104|0;pe=u+108|0;ge=u+112|0;_e=u+116|0;ve=s+84|0;be=s+88|0;we=s+92|0;ye=s+96|0;Ee=s+100|0;Se=s+104|0;Ae=s+108|0;Me=s+112|0;Re=s+116|0;Y=s+124|0;v=s+128|0;_=s+132|0;g=s+136|0;p=s+140|0;f=s+144|0;c=s+148|0;t=s+152|0;m=s+156|0;while(1){De(s,e);Ne=ue(n+Te>>0|0,1,0,0)|0|0;if(!(Ne<<24>>24>0)){if(Ne<<24>>24<0){Fe(u,s,b);Fe(E,w,y);Fe(S,y,b);Fe(A,s,w);xe(s,u,l+(((Ne<<24>>24|0)/-2|0)*160|0)|0)}}else{Fe(u,s,b);Fe(E,w,y);Fe(S,y,b);Fe(A,s,w);ke(s,u,l+(((Ne<<24>>24|0)/2|0)*160|0)|0)}Ne=ue(a+Te>>0|0,1,0,0)|0|0;if(!(Ne<<24>>24>0)){if(Ne<<24>>24<0){Fe(u,s,b);Fe(E,w,y);Fe(S,y,b);Fe(A,s,w);Qe=(Ne<<24>>24|0)/-2|0;ct=ue(E|0,4,0,0)|0|0;Ze=ue(M|0,4,0,0)|0|0;He=ue(k|0,4,0,0)|0|0;tt=ue(F|0,4,0,0)|0|0;at=ue(O|0,4,0,0)|0|0;lt=ue(R|0,4,0,0)|0|0;Ce=ue(T|0,4,0,0)|0|0;Ue=ue(N|0,4,0,0)|0|0;Ye=ue(P|0,4,0,0)|0|0;Ke=ue(D|0,4,0,0)|0|0;et=ue(u|0,4,0,0)|0|0;We=ue(x|0,4,0,0)|0|0;ze=ue(L|0,4,0,0)|0|0;ot=ue(I|0,4,0,0)|0|0;st=ue(C|0,4,0,0)|0|0;Ne=ue(z|0,4,0,0)|0|0;Be=ue(B|0,4,0,0)|0|0;qe=ue(j|0,4,0,0)|0|0;Ge=ue(U|0,4,0,0)|0|0;$e=ue(H|0,4,0,0)|0|0;le(s|0,et+ct|0,4,0);le(q|0,We+Ze|0,4,0);le(V|0,ze+He|0,4,0);le(h|0,ot+tt|0,4,0);le(W|0,st+at|0,4,0);le(G|0,Ne+lt|0,4,0);le(X|0,Be+Ce|0,4,0);le(K|0,qe+Ue|0,4,0);le(Z|0,Ge+Ye|0,4,0);le($|0,$e+Ke|0,4,0);le(w|0,ct-et|0,4,0);le(J|0,Ze-We|0,4,0);le(Q|0,He-ze|0,4,0);le(ee|0,tt-ot|0,4,0);le(te|0,at-st|0,4,0);le(re|0,lt-Ne|0,4,0);le(oe|0,Ce-Be|0,4,0);le(ne|0,Ue-qe|0,4,0);le(ae|0,Ye-Ge|0,4,0);le(ie|0,Ke-$e|0,4,0);Fe(y,s,31120+(Qe*120|0)|0);Fe(w,w,31080+(Qe*120|0)|0);Fe(b,31160+(Qe*120|0)|0,A);Qe=(ue(S|0,4,0,0)|0)<<1;$e=(ue(se|0,4,0,0)|0)<<1;Ke=(ue(ce|0,4,0,0)|0)<<1;Ge=(ue(de|0,4,0,0)|0)<<1;Ye=(ue(fe|0,4,0,0)|0)<<1;qe=(ue(he|0,4,0,0)|0)<<1;Ue=(ue(me|0,4,0,0)|0)<<1;Be=(ue(pe|0,4,0,0)|0)<<1;Ce=(ue(ge|0,4,0,0)|0)<<1;Ne=(ue(_e|0,4,0,0)|0)<<1;lt=ue(y|0,4,0,0)|0|0;st=ue(ve|0,4,0,0)|0|0;at=ue(be|0,4,0,0)|0|0;ot=ue(we|0,4,0,0)|0|0;tt=ue(ye|0,4,0,0)|0|0;ze=ue(Ee|0,4,0,0)|0|0;He=ue(Se|0,4,0,0)|0|0;We=ue(Ae|0,4,0,0)|0|0;Ze=ue(Me|0,4,0,0)|0|0;et=ue(Re|0,4,0,0)|0|0;ct=ue(w|0,4,0,0)|0|0;ut=ue(J|0,4,0,0)|0|0;it=ue(Q|0,4,0,0)|0|0;nt=ue(ee|0,4,0,0)|0|0;rt=ue(te|0,4,0,0)|0|0;Ie=ue(re|0,4,0,0)|0|0;je=ue(oe|0,4,0,0)|0|0;Ve=ue(ne|0,4,0,0)|0|0;Xe=ue(ae|0,4,0,0)|0|0;Je=ue(ie|0,4,0,0)|0|0;le(s|0,lt-ct|0,4,0);le(q|0,st-ut|0,4,0);le(V|0,at-it|0,4,0);le(h|0,ot-nt|0,4,0);le(W|0,tt-rt|0,4,0);le(G|0,ze-Ie|0,4,0);le(X|0,He-je|0,4,0);le(K|0,We-Ve|0,4,0);le(Z|0,Ze-Xe|0,4,0);le($|0,et-Je|0,4,0);le(w|0,ct+lt|0,4,0);le(J|0,ut+st|0,4,0);le(Q|0,it+at|0,4,0);le(ee|0,nt+ot|0,4,0);le(te|0,rt+tt|0,4,0);le(re|0,Ie+ze|0,4,0);le(oe|0,je+He|0,4,0);le(ne|0,Ve+We|0,4,0);le(ae|0,Xe+Ze|0,4,0);le(ie|0,Je+et|0,4,0);et=ue(b|0,4,0,0)|0|0;Je=ue(Y|0,4,0,0)|0|0;Ze=ue(v|0,4,0,0)|0|0;Xe=ue(_|0,4,0,0)|0|0;We=ue(g|0,4,0,0)|0|0;Ve=ue(p|0,4,0,0)|0|0;He=ue(f|0,4,0,0)|0|0;je=ue(c|0,4,0,0)|0|0;ze=ue(t|0,4,0,0)|0|0;Ie=ue(m|0,4,0,0)|0|0;le(y|0,Qe-et|0,4,0);le(ve|0,$e-Je|0,4,0);le(be|0,Ke-Ze|0,4,0);le(we|0,Ge-Xe|0,4,0);le(ye|0,Ye-We|0,4,0);le(Ee|0,qe-Ve|0,4,0);le(Se|0,Ue-He|0,4,0);le(Ae|0,Be-je|0,4,0);le(Me|0,Ce-ze|0,4,0);le(Re|0,Ne-Ie|0,4,0);le(b|0,et+Qe|0,4,0);le(Y|0,Je+$e|0,4,0);le(v|0,Ze+Ke|0,4,0);le(_|0,Xe+Ge|0,4,0);le(g|0,We+Ye|0,4,0);le(p|0,Ve+qe|0,4,0);le(f|0,He+Ue|0,4,0);le(c|0,je+Be|0,4,0);le(t|0,ze+Ce|0,4,0);le(m|0,Ie+Ne|0,4,0)}}else{Fe(u,s,b);Fe(E,w,y);Fe(S,y,b);Fe(A,s,w);Le(s,u,31080+(((Ne<<24>>24|0)/2|0)*120|0)|0)}Fe(e,s,b);Fe(r,w,y);Fe(o,y,b);if((Te|0)>0){Te=Te+-1|0}else{break}}d=i;return}function Pe(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0;r=d;o=0;do{le(e+o>>0|0,(ue(t+(o>>3)>>0|0,1,0,1)|0|0)>>>(o&7)&1|0,1,0);o=o+1|0}while((o|0)!=256);t=0;do{o=e+t|0;e:do{if((ue(o>>0|0,1,0,0)|0|0)!=0){n=1;do{a=n+t|0;if((a|0)>=256){break e}s=e+a|0;u=ue(s>>0|0,1,0,0)|0|0;t:do{if(!(u<<24>>24==0)){i=ue(o>>0|0,1,0,0)|0|0;l=u<<24>>24<<n;u=i+l|0;if((u|0)<16){le(o>>0|0,u|0,1,0);le(s>>0|0,0|0,1,0);break}i=i-l|0;if(!((i|0)>-16)){break e}le(o>>0|0,i|0,1,0);while(1){i=e+a|0;if((ue(i>>0|0,1,0,0)|0|0)==0){break}le(i>>0|0,0|0,1,0);a=a+1|0;if((a|0)>=256){break t}}le(i>>0|0,1|0,1,0)}}while(0);n=n+1|0}while((n|0)<7)}}while(0);t=t+1|0}while((t|0)!=256);d=r;return}function De(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,P=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0,de=0;r=d;d=d+48|0;D=r;ze(e,t);q=e+80|0;ce=t+40|0;ze(q,ce);y=e+120|0;je(y,t+80|0);de=e+40|0;se=(ue(t+44|0,4,0,0)|0|0)+(ue(t+4|0,4,0,0)|0|0)|0;ie=(ue(t+48|0,4,0,0)|0|0)+(ue(t+8|0,4,0,0)|0|0)|0;ae=(ue(t+52|0,4,0,0)|0|0)+(ue(t+12|0,4,0,0)|0|0)|0;ne=(ue(t+56|0,4,0,0)|0|0)+(ue(t+16|0,4,0,0)|0|0)|0;oe=(ue(t+60|0,4,0,0)|0|0)+(ue(t+20|0,4,0,0)|0|0)|0;re=(ue(t+64|0,4,0,0)|0|0)+(ue(t+24|0,4,0,0)|0|0)|0;te=(ue(t+68|0,4,0,0)|0|0)+(ue(t+28|0,4,0,0)|0|0)|0;ee=(ue(t+72|0,4,0,0)|0|0)+(ue(t+32|0,4,0,0)|0|0)|0;Q=(ue(t+76|0,4,0,0)|0|0)+(ue(t+36|0,4,0,0)|0|0)|0;le(de|0,(ue(ce|0,4,0,0)|0|0)+(ue(t|0,4,0,0)|0|0)|0,4,0);ce=e+44|0;le(ce|0,se|0,4,0);se=e+48|0;le(se|0,ie|0,4,0);ie=e+52|0;le(ie|0,ae|0,4,0);ae=e+56|0;le(ae|0,ne|0,4,0);ne=e+60|0;le(ne|0,oe|0,4,0);oe=e+64|0;le(oe|0,re|0,4,0);re=e+68|0;le(re|0,te|0,4,0);te=e+72|0;le(te|0,ee|0,4,0);ee=e+76|0;le(ee|0,Q|0,4,0);ze(D,de);Q=ue(q|0,4,0,0)|0|0;H=e+84|0;J=ue(H|0,4,0,0)|0|0;U=e+88|0;$=ue(U|0,4,0,0)|0|0;j=e+92|0;Z=ue(j|0,4,0,0)|0|0;B=e+96|0;K=ue(B|0,4,0,0)|0|0;z=e+100|0;X=ue(z|0,4,0,0)|0|0;C=e+104|0;G=ue(C|0,4,0,0)|0|0;I=e+108|0;W=ue(I|0,4,0,0)|0|0;L=e+112|0;Y=ue(L|0,4,0,0)|0|0;x=e+116|0;V=ue(x|0,4,0,0)|0|0;w=ue(e|0,4,0,0)|0|0;N=e+4|0;v=ue(N|0,4,0,0)|0|0;R=e+8|0;g=ue(R|0,4,0,0)|0|0;F=e+12|0;m=ue(F|0,4,0,0)|0|0;M=e+16|0;f=ue(M|0,4,0,0)|0|0;S=e+20|0;l=ue(S|0,4,0,0)|0|0;n=e+24|0;s=ue(n|0,4,0,0)|0|0;u=e+28|0;a=ue(u|0,4,0,0)|0|0;h=e+32|0;o=ue(h|0,4,0,0)|0|0;_=e+36|0;t=ue(_|0,4,0,0)|0|0;P=w+Q|0;T=v+J|0;O=g+$|0;k=m+Z|0;A=f+K|0;E=l+X|0;i=s+G|0;c=a+W|0;p=o+Y|0;b=t+V|0;le(de|0,P|0,4,0);le(ce|0,T|0,4,0);le(se|0,O|0,4,0);le(ie|0,k|0,4,0);le(ae|0,A|0,4,0);le(ne|0,E|0,4,0);le(oe|0,i|0,4,0);le(re|0,c|0,4,0);le(te|0,p|0,4,0);le(ee|0,b|0,4,0);w=Q-w|0;v=J-v|0;g=$-g|0;m=Z-m|0;f=K-f|0;l=X-l|0;s=G-s|0;a=W-a|0;o=Y-o|0;t=V-t|0;le(q|0,w|0,4,0);le(H|0,v|0,4,0);le(U|0,g|0,4,0);le(j|0,m|0,4,0);le(B|0,f|0,4,0);le(z|0,l|0,4,0);le(C|0,s|0,4,0);le(I|0,a|0,4,0);le(L|0,o|0,4,0);le(x|0,t|0,4,0);T=(ue(D+4|0,4,0,0)|0|0)-T|0;O=(ue(D+8|0,4,0,0)|0|0)-O|0;k=(ue(D+12|0,4,0,0)|0|0)-k|0;A=(ue(D+16|0,4,0,0)|0|0)-A|0;E=(ue(D+20|0,4,0,0)|0|0)-E|0;i=(ue(D+24|0,4,0,0)|0|0)-i|0;c=(ue(D+28|0,4,0,0)|0|0)-c|0;p=(ue(D+32|0,4,0,0)|0|0)-p|0;b=(ue(D+36|0,4,0,0)|0|0)-b|0;le(e|0,(ue(D|0,4,0,0)|0|0)-P|0,4,0);le(N|0,T|0,4,0);le(R|0,O|0,4,0);le(F|0,k|0,4,0);le(M|0,A|0,4,0);le(S|0,E|0,4,0);le(n|0,i|0,4,0);le(u|0,c|0,4,0);le(h|0,p|0,4,0);le(_|0,b|0,4,0);b=e+124|0;_=e+128|0;p=e+132|0;h=e+136|0;c=e+140|0;u=e+144|0;i=e+148|0;n=e+152|0;e=e+156|0;v=(ue(b|0,4,0,0)|0|0)-v|0;g=(ue(_|0,4,0,0)|0|0)-g|0;m=(ue(p|0,4,0,0)|0|0)-m|0;f=(ue(h|0,4,0,0)|0|0)-f|0;l=(ue(c|0,4,0,0)|0|0)-l|0;s=(ue(u|0,4,0,0)|0|0)-s|0;a=(ue(i|0,4,0,0)|0|0)-a|0;o=(ue(n|0,4,0,0)|0|0)-o|0;t=(ue(e|0,4,0,0)|0|0)-t|0;le(y|0,(ue(y|0,4,0,0)|0|0)-w|0,4,0);le(b|0,v|0,4,0);le(_|0,g|0,4,0);le(p|0,m|0,4,0);le(h|0,f|0,4,0);le(c|0,l|0,4,0);le(u|0,s|0,4,0);le(i|0,a|0,4,0);le(n|0,o|0,4,0);le(e|0,t|0,4,0);d=r;return}function xe(e,t,r){e=e|0;t=t|0;r=r|0;var o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,P=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0;o=d;Z=t+40|0;s=t+44|0;c=t+48|0;m=t+52|0;_=t+56|0;w=t+60|0;S=t+64|0;k=t+68|0;R=t+72|0;N=t+76|0;G=t+4|0;V=t+8|0;H=t+12|0;u=t+16|0;h=t+20|0;v=t+24|0;E=t+28|0;F=t+32|0;U=t+36|0;se=(ue(G|0,4,0,0)|0|0)+(ue(s|0,4,0,0)|0|0)|0;ie=(ue(V|0,4,0,0)|0|0)+(ue(c|0,4,0,0)|0|0)|0;ae=(ue(H|0,4,0,0)|0|0)+(ue(m|0,4,0,0)|0|0)|0;ne=(ue(u|0,4,0,0)|0|0)+(ue(_|0,4,0,0)|0|0)|0;oe=(ue(h|0,4,0,0)|0|0)+(ue(w|0,4,0,0)|0|0)|0;re=(ue(v|0,4,0,0)|0|0)+(ue(S|0,4,0,0)|0|0)|0;te=(ue(E|0,4,0,0)|0|0)+(ue(k|0,4,0,0)|0|0)|0;ee=(ue(F|0,4,0,0)|0|0)+(ue(R|0,4,0,0)|0|0)|0;Q=(ue(U|0,4,0,0)|0|0)+(ue(N|0,4,0,0)|0|0)|0;le(e|0,(ue(t|0,4,0,0)|0|0)+(ue(Z|0,4,0,0)|0|0)|0,4,0);ce=e+4|0;le(ce|0,se|0,4,0);se=e+8|0;le(se|0,ie|0,4,0);ie=e+12|0;le(ie|0,ae|0,4,0);ae=e+16|0;le(ae|0,ne|0,4,0);ne=e+20|0;le(ne|0,oe|0,4,0);oe=e+24|0;le(oe|0,re|0,4,0);re=e+28|0;le(re|0,te|0,4,0);te=e+32|0;le(te|0,ee|0,4,0);ee=e+36|0;le(ee|0,Q|0,4,0);Q=e+40|0;G=(ue(s|0,4,0,0)|0|0)-(ue(G|0,4,0,0)|0|0)|0;V=(ue(c|0,4,0,0)|0|0)-(ue(V|0,4,0,0)|0|0)|0;H=(ue(m|0,4,0,0)|0|0)-(ue(H|0,4,0,0)|0|0)|0;u=(ue(_|0,4,0,0)|0|0)-(ue(u|0,4,0,0)|0|0)|0;h=(ue(w|0,4,0,0)|0|0)-(ue(h|0,4,0,0)|0|0)|0;v=(ue(S|0,4,0,0)|0|0)-(ue(v|0,4,0,0)|0|0)|0;E=(ue(k|0,4,0,0)|0|0)-(ue(E|0,4,0,0)|0|0)|0;F=(ue(R|0,4,0,0)|0|0)-(ue(F|0,4,0,0)|0|0)|0;U=(ue(N|0,4,0,0)|0|0)-(ue(U|0,4,0,0)|0|0)|0;le(Q|0,(ue(Z|0,4,0,0)|0|0)-(ue(t|0,4,0,0)|0|0)|0,4,0);Z=e+44|0;le(Z|0,G|0,4,0);G=e+48|0;le(G|0,V|0,4,0);V=e+52|0;le(V|0,H|0,4,0);H=e+56|0;le(H|0,u|0,4,0);u=e+60|0;le(u|0,h|0,4,0);h=e+64|0;le(h|0,v|0,4,0);v=e+68|0;le(v|0,E|0,4,0);E=e+72|0;le(E|0,F|0,4,0);F=e+76|0;le(F|0,U|0,4,0);U=e+80|0;Fe(U,e,r+40|0);Fe(Q,Q,r);N=e+120|0;Fe(N,r+120|0,t+120|0);Fe(e,t+80|0,r+80|0);R=(ue(e|0,4,0,0)|0)<<1;k=(ue(ce|0,4,0,0)|0)<<1;S=(ue(se|0,4,0,0)|0)<<1;w=(ue(ie|0,4,0,0)|0)<<1;_=(ue(ae|0,4,0,0)|0)<<1;m=(ue(ne|0,4,0,0)|0)<<1;c=(ue(oe|0,4,0,0)|0)<<1;s=(ue(re|0,4,0,0)|0)<<1;n=(ue(te|0,4,0,0)|0)<<1;t=(ue(ee|0,4,0,0)|0)<<1;$=ue(U|0,4,0,0)|0|0;j=e+84|0;X=ue(j|0,4,0,0)|0|0;B=e+88|0;Y=ue(B|0,4,0,0)|0|0;z=e+92|0;r=ue(z|0,4,0,0)|0|0;C=e+96|0;i=ue(C|0,4,0,0)|0|0;I=e+100|0;f=ue(I|0,4,0,0)|0|0;L=e+104|0;g=ue(L|0,4,0,0)|0|0;x=e+108|0;y=ue(x|0,4,0,0)|0|0;D=e+112|0;M=ue(D|0,4,0,0)|0|0;P=e+116|0;T=ue(P|0,4,0,0)|0|0;J=ue(Q|0,4,0,0)|0|0;K=ue(Z|0,4,0,0)|0|0;W=ue(G|0,4,0,0)|0|0;q=ue(V|0,4,0,0)|0|0;a=ue(H|0,4,0,0)|0|0;l=ue(u|0,4,0,0)|0|0;p=ue(h|0,4,0,0)|0|0;b=ue(v|0,4,0,0)|0|0;A=ue(E|0,4,0,0)|0|0;O=ue(F|0,4,0,0)|0|0;le(e|0,$-J|0,4,0);le(ce|0,X-K|0,4,0);le(se|0,Y-W|0,4,0);le(ie|0,r-q|0,4,0);le(ae|0,i-a|0,4,0);le(ne|0,f-l|0,4,0);le(oe|0,g-p|0,4,0);le(re|0,y-b|0,4,0);le(te|0,M-A|0,4,0);le(ee|0,T-O|0,4,0);le(Q|0,J+$|0,4,0);le(Z|0,K+X|0,4,0);le(G|0,W+Y|0,4,0);le(V|0,q+r|0,4,0);le(H|0,a+i|0,4,0);le(u|0,l+f|0,4,0);le(h|0,p+g|0,4,0);le(v|0,b+y|0,4,0);le(E|0,A+M|0,4,0);le(F|0,O+T|0,4,0);T=ue(N|0,4,0,0)|0|0;O=e+124|0;F=ue(O|0,4,0,0)|0|0;M=e+128|0;A=ue(M|0,4,0,0)|0|0;E=e+132|0;y=ue(E|0,4,0,0)|0|0;b=e+136|0;v=ue(b|0,4,0,0)|0|0;g=e+140|0;p=ue(g|0,4,0,0)|0|0;h=e+144|0;f=ue(h|0,4,0,0)|0|0;l=e+148|0;u=ue(l|0,4,0,0)|0|0;i=e+152|0;a=ue(i|0,4,0,0)|0|0;e=e+156|0;r=ue(e|0,4,0,0)|0|0;le(U|0,R-T|0,4,0);le(j|0,k-F|0,4,0);le(B|0,S-A|0,4,0);le(z|0,w-y|0,4,0);le(C|0,_-v|0,4,0);le(I|0,m-p|0,4,0);le(L|0,c-f|0,4,0);le(x|0,s-u|0,4,0);le(D|0,n-a|0,4,0);le(P|0,t-r|0,4,0);le(N|0,T+R|0,4,0);le(O|0,F+k|0,4,0);le(M|0,A+S|0,4,0);le(E|0,y+w|0,4,0);le(b|0,v+_|0,4,0);le(g|0,p+m|0,4,0);le(h|0,f+c|0,4,0);le(l|0,u+s|0,4,0);le(i|0,a+n|0,4,0);le(e|0,r+t|0,4,0);d=o;return}function Le(e,t,r){e=e|0;t=t|0;r=r|0;var o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,P=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0;o=d;Z=t+40|0;u=t+44|0;f=t+48|0;p=t+52|0;v=t+56|0;y=t+60|0;A=t+64|0;F=t+68|0;T=t+72|0;N=t+76|0;G=t+4|0;V=t+8|0;H=t+12|0;s=t+16|0;h=t+20|0;_=t+24|0;E=t+28|0;k=t+32|0;U=t+36|0;se=(ue(G|0,4,0,0)|0|0)+(ue(u|0,4,0,0)|0|0)|0;ie=(ue(V|0,4,0,0)|0|0)+(ue(f|0,4,0,0)|0|0)|0;ae=(ue(H|0,4,0,0)|0|0)+(ue(p|0,4,0,0)|0|0)|0;ne=(ue(s|0,4,0,0)|0|0)+(ue(v|0,4,0,0)|0|0)|0;oe=(ue(h|0,4,0,0)|0|0)+(ue(y|0,4,0,0)|0|0)|0;re=(ue(_|0,4,0,0)|0|0)+(ue(A|0,4,0,0)|0|0)|0;te=(ue(E|0,4,0,0)|0|0)+(ue(F|0,4,0,0)|0|0)|0;ee=(ue(k|0,4,0,0)|0|0)+(ue(T|0,4,0,0)|0|0)|0;Q=(ue(U|0,4,0,0)|0|0)+(ue(N|0,4,0,0)|0|0)|0;le(e|0,(ue(t|0,4,0,0)|0|0)+(ue(Z|0,4,0,0)|0|0)|0,4,0);ce=e+4|0;le(ce|0,se|0,4,0);se=e+8|0;le(se|0,ie|0,4,0);ie=e+12|0;le(ie|0,ae|0,4,0);ae=e+16|0;le(ae|0,ne|0,4,0);ne=e+20|0;le(ne|0,oe|0,4,0);oe=e+24|0;le(oe|0,re|0,4,0);re=e+28|0;le(re|0,te|0,4,0);te=e+32|0;le(te|0,ee|0,4,0);ee=e+36|0;le(ee|0,Q|0,4,0);Q=e+40|0;G=(ue(u|0,4,0,0)|0|0)-(ue(G|0,4,0,0)|0|0)|0;V=(ue(f|0,4,0,0)|0|0)-(ue(V|0,4,0,0)|0|0)|0;H=(ue(p|0,4,0,0)|0|0)-(ue(H|0,4,0,0)|0|0)|0;s=(ue(v|0,4,0,0)|0|0)-(ue(s|0,4,0,0)|0|0)|0;h=(ue(y|0,4,0,0)|0|0)-(ue(h|0,4,0,0)|0|0)|0;_=(ue(A|0,4,0,0)|0|0)-(ue(_|0,4,0,0)|0|0)|0;E=(ue(F|0,4,0,0)|0|0)-(ue(E|0,4,0,0)|0|0)|0;k=(ue(T|0,4,0,0)|0|0)-(ue(k|0,4,0,0)|0|0)|0;U=(ue(N|0,4,0,0)|0|0)-(ue(U|0,4,0,0)|0|0)|0;le(Q|0,(ue(Z|0,4,0,0)|0|0)-(ue(t|0,4,0,0)|0|0)|0,4,0);Z=e+44|0;le(Z|0,G|0,4,0);G=e+48|0;le(G|0,V|0,4,0);V=e+52|0;le(V|0,H|0,4,0);H=e+56|0;le(H|0,s|0,4,0);s=e+60|0;le(s|0,h|0,4,0);h=e+64|0;le(h|0,_|0,4,0);_=e+68|0;le(_|0,E|0,4,0);E=e+72|0;le(E|0,k|0,4,0);k=e+76|0;le(k|0,U|0,4,0);U=e+80|0;Fe(U,e,r);Fe(Q,Q,r+40|0);N=e+120|0;Fe(N,r+80|0,t+120|0);T=(ue(t+80|0,4,0,0)|0)<<1;F=(ue(t+84|0,4,0,0)|0)<<1;A=(ue(t+88|0,4,0,0)|0)<<1;y=(ue(t+92|0,4,0,0)|0)<<1;v=(ue(t+96|0,4,0,0)|0)<<1;p=(ue(t+100|0,4,0,0)|0)<<1;f=(ue(t+104|0,4,0,0)|0)<<1;u=(ue(t+108|0,4,0,0)|0)<<1;a=(ue(t+112|0,4,0,0)|0)<<1;t=(ue(t+116|0,4,0,0)|0)<<1;$=ue(U|0,4,0,0)|0|0;j=e+84|0;X=ue(j|0,4,0,0)|0|0;B=e+88|0;Y=ue(B|0,4,0,0)|0|0;z=e+92|0;r=ue(z|0,4,0,0)|0|0;C=e+96|0;i=ue(C|0,4,0,0)|0|0;I=e+100|0;c=ue(I|0,4,0,0)|0|0;L=e+104|0;g=ue(L|0,4,0,0)|0|0;x=e+108|0;w=ue(x|0,4,0,0)|0|0;D=e+112|0;M=ue(D|0,4,0,0)|0|0;P=e+116|0;R=ue(P|0,4,0,0)|0|0;J=ue(Q|0,4,0,0)|0|0;K=ue(Z|0,4,0,0)|0|0;W=ue(G|0,4,0,0)|0|0;q=ue(V|0,4,0,0)|0|0;n=ue(H|0,4,0,0)|0|0;l=ue(s|0,4,0,0)|0|0;m=ue(h|0,4,0,0)|0|0;b=ue(_|0,4,0,0)|0|0;S=ue(E|0,4,0,0)|0|0;O=ue(k|0,4,0,0)|0|0;le(e|0,$-J|0,4,0);le(ce|0,X-K|0,4,0);le(se|0,Y-W|0,4,0);le(ie|0,r-q|0,4,0);le(ae|0,i-n|0,4,0);le(ne|0,c-l|0,4,0);le(oe|0,g-m|0,4,0);le(re|0,w-b|0,4,0);le(te|0,M-S|0,4,0);le(ee|0,R-O|0,4,0);le(Q|0,J+$|0,4,0);le(Z|0,K+X|0,4,0);le(G|0,W+Y|0,4,0);le(V|0,q+r|0,4,0);le(H|0,n+i|0,4,0);le(s|0,l+c|0,4,0);le(h|0,m+g|0,4,0);le(_|0,b+w|0,4,0);le(E|0,S+M|0,4,0);le(k|0,O+R|0,4,0);R=ue(N|0,4,0,0)|0|0;O=e+124|0;k=ue(O|0,4,0,0)|0|0;M=e+128|0;S=ue(M|0,4,0,0)|0|0;E=e+132|0;w=ue(E|0,4,0,0)|0|0;b=e+136|0;_=ue(b|0,4,0,0)|0|0;g=e+140|0;m=ue(g|0,4,0,0)|0|0;h=e+144|0;c=ue(h|0,4,0,0)|0|0;l=e+148|0;s=ue(l|0,4,0,0)|0|0;i=e+152|0;n=ue(i|0,4,0,0)|0|0;e=e+156|0;r=ue(e|0,4,0,0)|0|0;le(U|0,R+T|0,4,0);le(j|0,k+F|0,4,0);le(B|0,S+A|0,4,0);le(z|0,w+y|0,4,0);le(C|0,_+v|0,4,0);le(I|0,m+p|0,4,0);le(L|0,c+f|0,4,0);le(x|0,s+u|0,4,0);le(D|0,n+a|0,4,0);le(P|0,r+t|0,4,0);le(N|0,T-R|0,4,0);le(O|0,F-k|0,4,0);le(M|0,A-S|0,4,0);le(E|0,y-w|0,4,0);le(b|0,v-_|0,4,0);le(g|0,p-m|0,4,0);le(h|0,f-c|0,4,0);le(l|0,u-s|0,4,0);le(i|0,a-n|0,4,0);le(e|0,t-r|0,4,0);d=o;return}function Ie(e,t){e=e|0;t=t|0;var r=0,o=0,n=0;r=d;o=t+120|0;Fe(e,t,o);n=t+80|0;Fe(e+40|0,t+40|0,n);Fe(e+80|0,n,o);d=r;return}function Ce(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0,de=0,fe=0,he=0,me=0,pe=0;s=d;d=d+192|0;a=s+160|0;r=s+120|0;b=s+80|0;o=s+40|0;n=s;l=ue(t>>0|0,1,0,1)|0|0;f=ht(ue(t+1>>0|0,1,0,1)|0|0|0,0,8)|0;c=P;me=ht(ue(t+2>>0|0,1,0,1)|0|0|0,0,16)|0;c=c|P;F=ht(ue(t+3>>0|0,1,0,1)|0|0|0,0,24)|0;F=f|l|me|F;c=c|P;me=ue(t+6>>0|0,1,0,0)|0|0;l=ue(t+4>>0|0,1,0,1)|0|0;f=ht(ue(t+5>>0|0,1,0,1)|0|0|0,0,8)|0;pe=P;me=ht(me&255|0,0,16)|0;me=f|l|me;pe=pe|P;l=ht(me|0,pe|0,6)|0;f=P;h=ue(t+9>>0|0,1,0,0)|0|0;fe=ue(t+7>>0|0,1,0,1)|0|0;m=ht(ue(t+8>>0|0,1,0,1)|0|0|0,0,8)|0;p=P;h=ht(h&255|0,0,16)|0;h=m|fe|h;p=p|P;fe=ue(t+12>>0|0,1,0,0)|0|0;m=ue(t+10>>0|0,1,0,1)|0|0;k=ht(ue(t+11>>0|0,1,0,1)|0|0|0,0,8)|0;he=P;fe=ht(fe&255|0,0,16)|0;fe=k|m|fe;he=he|P;m=ht(fe|0,he|0,3)|0;k=P;M=ue(t+15>>0|0,1,0,0)|0|0;ce=ue(t+13>>0|0,1,0,1)|0|0;w=ht(ue(t+14>>0|0,1,0,1)|0|0|0,0,8)|0;S=P;M=ht(M&255|0,0,16)|0;M=w|ce|M;S=S|P;ce=ue(t+16>>0|0,1,0,1)|0|0;w=ht(ue(t+17>>0|0,1,0,1)|0|0|0,0,8)|0;E=P;u=ht(ue(t+18>>0|0,1,0,1)|0|0|0,0,16)|0;E=E|P;A=ht(ue(t+19>>0|0,1,0,1)|0|0|0,0,24)|0;A=w|ce|u|A;E=E|P;u=ue(t+22>>0|0,1,0,0)|0|0;ce=ue(t+20>>0|0,1,0,1)|0|0;w=ht(ue(t+21>>0|0,1,0,1)|0|0|0,0,8)|0;v=P;u=ht(u&255|0,0,16)|0;u=w|ce|u;v=v|P;ce=ue(t+25>>0|0,1,0,0)|0|0;w=ue(t+23>>0|0,1,0,1)|0|0;_=ht(ue(t+24>>0|0,1,0,1)|0|0|0,0,8)|0;de=P;ce=ht(ce&255|0,0,16)|0;ce=_|w|ce;de=de|P;w=ht(ce|0,de|0,5)|0;_=P;g=ue(t+28>>0|0,1,0,0)|0|0;i=ue(t+26>>0|0,1,0,1)|0|0;se=ht(ue(t+27>>0|0,1,0,1)|0|0|0,0,8)|0;y=P;g=ht(g&255|0,0,16)|0;g=se|i|g;y=y|P;i=t+31|0;se=ue(i>>0|0,1,0,0)|0|0;ie=ue(t+29>>0|0,1,0,1)|0|0;ae=ht(ue(t+30>>0|0,1,0,1)|0|0|0,0,8)|0;t=P;se=ht(se&255|0,0,16)|0;t=ht(ae|ie|se|0,t|P|0,2)|0;t=t&33554428;if((t|0)==33554428&0==0&((g|0)==16777215&(y|0)==0)&((ce|0)==16777215&(de|0)==0)&((u|0)==16777215&(v|0)==0)&((A|0)==-1&(E|0)==0)&((M|0)==16777215&(S|0)==0)&((fe|0)==16777215&(he|0)==0)&((h|0)==16777215&(p|0)==0)&((me|0)==16777215&(pe|0)==0)&(c>>>0>0|(c|0)==0&F>>>0>4294967276)){pe=-1;d=s;return pe|0}te=ht(h|0,p|0,5)|0;me=P;pe=ht(M|0,S|0,2)|0;oe=P;re=ht(u|0,v|0,7)|0;ie=P;u=ht(g|0,y|0,4)|0;se=P;ae=ct(t|0,0,16777216,0)|0;ae=ft(ae|0,P|0,25)|0;ne=P;fe=yt(ae|0,ne|0,19,0)|0;fe=ct(fe|0,P|0,F|0,c|0)|0;Q=P;ne=ht(ae|0,ne|0,25)|0;ae=P;de=ct(l|0,f|0,16777216,0)|0;de=ft(de|0,P|0,25)|0;Z=P;me=ct(te|0,me|0,de|0,Z|0)|0;te=P;Z=ht(de|0,Z|0,25)|0;Z=lt(l|0,f|0,Z|0,P|0)|0;de=P;he=ct(m|0,k|0,16777216,0)|0;he=ft(he|0,P|0,25)|0;J=P;l=ct(pe|0,oe|0,he|0,J|0)|0;oe=P;J=ht(he|0,J|0,25)|0;he=P;pe=ct(A|0,E|0,16777216,0)|0;pe=ft(pe|0,P|0,25)|0;ee=P;y=ct(re|0,ie|0,pe|0,ee|0)|0;ie=P;ee=ht(pe|0,ee|0,25)|0;pe=P;c=ct(w|0,_|0,16777216,0)|0;c=ft(c|0,P|0,25)|0;re=P;se=ct(u|0,se|0,c|0,re|0)|0;u=P;re=ht(c|0,re|0,25)|0;c=P;$=ct(fe|0,Q|0,33554432,0)|0;$=ut($|0,P|0,26)|0;ce=P;de=ct(Z|0,de|0,$|0,ce|0)|0;ce=ht($|0,ce|0,26)|0;ce=lt(fe|0,Q|0,ce|0,P|0)|0;Q=ct(me|0,te|0,33554432,0)|0;Q=ut(Q|0,P|0,26)|0;fe=P;$=ct(Q|0,fe|0,m|0,k|0)|0;he=lt($|0,P|0,J|0,he|0)|0;fe=ht(Q|0,fe|0,26)|0;fe=lt(me|0,te|0,fe|0,P|0)|0;te=ct(l|0,oe|0,33554432,0)|0;te=ut(te|0,P|0,26)|0;me=P;Q=ct(te|0,me|0,A|0,E|0)|0;pe=lt(Q|0,P|0,ee|0,pe|0)|0;me=ht(te|0,me|0,26)|0;me=lt(l|0,oe|0,me|0,P|0)|0;oe=ct(y|0,ie|0,33554432,0)|0;oe=ut(oe|0,P|0,26)|0;l=P;w=ct(oe|0,l|0,w|0,_|0)|0;c=lt(w|0,P|0,re|0,c|0)|0;l=ht(oe|0,l|0,26)|0;l=lt(y|0,ie|0,l|0,P|0)|0;ie=ct(se|0,u|0,33554432,0)|0;ie=ut(ie|0,P|0,26)|0;y=P;w=ct(t|0,0,ie|0,y|0)|0;w=lt(w|0,P|0,ne|0,ae|0)|0;y=ht(ie|0,y|0,26)|0;y=lt(se|0,u|0,y|0,P|0)|0;u=e+40|0;le(u|0,ce|0,4,0);le(e+44|0,de|0,4,0);le(e+48|0,fe|0,4,0);le(e+52|0,he|0,4,0);le(e+56|0,me|0,4,0);le(e+60|0,pe|0,4,0);le(e+64|0,l|0,4,0);le(e+68|0,c|0,4,0);le(e+72|0,y|0,4,0);le(e+76|0,w|0,4,0);w=e+80|0;le(w|0,1|0,4,0);y=e+84|0;c=y+0|0;l=c+36|0;do{le(c|0,0|0,4,0);c=c+4|0}while((c|0)<(l|0));ze(r,u);Fe(b,r,240);_=r+4|0;v=r+8|0;l=r+12|0;c=r+16|0;f=r+20|0;h=r+24|0;m=r+28|0;p=r+32|0;g=r+36|0;R=ue(w|0,4,0,0)|0|0;me=ue(y|0,4,0,0)|0|0;re=ue(e+88|0,4,0,0)|0|0;x=ue(e+92|0,4,0,0)|0|0;N=ue(e+96|0,4,0,0)|0|0;O=ue(e+100|0,4,0,0)|0|0;F=ue(e+104|0,4,0,0)|0|0;M=ue(e+108|0,4,0,0)|0|0;S=ue(e+112|0,4,0,0)|0|0;y=ue(e+116|0,4,0,0)|0|0;E=(ue(_|0,4,0,0)|0|0)-me|0;A=(ue(v|0,4,0,0)|0|0)-re|0;k=(ue(l|0,4,0,0)|0|0)-x|0;t=(ue(c|0,4,0,0)|0|0)-N|0;T=(ue(f|0,4,0,0)|0|0)-O|0;D=(ue(h|0,4,0,0)|0|0)-F|0;G=(ue(m|0,4,0,0)|0|0)-M|0;pe=(ue(p|0,4,0,0)|0|0)-S|0;L=(ue(g|0,4,0,0)|0|0)-y|0;le(r|0,(ue(r|0,4,0,0)|0|0)-R|0,4,0);le(_|0,E|0,4,0);le(v|0,A|0,4,0);le(l|0,k|0,4,0);le(c|0,t|0,4,0);le(f|0,T|0,4,0);le(h|0,D|0,4,0);le(m|0,G|0,4,0);le(p|0,pe|0,4,0);le(g|0,L|0,4,0);L=b+4|0;pe=b+8|0;G=b+12|0;D=b+16|0;T=b+20|0;t=b+24|0;k=b+28|0;A=b+32|0;E=b+36|0;me=me+(ue(L|0,4,0,0)|0|0)|0;re=re+(ue(pe|0,4,0,0)|0|0)|0;x=x+(ue(G|0,4,0,0)|0|0)|0;N=N+(ue(D|0,4,0,0)|0|0)|0;O=O+(ue(T|0,4,0,0)|0|0)|0;F=F+(ue(t|0,4,0,0)|0|0)|0;M=M+(ue(k|0,4,0,0)|0|0)|0;S=S+(ue(A|0,4,0,0)|0|0)|0;y=y+(ue(E|0,4,0,0)|0|0)|0;le(b|0,R+(ue(b|0,4,0,0)|0|0)|0,4,0);le(L|0,me|0,4,0);le(pe|0,re|0,4,0);le(G|0,x|0,4,0);le(D|0,N|0,4,0);le(T|0,O|0,4,0);le(t|0,F|0,4,0);le(k|0,M|0,4,0);le(A|0,S|0,4,0);le(E|0,y|0,4,0);Be(e,r,b);ze(o,e);Fe(o,o,b);y=o+4|0;E=o+8|0;S=o+12|0;A=o+16|0;M=o+20|0;k=o+24|0;F=o+28|0;t=o+32|0;O=o+36|0;T=(ue(y|0,4,0,0)|0|0)-(ue(_|0,4,0,0)|0|0)|0;N=(ue(E|0,4,0,0)|0|0)-(ue(v|0,4,0,0)|0|0)|0;D=(ue(S|0,4,0,0)|0|0)-(ue(l|0,4,0,0)|0|0)|0;x=(ue(A|0,4,0,0)|0|0)-(ue(c|0,4,0,0)|0|0)|0;G=(ue(M|0,4,0,0)|0|0)-(ue(f|0,4,0,0)|0|0)|0;re=(ue(k|0,4,0,0)|0|0)-(ue(h|0,4,0,0)|0|0)|0;pe=(ue(F|0,4,0,0)|0|0)-(ue(m|0,4,0,0)|0|0)|0;me=(ue(t|0,4,0,0)|0|0)-(ue(p|0,4,0,0)|0|0)|0;L=(ue(O|0,4,0,0)|0|0)-(ue(g|0,4,0,0)|0|0)|0;le(n|0,(ue(o|0,4,0,0)|0|0)-(ue(r|0,4,0,0)|0|0)|0,4,0);R=n+4|0;le(R|0,T|0,4,0);T=n+8|0;le(T|0,N|0,4,0);N=n+12|0;le(N|0,D|0,4,0);D=n+16|0;le(D|0,x|0,4,0);x=n+20|0;le(x|0,G|0,4,0);G=n+24|0;le(G|0,re|0,4,0);re=n+28|0;le(re|0,pe|0,4,0);pe=n+32|0;le(pe|0,me|0,4,0);me=n+36|0;le(me|0,L|0,4,0);qe(a,n);L=a+1|0;I=a+2|0;C=a+3|0;z=a+4|0;B=a+5|0;j=a+6|0;U=a+7|0;H=a+8|0;q=a+9|0;V=a+10|0;Y=a+11|0;W=a+12|0;w=a+13|0;X=a+14|0;K=a+15|0;Z=a+16|0;$=a+17|0;J=a+18|0;Q=a+19|0;ee=a+20|0;te=a+21|0;b=a+22|0;oe=a+23|0;ne=a+24|0;ae=a+25|0;ie=a+26|0;se=a+27|0;ce=a+28|0;de=a+29|0;fe=a+30|0;he=a+31|0;do{if(!((((ue(L>>0|0,1,0,0)|0|(ue(a>>0|0,1,0,0)|0)|(ue(I>>0|0,1,0,0)|0)|(ue(C>>0|0,1,0,0)|0)|(ue(z>>0|0,1,0,0)|0)|(ue(B>>0|0,1,0,0)|0)|(ue(j>>0|0,1,0,0)|0)|(ue(U>>0|0,1,0,0)|0)|(ue(H>>0|0,1,0,0)|0)|(ue(q>>0|0,1,0,0)|0)|(ue(V>>0|0,1,0,0)|0)|(ue(Y>>0|0,1,0,0)|0)|(ue(W>>0|0,1,0,0)|0)|(ue(w>>0|0,1,0,0)|0)|(ue(X>>0|0,1,0,0)|0)|(ue(K>>0|0,1,0,0)|0)|(ue(Z>>0|0,1,0,0)|0)|(ue($>>0|0,1,0,0)|0)|(ue(J>>0|0,1,0,0)|0)|(ue(Q>>0|0,1,0,0)|0)|(ue(ee>>0|0,1,0,0)|0)|(ue(te>>0|0,1,0,0)|0)|(ue(b>>0|0,1,0,0)|0)|(ue(oe>>0|0,1,0,0)|0)|(ue(ne>>0|0,1,0,0)|0)|(ue(ae>>0|0,1,0,0)|0)|(ue(ie>>0|0,1,0,0)|0)|(ue(se>>0|0,1,0,0)|0)|(ue(ce>>0|0,1,0,0)|0)|(ue(de>>0|0,1,0,0)|0)|(ue(fe>>0|0,1,0,0)|0)|(ue(he>>0|0,1,0,0)|0))&255)+-1&-256|0)==-256)){y=(ue(_|0,4,0,0)|0|0)+(ue(y|0,4,0,0)|0|0)|0;E=(ue(v|0,4,0,0)|0|0)+(ue(E|0,4,0,0)|0|0)|0;S=(ue(l|0,4,0,0)|0|0)+(ue(S|0,4,0,0)|0|0)|0;A=(ue(c|0,4,0,0)|0|0)+(ue(A|0,4,0,0)|0|0)|0;M=(ue(f|0,4,0,0)|0|0)+(ue(M|0,4,0,0)|0|0)|0;k=(ue(h|0,4,0,0)|0|0)+(ue(k|0,4,0,0)|0|0)|0;F=(ue(m|0,4,0,0)|0|0)+(ue(F|0,4,0,0)|0|0)|0;t=(ue(p|0,4,0,0)|0|0)+(ue(t|0,4,0,0)|0|0)|0;O=(ue(g|0,4,0,0)|0|0)+(ue(O|0,4,0,0)|0|0)|0;le(n|0,(ue(r|0,4,0,0)|0|0)+(ue(o|0,4,0,0)|0|0)|0,4,0);le(R|0,y|0,4,0);le(T|0,E|0,4,0);le(N|0,S|0,4,0);le(D|0,A|0,4,0);le(x|0,M|0,4,0);le(G|0,k|0,4,0);le(re|0,F|0,4,0);le(pe|0,t|0,4,0);le(me|0,O|0,4,0);qe(a,n);if((((ue(L>>0|0,1,0,0)|0|(ue(a>>0|0,1,0,0)|0)|(ue(I>>0|0,1,0,0)|0)|(ue(C>>0|0,1,0,0)|0)|(ue(z>>0|0,1,0,0)|0)|(ue(B>>0|0,1,0,0)|0)|(ue(j>>0|0,1,0,0)|0)|(ue(U>>0|0,1,0,0)|0)|(ue(H>>0|0,1,0,0)|0)|(ue(q>>0|0,1,0,0)|0)|(ue(V>>0|0,1,0,0)|0)|(ue(Y>>0|0,1,0,0)|0)|(ue(W>>0|0,1,0,0)|0)|(ue(w>>0|0,1,0,0)|0)|(ue(X>>0|0,1,0,0)|0)|(ue(K>>0|0,1,0,0)|0)|(ue(Z>>0|0,1,0,0)|0)|(ue($>>0|0,1,0,0)|0)|(ue(J>>0|0,1,0,0)|0)|(ue(Q>>0|0,1,0,0)|0)|(ue(ee>>0|0,1,0,0)|0)|(ue(te>>0|0,1,0,0)|0)|(ue(b>>0|0,1,0,0)|0)|(ue(oe>>0|0,1,0,0)|0)|(ue(ne>>0|0,1,0,0)|0)|(ue(ae>>0|0,1,0,0)|0)|(ue(ie>>0|0,1,0,0)|0)|(ue(se>>0|0,1,0,0)|0)|(ue(ce>>0|0,1,0,0)|0)|(ue(de>>0|0,1,0,0)|0)|(ue(fe>>0|0,1,0,0)|0)|(ue(he>>0|0,1,0,0)|0))&255)+-1&-256|0)==-256){Fe(e,e,280);break}else{pe=-1;d=s;return pe|0}}}while(0);qe(a,e);do{if(((ue(a>>0|0,1,0,0)|0)&1|0)!=((ue(i>>0|0,1,0,1)|0|0)>>>7|0)){qe(a,e);if((((ue(L>>0|0,1,0,0)|0|(ue(a>>0|0,1,0,0)|0)|(ue(I>>0|0,1,0,0)|0)|(ue(C>>0|0,1,0,0)|0)|(ue(z>>0|0,1,0,0)|0)|(ue(B>>0|0,1,0,0)|0)|(ue(j>>0|0,1,0,0)|0)|(ue(U>>0|0,1,0,0)|0)|(ue(H>>0|0,1,0,0)|0)|(ue(q>>0|0,1,0,0)|0)|(ue(V>>0|0,1,0,0)|0)|(ue(Y>>0|0,1,0,0)|0)|(ue(W>>0|0,1,0,0)|0)|(ue(w>>0|0,1,0,0)|0)|(ue(X>>0|0,1,0,0)|0)|(ue(K>>0|0,1,0,0)|0)|(ue(Z>>0|0,1,0,0)|0)|(ue($>>0|0,1,0,0)|0)|(ue(J>>0|0,1,0,0)|0)|(ue(Q>>0|0,1,0,0)|0)|(ue(ee>>0|0,1,0,0)|0)|(ue(te>>0|0,1,0,0)|0)|(ue(b>>0|0,1,0,0)|0)|(ue(oe>>0|0,1,0,0)|0)|(ue(ne>>0|0,1,0,0)|0)|(ue(ae>>0|0,1,0,0)|0)|(ue(ie>>0|0,1,0,0)|0)|(ue(se>>0|0,1,0,0)|0)|(ue(ce>>0|0,1,0,0)|0)|(ue(de>>0|0,1,0,0)|0)|(ue(fe>>0|0,1,0,0)|0)|(ue(he>>0|0,1,0,0)|0))&255)+-1&-256|0)==-256){pe=-1;d=s;return pe|0}else{Z=e+4|0;J=e+8|0;ee=e+12|0;re=e+16|0;ne=e+20|0;ie=e+24|0;ce=e+28|0;fe=e+32|0;me=e+36|0;$=0-(ue(Z|0,4,0,0)|0|0)|0;Q=0-(ue(J|0,4,0,0)|0|0)|0;te=0-(ue(ee|0,4,0,0)|0|0)|0;oe=0-(ue(re|0,4,0,0)|0|0)|0;ae=0-(ue(ne|0,4,0,0)|0|0)|0;se=0-(ue(ie|0,4,0,0)|0|0)|0;de=0-(ue(ce|0,4,0,0)|0|0)|0;he=0-(ue(fe|0,4,0,0)|0|0)|0;pe=0-(ue(me|0,4,0,0)|0|0)|0;le(e|0,0-(ue(e|0,4,0,0)|0|0)|0,4,0);le(Z|0,$|0,4,0);le(J|0,Q|0,4,0);le(ee|0,te|0,4,0);le(re|0,oe|0,4,0);le(ne|0,ae|0,4,0);le(ie|0,se|0,4,0);le(ce|0,de|0,4,0);le(fe|0,he|0,4,0);le(me|0,pe|0,4,0);break}}}while(0);Fe(e+120|0,e,u);pe=0;d=s;return pe|0}function ze(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0,de=0,fe=0,he=0,me=0,pe=0,ge=0,_e=0,ve=0,be=0,we=0,ye=0,Ee=0,Se=0,Ae=0,Me=0,ke=0,Fe=0,Oe=0,Re=0,Te=0,Ne=0,Pe=0,De=0,xe=0,Le=0,Ie=0,Ce=0,ze=0,Be=0,je=0,Ue=0,He=0,qe=0,Ve=0,Ye=0,We=0,Ge=0,Xe=0,Ke=0,Ze=0,$e=0,Je=0,Qe=0,et=0,tt=0,rt=0,ot=0,nt=0,at=0,it=0,st=0,dt=0,ft=0;r=d;nt=ue(t|0,4,0,0)|0|0;Se=ue(t+4|0,4,0,0)|0|0;l=ue(t+8|0,4,0,0)|0|0;me=ue(t+12|0,4,0,0)|0|0;n=ue(t+16|0,4,0,0)|0|0;it=ue(t+20|0,4,0,0)|0|0;$=ue(t+24|0,4,0,0)|0|0;je=ue(t+28|0,4,0,0)|0|0;s=ue(t+32|0,4,0,0)|0|0;t=ue(t+36|0,4,0,0)|0|0;f=nt<<1;g=Se<<1;Je=l<<1;a=me<<1;ge=n<<1;O=it<<1;h=$<<1;u=je<<1;Be=it*38|0;we=$*19|0;Ae=je*38|0;ne=s*19|0;ft=t*38|0;at=((nt|0)<0)<<31>>31;at=yt(nt|0,at|0,nt|0,at|0)|0;nt=P;p=((f|0)<0)<<31>>31;Ee=((Se|0)<0)<<31>>31;Ce=yt(f|0,p|0,Se|0,Ee|0)|0;Ie=P;c=((l|0)<0)<<31>>31;$e=yt(l|0,c|0,f|0,p|0)|0;Ze=P;pe=((me|0)<0)<<31>>31;Ke=yt(me|0,pe|0,f|0,p|0)|0;Xe=P;R=((n|0)<0)<<31>>31;qe=yt(n|0,R|0,f|0,p|0)|0;He=P;st=((it|0)<0)<<31>>31;Fe=yt(it|0,st|0,f|0,p|0)|0;ke=P;i=(($|0)<0)<<31>>31;se=yt($|0,i|0,f|0,p|0)|0;ie=P;Ue=((je|0)<0)<<31>>31;V=yt(je|0,Ue|0,f|0,p|0)|0;q=P;F=((s|0)<0)<<31>>31;N=yt(s|0,F|0,f|0,p|0)|0;T=P;_=((t|0)<0)<<31>>31;p=yt(t|0,_|0,f|0,p|0)|0;f=P;m=((g|0)<0)<<31>>31;Ee=yt(g|0,m|0,Se|0,Ee|0)|0;Se=P;re=yt(g|0,m|0,l|0,c|0)|0;oe=P;H=((a|0)<0)<<31>>31;Ge=yt(a|0,H|0,g|0,m|0)|0;We=P;Ne=yt(n|0,R|0,g|0,m|0)|0;Te=P;o=((O|0)<0)<<31>>31;de=yt(O|0,o|0,g|0,m|0)|0;ce=P;W=yt($|0,i|0,g|0,m|0)|0;Y=P;U=((u|0)<0)<<31>>31;x=yt(u|0,U|0,g|0,m|0)|0;D=P;w=yt(s|0,F|0,g|0,m|0)|0;b=P;dt=((ft|0)<0)<<31>>31;m=yt(ft|0,dt|0,g|0,m|0)|0;g=P;Ye=yt(l|0,c|0,l|0,c|0)|0;Ve=P;Qe=((Je|0)<0)<<31>>31;Re=yt(Je|0,Qe|0,me|0,pe|0)|0;Oe=P;he=yt(n|0,R|0,Je|0,Qe|0)|0;fe=P;Z=yt(it|0,st|0,Je|0,Qe|0)|0;K=P;j=yt($|0,i|0,Je|0,Qe|0)|0;B=P;E=yt(je|0,Ue|0,Je|0,Qe|0)|0;y=P;ae=((ne|0)<0)<<31>>31;Qe=yt(ne|0,ae|0,Je|0,Qe|0)|0;Je=P;c=yt(ft|0,dt|0,l|0,c|0)|0;l=P;pe=yt(a|0,H|0,me|0,pe|0)|0;me=P;X=yt(a|0,H|0,n|0,R|0)|0;G=P;I=yt(O|0,o|0,a|0,H|0)|0;L=P;k=yt($|0,i|0,a|0,H|0)|0;M=P;Me=((Ae|0)<0)<<31>>31;tt=yt(Ae|0,Me|0,a|0,H|0)|0;et=P;De=yt(ne|0,ae|0,a|0,H|0)|0;Pe=P;H=yt(ft|0,dt|0,a|0,H|0)|0;a=P;z=yt(n|0,R|0,n|0,R|0)|0;C=P;_e=((ge|0)<0)<<31>>31;A=yt(ge|0,_e|0,it|0,st|0)|0;S=P;ye=((we|0)<0)<<31>>31;ot=yt(we|0,ye|0,ge|0,_e|0)|0;rt=P;Le=yt(Ae|0,Me|0,n|0,R|0)|0;xe=P;_e=yt(ne|0,ae|0,ge|0,_e|0)|0;ge=P;R=yt(ft|0,dt|0,n|0,R|0)|0;n=P;st=yt(Be|0,((Be|0)<0)<<31>>31|0,it|0,st|0)|0;it=P;Be=yt(we|0,ye|0,O|0,o|0)|0;ze=P;be=yt(Ae|0,Me|0,O|0,o|0)|0;ve=P;Q=yt(ne|0,ae|0,O|0,o|0)|0;J=P;o=yt(ft|0,dt|0,O|0,o|0)|0;O=P;ye=yt(we|0,ye|0,$|0,i|0)|0;we=P;te=yt(Ae|0,Me|0,$|0,i|0)|0;ee=P;h=yt(ne|0,ae|0,h|0,((h|0)<0)<<31>>31|0)|0;v=P;i=yt(ft|0,dt|0,$|0,i|0)|0;$=P;Ue=yt(Ae|0,Me|0,je|0,Ue|0)|0;je=P;Me=yt(ne|0,ae|0,u|0,U|0)|0;Ae=P;U=yt(ft|0,dt|0,u|0,U|0)|0;u=P;ae=yt(ne|0,ae|0,s|0,F|0)|0;ne=P;F=yt(ft|0,dt|0,s|0,F|0)|0;s=P;_=yt(ft|0,dt|0,t|0,_|0)|0;t=P;nt=ct(st|0,it|0,at|0,nt|0)|0;rt=ct(nt|0,P|0,ot|0,rt|0)|0;et=ct(rt|0,P|0,tt|0,et|0)|0;Je=ct(et|0,P|0,Qe|0,Je|0)|0;g=ct(Je|0,P|0,m|0,g|0)|0;m=P;Se=ct($e|0,Ze|0,Ee|0,Se|0)|0;Ee=P;oe=ct(Ke|0,Xe|0,re|0,oe|0)|0;re=P;Ve=ct(Ge|0,We|0,Ye|0,Ve|0)|0;He=ct(Ve|0,P|0,qe|0,He|0)|0;je=ct(He|0,P|0,Ue|0,je|0)|0;v=ct(je|0,P|0,h|0,v|0)|0;O=ct(v|0,P|0,o|0,O|0)|0;o=P;v=ct(g|0,m|0,33554432,0)|0;v=ut(v|0,P|0,26)|0;h=P;Ie=ct(Be|0,ze|0,Ce|0,Ie|0)|0;xe=ct(Ie|0,P|0,Le|0,xe|0)|0;Pe=ct(xe|0,P|0,De|0,Pe|0)|0;l=ct(Pe|0,P|0,c|0,l|0)|0;l=ct(l|0,P|0,v|0,h|0)|0;c=P;h=ht(v|0,h|0,26)|0;h=lt(g|0,m|0,h|0,P|0)|0;m=P;g=ct(O|0,o|0,33554432,0)|0;g=ut(g|0,P|0,26)|0;v=P;Oe=ct(Ne|0,Te|0,Re|0,Oe|0)|0;ke=ct(Oe|0,P|0,Fe|0,ke|0)|0;Ae=ct(ke|0,P|0,Me|0,Ae|0)|0;$=ct(Ae|0,P|0,i|0,$|0)|0;$=ct($|0,P|0,g|0,v|0)|0;i=P;v=ht(g|0,v|0,26)|0;v=lt(O|0,o|0,v|0,P|0)|0;o=P;O=ct(l|0,c|0,16777216,0)|0;O=ut(O|0,P|0,25)|0;g=P;we=ct(Se|0,Ee|0,ye|0,we|0)|0;ve=ct(we|0,P|0,be|0,ve|0)|0;ge=ct(ve|0,P|0,_e|0,ge|0)|0;a=ct(ge|0,P|0,H|0,a|0)|0;a=ct(a|0,P|0,O|0,g|0)|0;H=P;g=ht(O|0,g|0,25)|0;g=lt(l|0,c|0,g|0,P|0)|0;c=P;l=ct($|0,i|0,16777216,0)|0;l=ut(l|0,P|0,25)|0;O=P;fe=ct(pe|0,me|0,he|0,fe|0)|0;ce=ct(fe|0,P|0,de|0,ce|0)|0;ie=ct(ce|0,P|0,se|0,ie|0)|0;ne=ct(ie|0,P|0,ae|0,ne|0)|0;u=ct(ne|0,P|0,U|0,u|0)|0;u=ct(u|0,P|0,l|0,O|0)|0;U=P;O=ht(l|0,O|0,25)|0;O=lt($|0,i|0,O|0,P|0)|0;i=P;$=ct(a|0,H|0,33554432,0)|0;$=ut($|0,P|0,26)|0;l=P;ee=ct(oe|0,re|0,te|0,ee|0)|0;J=ct(ee|0,P|0,Q|0,J|0)|0;n=ct(J|0,P|0,R|0,n|0)|0;n=ct(n|0,P|0,$|0,l|0)|0;R=P;l=ht($|0,l|0,26)|0;l=lt(a|0,H|0,l|0,P|0)|0;H=ct(u|0,U|0,33554432,0)|0;H=ut(H|0,P|0,26)|0;a=P;G=ct(Z|0,K|0,X|0,G|0)|0;Y=ct(G|0,P|0,W|0,Y|0)|0;q=ct(Y|0,P|0,V|0,q|0)|0;s=ct(q|0,P|0,F|0,s|0)|0;s=ct(s|0,P|0,H|0,a|0)|0;F=P;a=ht(H|0,a|0,26)|0;a=lt(u|0,U|0,a|0,P|0)|0;U=ct(n|0,R|0,16777216,0)|0;U=ut(U|0,P|0,25)|0;u=P;o=ct(U|0,u|0,v|0,o|0)|0;v=P;u=ht(U|0,u|0,25)|0;u=lt(n|0,R|0,u|0,P|0)|0;R=ct(s|0,F|0,16777216,0)|0;R=ut(R|0,P|0,25)|0;n=P;C=ct(j|0,B|0,z|0,C|0)|0;L=ct(C|0,P|0,I|0,L|0)|0;D=ct(L|0,P|0,x|0,D|0)|0;T=ct(D|0,P|0,N|0,T|0)|0;t=ct(T|0,P|0,_|0,t|0)|0;t=ct(t|0,P|0,R|0,n|0)|0;_=P;n=ht(R|0,n|0,25)|0;n=lt(s|0,F|0,n|0,P|0)|0;F=ct(o|0,v|0,33554432,0)|0;F=ut(F|0,P|0,26)|0;s=P;i=ct(O|0,i|0,F|0,s|0)|0;s=ht(F|0,s|0,26)|0;s=lt(o|0,v|0,s|0,P|0)|0;v=ct(t|0,_|0,33554432,0)|0;v=ut(v|0,P|0,26)|0;o=P;S=ct(k|0,M|0,A|0,S|0)|0;y=ct(S|0,P|0,E|0,y|0)|0;b=ct(y|0,P|0,w|0,b|0)|0;f=ct(b|0,P|0,p|0,f|0)|0;f=ct(f|0,P|0,v|0,o|0)|0;p=P;o=ht(v|0,o|0,26)|0;o=lt(t|0,_|0,o|0,P|0)|0;_=ct(f|0,p|0,16777216,0)|0;_=ut(_|0,P|0,25)|0;t=P;v=yt(_|0,t|0,19,0)|0;m=ct(v|0,P|0,h|0,m|0)|0;h=P;t=ht(_|0,t|0,25)|0;t=lt(f|0,p|0,t|0,P|0)|0;p=ct(m|0,h|0,33554432,0)|0;p=ut(p|0,P|0,26)|0;f=P;c=ct(g|0,c|0,p|0,f|0)|0;f=ht(p|0,f|0,26)|0;f=lt(m|0,h|0,f|0,P|0)|0;le(e|0,f|0,4,0);le(e+4|0,c|0,4,0);le(e+8|0,l|0,4,0);le(e+12|0,u|0,4,0);le(e+16|0,s|0,4,0);le(e+20|0,i|0,4,0);le(e+24|0,a|0,4,0);le(e+28|0,n|0,4,0);le(e+32|0,o|0,4,0);le(e+36|0,t|0,4,0);d=r;return}function Be(e,t,r){e=e|0;t=t|0;r=r|0;var o=0,n=0,a=0,i=0,s=0,u=0;i=d;d=d+208|0;a=i+160|0;n=i+120|0;s=i+80|0;o=i+40|0;u=i;ze(a,r);Fe(a,a,r);ze(n,a);Fe(n,n,r);Fe(n,n,t);ze(s,n);ze(o,s);ze(o,o);Fe(o,n,o);Fe(s,s,o);ze(s,s);Fe(s,o,s);ze(o,s);ze(o,o);ze(o,o);ze(o,o);ze(o,o);Fe(s,o,s);ze(o,s);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);Fe(o,o,s);ze(u,o);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);ze(u,u);Fe(o,u,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);Fe(s,o,s);ze(o,s);r=0;do{ze(o,o);r=r+1|0}while((r|0)!=49);Fe(o,o,s);ze(u,o);r=0;do{ze(u,u);r=r+1|0}while((r|0)!=99);Fe(o,u,o);u=0;do{ze(o,o);u=u+1|0}while((u|0)!=50);Fe(s,o,s);ze(s,s);ze(s,s);Fe(s,s,n);Fe(s,s,a);Fe(e,s,t);d=i;return}function je(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0,de=0,fe=0,he=0,me=0,pe=0,ge=0,_e=0,ve=0,be=0,we=0,ye=0,Ee=0,Se=0,Ae=0,Me=0,ke=0,Fe=0,Oe=0,Re=0,Te=0,Ne=0,Pe=0,De=0,xe=0,Le=0,Ie=0,Ce=0,ze=0,Be=0,je=0,Ue=0,He=0,qe=0,Ve=0,Ye=0,We=0,Ge=0,Xe=0,Ke=0,Ze=0,$e=0,Je=0,Qe=0,et=0,tt=0,rt=0,ot=0,nt=0,at=0,it=0,st=0,dt=0,ft=0;r=d;nt=ue(t|0,4,0,0)|0|0;je=ue(t+4|0,4,0,0)|0|0;l=ue(t+8|0,4,0,0)|0|0;ne=ue(t+12|0,4,0,0)|0|0;n=ue(t+16|0,4,0,0)|0|0;it=ue(t+20|0,4,0,0)|0|0;A=ue(t+24|0,4,0,0)|0|0;ve=ue(t+28|0,4,0,0)|0|0;s=ue(t+32|0,4,0,0)|0|0;t=ue(t+36|0,4,0,0)|0|0;f=nt<<1;m=je<<1;Je=l<<1;a=ne<<1;xe=n<<1;o=it<<1;_e=A<<1;u=ve<<1;$e=it*38|0;ze=A*19|0;ie=ve*38|0;Z=s*19|0;ft=t*38|0;at=((nt|0)<0)<<31>>31;at=yt(nt|0,at|0,nt|0,at|0)|0;nt=P;p=((f|0)<0)<<31>>31;Ue=((je|0)<0)<<31>>31;Ke=yt(f|0,p|0,je|0,Ue|0)|0;Xe=P;c=((l|0)<0)<<31>>31;qe=yt(l|0,c|0,f|0,p|0)|0;He=P;ae=((ne|0)<0)<<31>>31;De=yt(ne|0,ae|0,f|0,p|0)|0;Pe=P;y=((n|0)<0)<<31>>31;ye=yt(n|0,y|0,f|0,p|0)|0;we=P;st=((it|0)<0)<<31>>31;de=yt(it|0,st|0,f|0,p|0)|0;ce=P;i=((A|0)<0)<<31>>31;Q=yt(A|0,i|0,f|0,p|0)|0;J=P;be=((ve|0)<0)<<31>>31;q=yt(ve|0,be|0,f|0,p|0)|0;H=P;b=((s|0)<0)<<31>>31;D=yt(s|0,b|0,f|0,p|0)|0;N=P;_=((t|0)<0)<<31>>31;p=yt(t|0,_|0,f|0,p|0)|0;f=P;g=((m|0)<0)<<31>>31;Ue=yt(m|0,g|0,je|0,Ue|0)|0;je=P;Ne=yt(m|0,g|0,l|0,c|0)|0;Te=P;S=((a|0)<0)<<31>>31;Me=yt(a|0,S|0,m|0,g|0)|0;Ae=P;pe=yt(n|0,y|0,m|0,g|0)|0;me=P;w=((o|0)<0)<<31>>31;te=yt(o|0,w|0,m|0,g|0)|0;ee=P;Y=yt(A|0,i|0,m|0,g|0)|0;V=P;E=((u|0)<0)<<31>>31;L=yt(u|0,E|0,m|0,g|0)|0;x=P;h=yt(s|0,b|0,m|0,g|0)|0;v=P;dt=((ft|0)<0)<<31>>31;g=yt(ft|0,dt|0,m|0,g|0)|0;m=P;Se=yt(l|0,c|0,l|0,c|0)|0;Ee=P;Qe=((Je|0)<0)<<31>>31;he=yt(Je|0,Qe|0,ne|0,ae|0)|0;fe=P;oe=yt(n|0,y|0,Je|0,Qe|0)|0;re=P;K=yt(it|0,st|0,Je|0,Qe|0)|0;X=P;U=yt(A|0,i|0,Je|0,Qe|0)|0;j=P;k=yt(ve|0,be|0,Je|0,Qe|0)|0;M=P;$=((Z|0)<0)<<31>>31;Qe=yt(Z|0,$|0,Je|0,Qe|0)|0;Je=P;c=yt(ft|0,dt|0,l|0,c|0)|0;l=P;ae=yt(a|0,S|0,ne|0,ae|0)|0;ne=P;G=yt(a|0,S|0,n|0,y|0)|0;W=P;C=yt(o|0,w|0,a|0,S|0)|0;I=P;T=yt(A|0,i|0,a|0,S|0)|0;R=P;se=((ie|0)<0)<<31>>31;tt=yt(ie|0,se|0,a|0,S|0)|0;et=P;Ye=yt(Z|0,$|0,a|0,S|0)|0;Ve=P;S=yt(ft|0,dt|0,a|0,S|0)|0;a=P;B=yt(n|0,y|0,n|0,y|0)|0;z=P;Le=((xe|0)<0)<<31>>31;O=yt(xe|0,Le|0,it|0,st|0)|0;F=P;Be=((ze|0)<0)<<31>>31;ot=yt(ze|0,Be|0,xe|0,Le|0)|0;rt=P;Ge=yt(ie|0,se|0,n|0,y|0)|0;We=P;Le=yt(Z|0,$|0,xe|0,Le|0)|0;xe=P;y=yt(ft|0,dt|0,n|0,y|0)|0;n=P;st=yt($e|0,(($e|0)<0)<<31>>31|0,it|0,st|0)|0;it=P;$e=yt(ze|0,Be|0,o|0,w|0)|0;Ze=P;Ce=yt(ie|0,se|0,o|0,w|0)|0;Ie=P;Fe=yt(Z|0,$|0,o|0,w|0)|0;ke=P;w=yt(ft|0,dt|0,o|0,w|0)|0;o=P;Be=yt(ze|0,Be|0,A|0,i|0)|0;ze=P;Re=yt(ie|0,se|0,A|0,i|0)|0;Oe=P;_e=yt(Z|0,$|0,_e|0,((_e|0)<0)<<31>>31|0)|0;ge=P;i=yt(ft|0,dt|0,A|0,i|0)|0;A=P;be=yt(ie|0,se|0,ve|0,be|0)|0;ve=P;se=yt(Z|0,$|0,u|0,E|0)|0;ie=P;E=yt(ft|0,dt|0,u|0,E|0)|0;u=P;$=yt(Z|0,$|0,s|0,b|0)|0;Z=P;b=yt(ft|0,dt|0,s|0,b|0)|0;s=P;_=yt(ft|0,dt|0,t|0,_|0)|0;t=P;nt=ct(st|0,it|0,at|0,nt|0)|0;rt=ct(nt|0,P|0,ot|0,rt|0)|0;et=ct(rt|0,P|0,tt|0,et|0)|0;Je=ct(et|0,P|0,Qe|0,Je|0)|0;m=ct(Je|0,P|0,g|0,m|0)|0;g=P;Xe=ct($e|0,Ze|0,Ke|0,Xe|0)|0;We=ct(Xe|0,P|0,Ge|0,We|0)|0;Ve=ct(We|0,P|0,Ye|0,Ve|0)|0;l=ct(Ve|0,P|0,c|0,l|0)|0;c=P;je=ct(qe|0,He|0,Ue|0,je|0)|0;ze=ct(je|0,P|0,Be|0,ze|0)|0;Ie=ct(ze|0,P|0,Ce|0,Ie|0)|0;xe=ct(Ie|0,P|0,Le|0,xe|0)|0;a=ct(xe|0,P|0,S|0,a|0)|0;S=P;Te=ct(De|0,Pe|0,Ne|0,Te|0)|0;Oe=ct(Te|0,P|0,Re|0,Oe|0)|0;ke=ct(Oe|0,P|0,Fe|0,ke|0)|0;n=ct(ke|0,P|0,y|0,n|0)|0;y=P;Ee=ct(Me|0,Ae|0,Se|0,Ee|0)|0;we=ct(Ee|0,P|0,ye|0,we|0)|0;ve=ct(we|0,P|0,be|0,ve|0)|0;ge=ct(ve|0,P|0,_e|0,ge|0)|0;o=ct(ge|0,P|0,w|0,o|0)|0;w=P;fe=ct(pe|0,me|0,he|0,fe|0)|0;ce=ct(fe|0,P|0,de|0,ce|0)|0;ie=ct(ce|0,P|0,se|0,ie|0)|0;A=ct(ie|0,P|0,i|0,A|0)|0;i=P;re=ct(ae|0,ne|0,oe|0,re|0)|0;ee=ct(re|0,P|0,te|0,ee|0)|0;J=ct(ee|0,P|0,Q|0,J|0)|0;Z=ct(J|0,P|0,$|0,Z|0)|0;u=ct(Z|0,P|0,E|0,u|0)|0;E=P;W=ct(K|0,X|0,G|0,W|0)|0;V=ct(W|0,P|0,Y|0,V|0)|0;H=ct(V|0,P|0,q|0,H|0)|0;s=ct(H|0,P|0,b|0,s|0)|0;b=P;z=ct(U|0,j|0,B|0,z|0)|0;I=ct(z|0,P|0,C|0,I|0)|0;x=ct(I|0,P|0,L|0,x|0)|0;N=ct(x|0,P|0,D|0,N|0)|0;t=ct(N|0,P|0,_|0,t|0)|0;_=P;F=ct(T|0,R|0,O|0,F|0)|0;M=ct(F|0,P|0,k|0,M|0)|0;v=ct(M|0,P|0,h|0,v|0)|0;f=ct(v|0,P|0,p|0,f|0)|0;p=P;g=ht(m|0,g|0,1)|0;m=P;c=ht(l|0,c|0,1)|0;l=P;S=ht(a|0,S|0,1)|0;a=P;y=ht(n|0,y|0,1)|0;n=P;w=ht(o|0,w|0,1)|0;o=P;i=ht(A|0,i|0,1)|0;A=P;E=ht(u|0,E|0,1)|0;u=P;b=ht(s|0,b|0,1)|0;s=P;_=ht(t|0,_|0,1)|0;t=P;p=ht(f|0,p|0,1)|0;f=P;v=ct(g|0,m|0,33554432,0)|0;v=ut(v|0,P|0,26)|0;h=P;l=ct(v|0,h|0,c|0,l|0)|0;c=P;h=ht(v|0,h|0,26)|0;h=lt(g|0,m|0,h|0,P|0)|0;m=P;g=ct(w|0,o|0,33554432,0)|0;g=ut(g|0,P|0,26)|0;v=P;A=ct(g|0,v|0,i|0,A|0)|0;i=P;v=ht(g|0,v|0,26)|0;v=lt(w|0,o|0,v|0,P|0)|0;o=P;w=ct(l|0,c|0,16777216,0)|0;w=ut(w|0,P|0,25)|0;g=P;a=ct(w|0,g|0,S|0,a|0)|0;S=P;g=ht(w|0,g|0,25)|0;g=lt(l|0,c|0,g|0,P|0)|0;c=P;l=ct(A|0,i|0,16777216,0)|0;l=ut(l|0,P|0,25)|0;w=P;u=ct(l|0,w|0,E|0,u|0)|0;E=P;w=ht(l|0,w|0,25)|0;w=lt(A|0,i|0,w|0,P|0)|0;i=P;A=ct(a|0,S|0,33554432,0)|0;A=ut(A|0,P|0,26)|0;l=P;n=ct(A|0,l|0,y|0,n|0)|0;y=P;l=ht(A|0,l|0,26)|0;l=lt(a|0,S|0,l|0,P|0)|0;S=ct(u|0,E|0,33554432,0)|0;S=ut(S|0,P|0,26)|0;a=P;s=ct(S|0,a|0,b|0,s|0)|0;b=P;a=ht(S|0,a|0,26)|0;a=lt(u|0,E|0,a|0,P|0)|0;E=ct(n|0,y|0,16777216,0)|0;E=ut(E|0,P|0,25)|0;u=P;o=ct(E|0,u|0,v|0,o|0)|0;v=P;u=ht(E|0,u|0,25)|0;u=lt(n|0,y|0,u|0,P|0)|0;y=ct(s|0,b|0,16777216,0)|0;y=ut(y|0,P|0,25)|0;n=P;t=ct(y|0,n|0,_|0,t|0)|0;_=P;n=ht(y|0,n|0,25)|0;n=lt(s|0,b|0,n|0,P|0)|0;b=ct(o|0,v|0,33554432,0)|0;b=ut(b|0,P|0,26)|0;s=P;i=ct(w|0,i|0,b|0,s|0)|0;s=ht(b|0,s|0,26)|0;s=lt(o|0,v|0,s|0,P|0)|0;v=ct(t|0,_|0,33554432,0)|0;v=ut(v|0,P|0,26)|0;o=P;f=ct(v|0,o|0,p|0,f|0)|0;p=P;o=ht(v|0,o|0,26)|0;o=lt(t|0,_|0,o|0,P|0)|0;_=ct(f|0,p|0,16777216,0)|0;_=ut(_|0,P|0,25)|0;t=P;v=yt(_|0,t|0,19,0)|0;m=ct(v|0,P|0,h|0,m|0)|0;h=P;t=ht(_|0,t|0,25)|0;t=lt(f|0,p|0,t|0,P|0)|0;p=ct(m|0,h|0,33554432,0)|0;p=ut(p|0,P|0,26)|0;f=P;c=ct(g|0,c|0,p|0,f|0)|0;f=ht(p|0,f|0,26)|0;f=lt(m|0,h|0,f|0,P|0)|0;le(e|0,f|0,4,0);le(e+4|0,c|0,4,0);le(e+8|0,l|0,4,0);le(e+12|0,u|0,4,0);le(e+16|0,s|0,4,0);le(e+20|0,i|0,4,0);le(e+24|0,a|0,4,0);le(e+28|0,n|0,4,0);le(e+32|0,o|0,4,0);le(e+36|0,t|0,4,0);d=r;return}function Ue(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0;r=d;d=d+160|0;o=r+120|0;i=r+80|0;n=r+40|0;a=r;He(i,t+80|0);Fe(n,t,i);Fe(a,t+40|0,i);qe(e,a);qe(o,n);t=e+31|0;le(t>>0|0,(ue(t>>0|0,1,0,1)|0|0)^(ue(o>>0|0,1,0,1)|0|0)<<7|0,1,0);d=r;return}function He(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0;a=d;d=d+160|0;n=a+120|0;r=a+80|0;o=a+40|0;i=a;ze(n,t);ze(r,n);ze(r,r);Fe(r,t,r);Fe(n,n,r);ze(o,n);Fe(r,r,o);ze(o,r);ze(o,o);ze(o,o);ze(o,o);ze(o,o);Fe(r,o,r);ze(o,r);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);Fe(o,o,r);ze(i,o);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);ze(i,i);Fe(o,i,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);ze(o,o);Fe(r,o,r);ze(o,r);t=0;do{ze(o,o);t=t+1|0}while((t|0)!=49);Fe(o,o,r);ze(i,o);t=0;do{ze(i,i);t=t+1|0}while((t|0)!=99);Fe(o,i,o);ze(o,o);i=0;do{ze(o,o);i=i+1|0}while((i|0)!=49);Fe(r,o,r);ze(r,r);ze(r,r);ze(r,r);ze(r,r);ze(r,r);Fe(e,r,n);d=a;return}function qe(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,d=0,f=0;c=ue(t|0,4,0,0)|0|0;l=ue(t+4|0,4,0,0)|0|0;u=ue(t+8|0,4,0,0)|0|0;s=ue(t+12|0,4,0,0)|0|0;i=ue(t+16|0,4,0,0)|0|0;a=ue(t+20|0,4,0,0)|0|0;n=ue(t+24|0,4,0,0)|0|0;o=ue(t+28|0,4,0,0)|0|0;f=ue(t+32|0,4,0,0)|0|0;r=ue(t+36|0,4,0,0)|0|0;c=(((((((((((((r*19|0)+16777216>>25)+c>>26)+l>>25)+u>>26)+s>>25)+i>>26)+a>>25)+n>>26)+o>>25)+f>>26)+r>>25)*19|0)+c|0;d=c>>26;l=d+l|0;d=c-(d<<26)|0;c=l>>25;u=c+u|0;c=l-(c<<25)|0;l=u>>26;s=l+s|0;l=u-(l<<26)|0;u=s>>25;i=u+i|0;u=s-(u<<25)|0;s=i>>26;a=s+a|0;s=i-(s<<26)|0;i=a>>25;n=i+n|0;i=a-(i<<25)|0;a=n>>26;o=a+o|0;a=n-(a<<26)|0;n=o>>25;t=n+f|0;n=o-(n<<25)|0;o=t>>26;r=o+r|0;o=t-(o<<26)|0;t=r&33554431;le(e>>0|0,d|0,1,0);le(e+1>>0|0,d>>>8|0,1,0);le(e+2>>0|0,d>>>16|0,1,0);le(e+3>>0|0,c<<2|d>>>24|0,1,0);le(e+4>>0|0,c>>>6|0,1,0);le(e+5>>0|0,c>>>14|0,1,0);le(e+6>>0|0,l<<3|c>>>22|0,1,0);le(e+7>>0|0,l>>>5|0,1,0);le(e+8>>0|0,l>>>13|0,1,0);le(e+9>>0|0,u<<5|l>>>21|0,1,0);le(e+10>>0|0,u>>>3|0,1,0);le(e+11>>0|0,u>>>11|0,1,0);le(e+12>>0|0,s<<6|u>>>19|0,1,0);le(e+13>>0|0,s>>>2|0,1,0);le(e+14>>0|0,s>>>10|0,1,0);le(e+15>>0|0,s>>>18|0,1,0);le(e+16>>0|0,i|0,1,0);le(e+17>>0|0,i>>>8|0,1,0);le(e+18>>0|0,i>>>16|0,1,0);le(e+19>>0|0,a<<1|i>>>24|0,1,0);le(e+20>>0|0,a>>>7|0,1,0);le(e+21>>0|0,a>>>15|0,1,0);le(e+22>>0|0,n<<3|a>>>23|0,1,0);le(e+23>>0|0,n>>>5|0,1,0);le(e+24>>0|0,n>>>13|0,1,0);le(e+25>>0|0,o<<4|n>>>21|0,1,0);le(e+26>>0|0,o>>>4|0,1,0);le(e+27>>0|0,o>>>12|0,1,0);le(e+28>>0|0,o>>>20|t<<6|0,1,0);le(e+29>>0|0,r>>>2|0,1,0);le(e+30>>0|0,r>>>10|0,1,0);le(e+31>>0|0,t>>>18|0,1,0);return}function Ve(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0;r=d;d=d+592|0;i=r+400|0;o=r+520|0;a=r+240|0;s=r+120|0;n=r;u=0;do{g=ue(t+u>>0|0,1,0,0)|0|0;p=u<<1;le(o+p>>0|0,g&15|0,1,0);le(o+(p|1)>>0|0,(g&255)>>>4|0,1,0);u=u+1|0}while((u|0)!=32);t=0;u=0;do{p=o+u|0;g=(ue(p>>0|0,1,0,1)|0|0)+t|0;t=(g<<24)+134217728>>28;le(p>>0|0,g-(t<<4)|0,1,0);u=u+1|0}while((u|0)!=63);f=o+63|0;le(f>>0|0,(ue(f>>0|0,1,0,1)|0|0)+t|0,1,0);f=e+0|0;h=f+40|0;do{le(f|0,0|0,4,0);f=f+4|0}while((f|0)<(h|0));u=e+40|0;le(u|0,1|0,4,0);l=e+44|0;f=l+0|0;h=f+36|0;do{le(f|0,0|0,4,0);f=f+4|0}while((f|0)<(h|0));t=e+80|0;le(t|0,1|0,4,0);c=e+84|0;f=c+0|0;h=f+76|0;do{le(f|0,0|0,4,0);f=f+4|0}while((f|0)<(h|0));f=a+120|0;h=a+40|0;p=a+80|0;m=e+120|0;g=1;do{Ye(n,(g|0)/2|0,ue(o+g>>0|0,1,0,0)|0|0);Le(a,e,n);Fe(e,a,f);Fe(u,h,p);Fe(t,p,f);Fe(m,a,h);g=g+2|0}while((g|0)<64);A=ue(e+4|0,4,0,0)|0|0;E=ue(e+8|0,4,0,0)|0|0;y=ue(e+12|0,4,0,0)|0|0;w=ue(e+16|0,4,0,0)|0|0;b=ue(e+20|0,4,0,0)|0|0;v=ue(e+24|0,4,0,0)|0|0;_=ue(e+28|0,4,0,0)|0|0;g=ue(e+32|0,4,0,0)|0|0;S=ue(e+36|0,4,0,0)|0|0;le(i|0,ue(e|0,4,0,0)|0|0,4,0);le(i+4|0,A|0,4,0);le(i+8|0,E|0,4,0);le(i+12|0,y|0,4,0);le(i+16|0,w|0,4,0);le(i+20|0,b|0,4,0);le(i+24|0,v|0,4,0);le(i+28|0,_|0,4,0);le(i+32|0,g|0,4,0);le(i+36|0,S|0,4,0);S=ue(l|0,4,0,0)|0|0;g=ue(e+48|0,4,0,0)|0|0;l=ue(e+52|0,4,0,0)|0|0;_=ue(e+56|0,4,0,0)|0|0;v=ue(e+60|0,4,0,0)|0|0;b=ue(e+64|0,4,0,0)|0|0;w=ue(e+68|0,4,0,0)|0|0;y=ue(e+72|0,4,0,0)|0|0;E=ue(e+76|0,4,0,0)|0|0;le(i+40|0,ue(u|0,4,0,0)|0|0,4,0);le(i+44|0,S|0,4,0);le(i+48|0,g|0,4,0);le(i+52|0,l|0,4,0);le(i+56|0,_|0,4,0);le(i+60|0,v|0,4,0);le(i+64|0,b|0,4,0);le(i+68|0,w|0,4,0);le(i+72|0,y|0,4,0);le(i+76|0,E|0,4,0);E=ue(c|0,4,0,0)|0|0;y=ue(e+88|0,4,0,0)|0|0;w=ue(e+92|0,4,0,0)|0|0;b=ue(e+96|0,4,0,0)|0|0;v=ue(e+100|0,4,0,0)|0|0;_=ue(e+104|0,4,0,0)|0|0;l=ue(e+108|0,4,0,0)|0|0;c=ue(e+112|0,4,0,0)|0|0;g=ue(e+116|0,4,0,0)|0|0;le(i+80|0,ue(t|0,4,0,0)|0|0,4,0);le(i+84|0,E|0,4,0);le(i+88|0,y|0,4,0);le(i+92|0,w|0,4,0);le(i+96|0,b|0,4,0);le(i+100|0,v|0,4,0);le(i+104|0,_|0,4,0);le(i+108|0,l|0,4,0);le(i+112|0,c|0,4,0);le(i+116|0,g|0,4,0);De(a,i);Fe(s,a,f);g=s+40|0;Fe(g,h,p);i=s+80|0;Fe(i,p,f);De(a,s);Fe(s,a,f);Fe(g,h,p);Fe(i,p,f);De(a,s);Fe(s,a,f);Fe(g,h,p);Fe(i,p,f);De(a,s);Fe(e,a,f);Fe(u,h,p);Fe(t,p,f);Fe(m,a,h);i=0;do{Ye(n,(i|0)/2|0,ue(o+i>>0|0,1,0,0)|0|0);Le(a,e,n);Fe(e,a,f);Fe(u,h,p);Fe(t,p,f);Fe(m,a,h);i=i+2|0}while((i|0)<64);d=r;return}function Ye(e,t,r){e=e|0;t=t|0;r=r|0;var o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0;o=d;d=d+128|0;n=o;a=r<<24>>24;a=ft(a|0,((a|0)<0)<<31>>31|0,63)|0;u=r<<24>>24;u=u-((u&0-a)<<1)|0;le(e|0,1|0,4,0);r=e+4|0;s=r+0|0;i=s+36|0;do{le(s|0,0|0,4,0);s=s+4|0}while((s|0)<(i|0));l=e+40|0;le(l|0,1|0,4,0);c=e+44|0;s=c+0|0;i=s+76|0;do{le(s|0,0|0,4,0);s=s+4|0}while((s|0)<(i|0));_=u&255;g=((_^1)+-1|0)>>>31;nt(e,360+(t*960|0)|0,g);nt(l,400+(t*960|0)|0,g);u=e+80|0;nt(u,440+(t*960|0)|0,g);g=((_^2)+-1|0)>>>31;nt(e,480+(t*960|0)|0,g);nt(l,520+(t*960|0)|0,g);nt(u,560+(t*960|0)|0,g);g=((_^3)+-1|0)>>>31;nt(e,600+(t*960|0)|0,g);nt(l,640+(t*960|0)|0,g);nt(u,680+(t*960|0)|0,g);g=((_^4)+-1|0)>>>31;nt(e,720+(t*960|0)|0,g);nt(l,760+(t*960|0)|0,g);nt(u,800+(t*960|0)|0,g);g=((_^5)+-1|0)>>>31;nt(e,840+(t*960|0)|0,g);nt(l,880+(t*960|0)|0,g);nt(u,920+(t*960|0)|0,g);g=((_^6)+-1|0)>>>31;nt(e,960+(t*960|0)|0,g);nt(l,1e3+(t*960|0)|0,g);nt(u,1040+(t*960|0)|0,g);g=((_^7)+-1|0)>>>31;nt(e,1080+(t*960|0)|0,g);nt(l,1120+(t*960|0)|0,g);nt(u,1160+(t*960|0)|0,g);_=((_^8)+-1|0)>>>31;nt(e,1200+(t*960|0)|0,_);nt(l,1240+(t*960|0)|0,_);nt(u,1280+(t*960|0)|0,_);c=ue(c|0,4,0,0)|0|0;_=ue(e+48|0,4,0,0)|0|0;g=ue(e+52|0,4,0,0)|0|0;p=ue(e+56|0,4,0,0)|0|0;m=ue(e+60|0,4,0,0)|0|0;h=ue(e+64|0,4,0,0)|0|0;f=ue(e+68|0,4,0,0)|0|0;t=ue(e+72|0,4,0,0)|0|0;s=ue(e+76|0,4,0,0)|0|0;le(n|0,ue(l|0,4,0,0)|0|0,4,0);le(n+4|0,c|0,4,0);le(n+8|0,_|0,4,0);le(n+12|0,g|0,4,0);le(n+16|0,p|0,4,0);le(n+20|0,m|0,4,0);le(n+24|0,h|0,4,0);le(n+28|0,f|0,4,0);le(n+32|0,t|0,4,0);le(n+36|0,s|0,4,0);s=n+40|0;r=ue(r|0,4,0,0)|0|0;t=ue(e+8|0,4,0,0)|0|0;f=ue(e+12|0,4,0,0)|0|0;h=ue(e+16|0,4,0,0)|0|0;m=ue(e+20|0,4,0,0)|0|0;p=ue(e+24|0,4,0,0)|0|0;g=ue(e+28|0,4,0,0)|0|0;_=ue(e+32|0,4,0,0)|0|0;c=ue(e+36|0,4,0,0)|0|0;le(s|0,ue(e|0,4,0,0)|0|0,4,0);le(n+44|0,r|0,4,0);le(n+48|0,t|0,4,0);le(n+52|0,f|0,4,0);le(n+56|0,h|0,4,0);le(n+60|0,m|0,4,0);le(n+64|0,p|0,4,0);le(n+68|0,g|0,4,0);le(n+72|0,_|0,4,0);le(n+76|0,c|0,4,0);c=n+80|0;_=0-(ue(e+84|0,4,0,0)|0|0)|0;g=0-(ue(e+88|0,4,0,0)|0|0)|0;p=0-(ue(e+92|0,4,0,0)|0|0)|0;m=0-(ue(e+96|0,4,0,0)|0|0)|0;h=0-(ue(e+100|0,4,0,0)|0|0)|0;f=0-(ue(e+104|0,4,0,0)|0|0)|0;t=0-(ue(e+108|0,4,0,0)|0|0)|0;r=0-(ue(e+112|0,4,0,0)|0|0)|0;i=0-(ue(e+116|0,4,0,0)|0|0)|0;le(c|0,0-(ue(u|0,4,0,0)|0|0)|0,4,0);le(n+84|0,_|0,4,0);le(n+88|0,g|0,4,0);le(n+92|0,p|0,4,0);le(n+96|0,m|0,4,0);le(n+100|0,h|0,4,0);le(n+104|0,f|0,4,0);le(n+108|0,t|0,4,0);le(n+112|0,r|0,4,0);le(n+116|0,i|0,4,0);nt(e,n,a);nt(l,s,a);nt(u,c,a);d=o;return}function We(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0;r=d;d=d+160|0;o=r+120|0;i=r+80|0;n=r+40|0;a=r;He(i,t+80|0);Fe(n,t,i);Fe(a,t+40|0,i);qe(e,a);qe(o,n);t=e+31|0;le(t>>0|0,(ue(t>>0|0,1,0,1)|0|0)^(ue(o>>0|0,1,0,1)|0|0)<<7|0,1,0);d=r;return}function Ge(e){e=e|0;var t=0,r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0,de=0,fe=0,he=0,me=0,pe=0,ge=0,_e=0,ve=0,be=0,we=0,ye=0,Ee=0,Se=0,Ae=0,Me=0,ke=0,Fe=0,Oe=0,Re=0,Te=0,Ne=0,Pe=0,De=0,xe=0,Le=0,Ie=0,Ce=0,ze=0,Be=0,je=0,Ue=0,He=0,qe=0,Ve=0,Ye=0,We=0,Ge=0,Xe=0,Ke=0,Ze=0,$e=0,Je=0,Qe=0,et=0,tt=0,rt=0,ot=0,nt=0,at=0,it=0,st=0,dt=0;t=d;ne=e+1|0;re=e+2|0;Ce=ue(re>>0|0,1,0,0)|0|0;oe=ue(e>>0|0,1,0,1)|0|0;X=ht(ue(ne>>0|0,1,0,1)|0|0|0,0,8)|0;Se=P;Ce=Ce&255;W=ht(Ce|0,0,16)|0;ee=e+3|0;we=ht(ue(ee>>0|0,1,0,1)|0|0|0,0,8)|0;_e=P;Q=e+4|0;G=ht(ue(Q>>0|0,1,0,1)|0|0|0,0,16)|0;_e=_e|P;$=e+5|0;B=ue($>>0|0,1,0,1)|0|0;K=ht(B|0,0,24)|0;_e=ft(we|Ce|G|K|0,_e|P|0,5)|0;K=e+6|0;G=e+7|0;Ce=ue(G>>0|0,1,0,0)|0|0;we=ht(ue(K>>0|0,1,0,1)|0|0|0,0,8)|0;ze=P;Ce=Ce&255;Y=ht(Ce|0,0,16)|0;ze=ft(we|B|Y|0,ze|P|0,2)|0;Y=e+8|0;B=ht(ue(Y>>0|0,1,0,1)|0|0|0,0,8)|0;we=P;V=e+9|0;xe=ht(ue(V>>0|0,1,0,1)|0|0|0,0,16)|0;we=we|P;H=e+10|0;We=ue(H>>0|0,1,0,1)|0|0;j=ht(We|0,0,24)|0;we=ft(B|Ce|xe|j|0,we|P|0,7)|0;j=e+11|0;xe=ht(ue(j>>0|0,1,0,1)|0|0|0,0,8)|0;Ce=P;B=e+12|0;D=ht(ue(B>>0|0,1,0,1)|0|0|0,0,16)|0;Ce=Ce|P;C=e+13|0;w=ue(C>>0|0,1,0,1)|0|0;L=ht(w|0,0,24)|0;Ce=ft(xe|We|D|L|0,Ce|P|0,4)|0;L=e+14|0;D=e+15|0;We=ue(D>>0|0,1,0,0)|0|0;xe=ht(ue(L>>0|0,1,0,1)|0|0|0,0,8)|0;Ne=P;We=We&255;T=ht(We|0,0,16)|0;Ne=ft(xe|w|T|0,Ne|P|0,1)|0;T=e+16|0;w=ht(ue(T>>0|0,1,0,1)|0|0|0,0,8)|0;xe=P;R=e+17|0;E=ht(ue(R>>0|0,1,0,1)|0|0|0,0,16)|0;xe=xe|P;F=e+18|0;y=ue(F>>0|0,1,0,1)|0|0;M=ht(y|0,0,24)|0;xe=ft(w|We|E|M|0,xe|P|0,6)|0;M=e+19|0;E=e+20|0;We=ue(E>>0|0,1,0,0)|0|0;w=ht(ue(M>>0|0,1,0,1)|0|0|0,0,8)|0;Ge=P;We=ht(We&255|0,0,16)|0;Ge=ft(w|y|We|0,Ge|P|0,3)|0;We=P;y=e+21|0;w=e+22|0;v=e+23|0;Ve=ue(v>>0|0,1,0,0)|0|0;rt=ue(y>>0|0,1,0,1)|0|0;ot=ht(ue(w>>0|0,1,0,1)|0|0|0,0,8)|0;et=P;Ve=Ve&255;tt=ht(Ve|0,0,16)|0;g=e+24|0;ke=ht(ue(g>>0|0,1,0,1)|0|0|0,0,8)|0;de=P;p=e+25|0;u=ht(ue(p>>0|0,1,0,1)|0|0|0,0,16)|0;de=de|P;h=e+26|0;Le=ue(h>>0|0,1,0,1)|0|0;c=ht(Le|0,0,24)|0;de=ft(ke|Ve|u|c|0,de|P|0,5)|0;c=e+27|0;u=e+28|0;Ve=ue(u>>0|0,1,0,0)|0|0;ke=ht(ue(c>>0|0,1,0,1)|0|0|0,0,8)|0;Qe=P;Ve=Ve&255;i=ht(Ve|0,0,16)|0;Qe=ft(ke|Le|i|0,Qe|P|0,2)|0;i=e+29|0;Le=ht(ue(i>>0|0,1,0,1)|0|0|0,0,8)|0;ke=P;a=e+30|0;st=ht(ue(a>>0|0,1,0,1)|0|0|0,0,16)|0;ke=ke|P;r=e+31|0;b=ue(r>>0|0,1,0,1)|0|0;be=ht(b|0,0,24)|0;ke=ft(Le|Ve|st|be|0,ke|P|0,7)|0;be=ht(ue(e+32>>0|0,1,0,1)|0|0|0,0,8)|0;st=P;Ve=ht(ue(e+33>>0|0,1,0,1)|0|0|0,0,16)|0;st=st|P;Le=ue(e+34>>0|0,1,0,1)|0|0;Oe=ht(Le|0,0,24)|0;st=ft(be|b|Ve|Oe|0,st|P|0,4)|0;Oe=ue(e+36>>0|0,1,0,0)|0|0;Ve=ht(ue(e+35>>0|0,1,0,1)|0|0|0,0,8)|0;b=P;Oe=Oe&255;be=ht(Oe|0,0,16)|0;b=ft(Ve|Le|be|0,b|P|0,1)|0;be=ht(ue(e+37>>0|0,1,0,1)|0|0|0,0,8)|0;Le=P;Ve=ht(ue(e+38>>0|0,1,0,1)|0|0|0,0,16)|0;Le=Le|P;Ee=ue(e+39>>0|0,1,0,1)|0|0;ae=ht(Ee|0,0,24)|0;Le=ft(be|Oe|Ve|ae|0,Le|P|0,6)|0;ae=ue(e+41>>0|0,1,0,0)|0|0;Ve=ht(ue(e+40>>0|0,1,0,1)|0|0|0,0,8)|0;Oe=P;ae=ht(ae&255|0,0,16)|0;Oe=ft(Ve|Ee|ae|0,Oe|P|0,3)|0;ae=P;Ee=ue(e+44>>0|0,1,0,0)|0|0;Ve=ue(e+42>>0|0,1,0,1)|0|0;be=ht(ue(e+43>>0|0,1,0,1)|0|0|0,0,8)|0;N=P;Ee=Ee&255;he=ht(Ee|0,0,16)|0;Pe=ht(ue(e+45>>0|0,1,0,1)|0|0|0,0,8)|0;I=P;je=ht(ue(e+46>>0|0,1,0,1)|0|0|0,0,16)|0;I=I|P;dt=ue(e+47>>0|0,1,0,1)|0|0;z=ht(dt|0,0,24)|0;I=ft(Pe|Ee|je|z|0,I|P|0,5)|0;z=ue(e+49>>0|0,1,0,0)|0|0;je=ht(ue(e+48>>0|0,1,0,1)|0|0|0,0,8)|0;Ee=P;z=z&255;Pe=ht(z|0,0,16)|0;Ee=ft(je|dt|Pe|0,Ee|P|0,2)|0;Ee=Ee&2097151;Pe=ht(ue(e+50>>0|0,1,0,1)|0|0|0,0,8)|0;dt=P;je=ht(ue(e+51>>0|0,1,0,1)|0|0|0,0,16)|0;dt=dt|P;Ie=ue(e+52>>0|0,1,0,1)|0|0;f=ht(Ie|0,0,24)|0;dt=ft(Pe|z|je|f|0,dt|P|0,7)|0;dt=dt&2097151;f=ht(ue(e+53>>0|0,1,0,1)|0|0|0,0,8)|0;je=P;z=ht(ue(e+54>>0|0,1,0,1)|0|0|0,0,16)|0;je=je|P;Pe=ue(e+55>>0|0,1,0,1)|0|0;q=ht(Pe|0,0,24)|0;je=ft(f|Ie|z|q|0,je|P|0,4)|0;je=je&2097151;q=ue(e+57>>0|0,1,0,0)|0|0;z=ht(ue(e+56>>0|0,1,0,1)|0|0|0,0,8)|0;Ie=P;q=q&255;f=ht(q|0,0,16)|0;Ie=ft(z|Pe|f|0,Ie|P|0,1)|0;Ie=Ie&2097151;f=ht(ue(e+58>>0|0,1,0,1)|0|0|0,0,8)|0;Pe=P;z=ht(ue(e+59>>0|0,1,0,1)|0|0|0,0,16)|0;Pe=Pe|P;se=ue(e+60>>0|0,1,0,1)|0|0;ie=ht(se|0,0,24)|0;Pe=ft(f|q|z|ie|0,Pe|P|0,6)|0;Pe=Pe&2097151;ie=ht(ue(e+61>>0|0,1,0,1)|0|0|0,0,8)|0;z=P;q=ht(ue(e+62>>0|0,1,0,1)|0|0|0,0,16)|0;z=z|P;f=ht(ue(e+63>>0|0,1,0,1)|0|0|0,0,24)|0;z=ft(ie|se|q|f|0,z|P|0,3)|0;f=P;q=yt(z|0,f|0,666643,0)|0;se=P;ie=yt(z|0,f|0,470296,0)|0;x=P;_=yt(z|0,f|0,654183,0)|0;O=P;U=yt(z|0,f|0,-997805,-1)|0;Z=P;l=yt(z|0,f|0,136657,0)|0;n=P;f=yt(z|0,f|0,-683901,-1)|0;N=ct(f|0,P|0,be|Ve|he&2031616|0,N|0)|0;he=P;Ve=yt(Pe|0,0,666643,0)|0;be=P;f=yt(Pe|0,0,470296,0)|0;z=P;Ke=yt(Pe|0,0,654183,0)|0;qe=P;Fe=yt(Pe|0,0,-997805,-1)|0;J=P;Ue=yt(Pe|0,0,136657,0)|0;He=P;Pe=yt(Pe|0,0,-683901,-1)|0;A=P;o=yt(Ie|0,0,666643,0)|0;te=P;De=yt(Ie|0,0,470296,0)|0;ye=P;m=yt(Ie|0,0,654183,0)|0;Be=P;nt=yt(Ie|0,0,-997805,-1)|0;Xe=P;Ae=yt(Ie|0,0,136657,0)|0;me=P;Ie=yt(Ie|0,0,-683901,-1)|0;Le=ct(Ie|0,P|0,Le&2097151|0,0)|0;He=ct(Le|0,P|0,Ue|0,He|0)|0;Z=ct(He|0,P|0,U|0,Z|0)|0;U=P;He=yt(je|0,0,666643,0)|0;Ue=P;Le=yt(je|0,0,470296,0)|0;Ie=P;Ze=yt(je|0,0,654183,0)|0;ve=P;Re=yt(je|0,0,-997805,-1)|0;ce=P;it=yt(je|0,0,136657,0)|0;at=P;je=yt(je|0,0,-683901,-1)|0;s=P;k=yt(dt|0,0,666643,0)|0;S=P;fe=yt(dt|0,0,470296,0)|0;Ye=P;ge=yt(dt|0,0,654183,0)|0;pe=P;Je=yt(dt|0,0,-997805,-1)|0;$e=P;Me=yt(dt|0,0,136657,0)|0;Te=P;dt=yt(dt|0,0,-683901,-1)|0;st=ct(dt|0,P|0,st&2097151|0,0)|0;at=ct(st|0,P|0,it|0,at|0)|0;Xe=ct(at|0,P|0,nt|0,Xe|0)|0;qe=ct(Xe|0,P|0,Ke|0,qe|0)|0;x=ct(qe|0,P|0,ie|0,x|0)|0;ie=P;qe=yt(Ee|0,0,666643,0)|0;xe=ct(qe|0,P|0,xe&2097151|0,0)|0;qe=P;Ke=yt(Ee|0,0,470296,0)|0;Xe=P;nt=yt(Ee|0,0,654183,0)|0;et=ct(nt|0,P|0,ot|rt|tt&2031616|0,et|0)|0;Ye=ct(et|0,P|0,fe|0,Ye|0)|0;Ue=ct(Ye|0,P|0,He|0,Ue|0)|0;He=P;Ye=yt(Ee|0,0,-997805,-1)|0;fe=P;et=yt(Ee|0,0,136657,0)|0;Qe=ct(et|0,P|0,Qe&2097151|0,0)|0;$e=ct(Qe|0,P|0,Je|0,$e|0)|0;ve=ct($e|0,P|0,Ze|0,ve|0)|0;ye=ct(ve|0,P|0,De|0,ye|0)|0;be=ct(ye|0,P|0,Ve|0,be|0)|0;Ve=P;Ee=yt(Ee|0,0,-683901,-1)|0;ye=P;De=ct(xe|0,qe|0,1048576,0)|0;De=ft(De|0,P|0,21)|0;ve=P;We=ct(Ke|0,Xe|0,Ge|0,We|0)|0;We=ct(We|0,P|0,De|0,ve|0)|0;S=ct(We|0,P|0,k|0,S|0)|0;k=P;ve=ht(De|0,ve|0,21)|0;ve=lt(xe|0,qe|0,ve|0,P|0)|0;qe=P;xe=ct(Ue|0,He|0,1048576,0)|0;xe=ft(xe|0,P|0,21)|0;De=P;de=ct(Ye|0,fe|0,de&2097151|0,0)|0;pe=ct(de|0,P|0,ge|0,pe|0)|0;Ie=ct(pe|0,P|0,Le|0,Ie|0)|0;te=ct(Ie|0,P|0,o|0,te|0)|0;te=ct(te|0,P|0,xe|0,De|0)|0;o=P;De=ht(xe|0,De|0,21)|0;xe=P;Ie=ct(be|0,Ve|0,1048576,0)|0;Ie=ut(Ie|0,P|0,21)|0;Le=P;ke=ct(Ee|0,ye|0,ke&2097151|0,0)|0;Te=ct(ke|0,P|0,Me|0,Te|0)|0;ce=ct(Te|0,P|0,Re|0,ce|0)|0;Be=ct(ce|0,P|0,m|0,Be|0)|0;z=ct(Be|0,P|0,f|0,z|0)|0;se=ct(z|0,P|0,q|0,se|0)|0;se=ct(se|0,P|0,Ie|0,Le|0)|0;q=P;Le=ht(Ie|0,Le|0,21)|0;Ie=P;z=ct(x|0,ie|0,1048576,0)|0;z=ut(z|0,P|0,21)|0;f=P;b=ct(je|0,s|0,b&2097151|0,0)|0;me=ct(b|0,P|0,Ae|0,me|0)|0;J=ct(me|0,P|0,Fe|0,J|0)|0;O=ct(J|0,P|0,_|0,O|0)|0;O=ct(O|0,P|0,z|0,f|0)|0;_=P;f=ht(z|0,f|0,21)|0;f=lt(x|0,ie|0,f|0,P|0)|0;ie=P;x=ct(Z|0,U|0,1048576,0)|0;x=ut(x|0,P|0,21)|0;z=P;ae=ct(Pe|0,A|0,Oe|0,ae|0)|0;n=ct(ae|0,P|0,l|0,n|0)|0;n=ct(n|0,P|0,x|0,z|0)|0;l=P;z=ht(x|0,z|0,21)|0;z=lt(Z|0,U|0,z|0,P|0)|0;U=P;Z=ct(N|0,he|0,1048576,0)|0;Z=ut(Z|0,P|0,21)|0;x=P;I=ct(Z|0,x|0,I&2097151|0,0)|0;ae=P;x=ht(Z|0,x|0,21)|0;x=lt(N|0,he|0,x|0,P|0)|0;he=P;N=ct(S|0,k|0,1048576,0)|0;N=ft(N|0,P|0,21)|0;Z=P;Oe=ht(N|0,Z|0,21)|0;Oe=lt(S|0,k|0,Oe|0,P|0)|0;k=P;S=ct(te|0,o|0,1048576,0)|0;S=ut(S|0,P|0,21)|0;A=P;Pe=ht(S|0,A|0,21)|0;Pe=lt(te|0,o|0,Pe|0,P|0)|0;o=P;te=ct(se|0,q|0,1048576,0)|0;te=ut(te|0,P|0,21)|0;J=P;ie=ct(f|0,ie|0,te|0,J|0)|0;f=P;J=ht(te|0,J|0,21)|0;J=lt(se|0,q|0,J|0,P|0)|0;q=P;se=ct(O|0,_|0,1048576,0)|0;se=ut(se|0,P|0,21)|0;te=P;U=ct(se|0,te|0,z|0,U|0)|0;z=P;te=ht(se|0,te|0,21)|0;te=lt(O|0,_|0,te|0,P|0)|0;_=P;O=ct(n|0,l|0,1048576,0)|0;O=ut(O|0,P|0,21)|0;se=P;he=ct(O|0,se|0,x|0,he|0)|0;x=P;se=ht(O|0,se|0,21)|0;se=lt(n|0,l|0,se|0,P|0)|0;l=P;n=yt(I|0,ae|0,666643,0)|0;Ne=ct(n|0,P|0,Ne&2097151|0,0)|0;n=P;O=yt(I|0,ae|0,470296,0)|0;O=ct(ve|0,qe|0,O|0,P|0)|0;qe=P;ve=yt(I|0,ae|0,654183,0)|0;ve=ct(Oe|0,k|0,ve|0,P|0)|0;k=P;Oe=yt(I|0,ae|0,-997805,-1)|0;Fe=P;me=yt(I|0,ae|0,136657,0)|0;me=ct(Pe|0,o|0,me|0,P|0)|0;o=P;ae=yt(I|0,ae|0,-683901,-1)|0;I=P;A=ct(be|0,Ve|0,S|0,A|0)|0;Ie=lt(A|0,P|0,Le|0,Ie|0)|0;I=ct(Ie|0,P|0,ae|0,I|0)|0;ae=P;Ie=yt(he|0,x|0,666643,0)|0;Le=P;A=yt(he|0,x|0,470296,0)|0;S=P;Ve=yt(he|0,x|0,654183,0)|0;Ve=ct(O|0,qe|0,Ve|0,P|0)|0;qe=P;O=yt(he|0,x|0,-997805,-1)|0;O=ct(ve|0,k|0,O|0,P|0)|0;k=P;ve=yt(he|0,x|0,136657,0)|0;be=P;x=yt(he|0,x|0,-683901,-1)|0;x=ct(me|0,o|0,x|0,P|0)|0;o=P;me=yt(se|0,l|0,666643,0)|0;he=P;Pe=yt(se|0,l|0,470296,0)|0;Ae=P;b=yt(se|0,l|0,654183,0)|0;s=P;je=yt(se|0,l|0,-997805,-1)|0;Be=P;m=yt(se|0,l|0,136657,0)|0;ce=P;l=yt(se|0,l|0,-683901,-1)|0;se=P;Z=ct(Ue|0,He|0,N|0,Z|0)|0;xe=lt(Z|0,P|0,De|0,xe|0)|0;Fe=ct(xe|0,P|0,Oe|0,Fe|0)|0;be=ct(Fe|0,P|0,ve|0,be|0)|0;se=ct(be|0,P|0,l|0,se|0)|0;l=P;be=yt(U|0,z|0,666643,0)|0;ve=P;Fe=yt(U|0,z|0,470296,0)|0;Oe=P;xe=yt(U|0,z|0,654183,0)|0;De=P;Z=yt(U|0,z|0,-997805,-1)|0;N=P;He=yt(U|0,z|0,136657,0)|0;Ue=P;z=yt(U|0,z|0,-683901,-1)|0;U=P;Re=yt(te|0,_|0,666643,0)|0;Te=P;Me=yt(te|0,_|0,470296,0)|0;ke=P;ye=yt(te|0,_|0,654183,0)|0;Ee=P;pe=yt(te|0,_|0,-997805,-1)|0;ge=P;de=yt(te|0,_|0,136657,0)|0;fe=P;_=yt(te|0,_|0,-683901,-1)|0;te=P;Ue=ct(Ve|0,qe|0,He|0,Ue|0)|0;Be=ct(Ue|0,P|0,je|0,Be|0)|0;te=ct(Be|0,P|0,_|0,te|0)|0;_=P;Be=yt(ie|0,f|0,666643,0)|0;Se=ct(Be|0,P|0,X|oe|W&2031616|0,Se|0)|0;W=P;oe=yt(ie|0,f|0,470296,0)|0;X=P;Be=yt(ie|0,f|0,654183,0)|0;ze=ct(Be|0,P|0,ze&2097151|0,0)|0;ve=ct(ze|0,P|0,be|0,ve|0)|0;ke=ct(ve|0,P|0,Me|0,ke|0)|0;Me=P;ve=yt(ie|0,f|0,-997805,-1)|0;be=P;ze=yt(ie|0,f|0,136657,0)|0;Ce=ct(ze|0,P|0,Ce&2097151|0,0)|0;Le=ct(Ce|0,P|0,Ie|0,Le|0)|0;De=ct(Le|0,P|0,xe|0,De|0)|0;Ae=ct(De|0,P|0,Pe|0,Ae|0)|0;ge=ct(Ae|0,P|0,pe|0,ge|0)|0;pe=P;f=yt(ie|0,f|0,-683901,-1)|0;ie=P;Ae=ct(Se|0,W|0,1048576,0)|0;Ae=ut(Ae|0,P|0,21)|0;Pe=P;_e=ct(oe|0,X|0,_e&2097151|0,0)|0;Te=ct(_e|0,P|0,Re|0,Te|0)|0;Te=ct(Te|0,P|0,Ae|0,Pe|0)|0;Re=P;Pe=ht(Ae|0,Pe|0,21)|0;Pe=lt(Se|0,W|0,Pe|0,P|0)|0;W=P;Se=ct(ke|0,Me|0,1048576,0)|0;Se=ut(Se|0,P|0,21)|0;Ae=P;we=ct(ve|0,be|0,we&2097151|0,0)|0;Oe=ct(we|0,P|0,Fe|0,Oe|0)|0;he=ct(Oe|0,P|0,me|0,he|0)|0;Ee=ct(he|0,P|0,ye|0,Ee|0)|0;Ee=ct(Ee|0,P|0,Se|0,Ae|0)|0;ye=P;Ae=ht(Se|0,Ae|0,21)|0;Se=P;he=ct(ge|0,pe|0,1048576,0)|0;he=ut(he|0,P|0,21)|0;me=P;ie=ct(Ne|0,n|0,f|0,ie|0)|0;S=ct(ie|0,P|0,A|0,S|0)|0;N=ct(S|0,P|0,Z|0,N|0)|0;s=ct(N|0,P|0,b|0,s|0)|0;fe=ct(s|0,P|0,de|0,fe|0)|0;fe=ct(fe|0,P|0,he|0,me|0)|0;de=P;me=ht(he|0,me|0,21)|0;he=P;s=ct(te|0,_|0,1048576,0)|0;s=ut(s|0,P|0,21)|0;b=P;U=ct(O|0,k|0,z|0,U|0)|0;ce=ct(U|0,P|0,m|0,ce|0)|0;ce=ct(ce|0,P|0,s|0,b|0)|0;m=P;b=ht(s|0,b|0,21)|0;b=lt(te|0,_|0,b|0,P|0)|0;_=P;te=ct(se|0,l|0,1048576,0)|0;te=ut(te|0,P|0,21)|0;s=P;o=ct(x|0,o|0,te|0,s|0)|0;x=P;s=ht(te|0,s|0,21)|0;s=lt(se|0,l|0,s|0,P|0)|0;l=P;se=ct(I|0,ae|0,1048576,0)|0;se=ut(se|0,P|0,21)|0;te=P;q=ct(se|0,te|0,J|0,q|0)|0;J=P;te=ht(se|0,te|0,21)|0;te=lt(I|0,ae|0,te|0,P|0)|0;ae=P;I=ct(Te|0,Re|0,1048576,0)|0;I=ut(I|0,P|0,21)|0;se=P;U=ht(I|0,se|0,21)|0;z=P;k=ct(Ee|0,ye|0,1048576,0)|0;k=ut(k|0,P|0,21)|0;O=P;N=ht(k|0,O|0,21)|0;Z=P;S=ct(fe|0,de|0,1048576,0)|0;S=ut(S|0,P|0,21)|0;A=P;_=ct(b|0,_|0,S|0,A|0)|0;b=P;A=ht(S|0,A|0,21)|0;S=P;ie=ct(ce|0,m|0,1048576,0)|0;ie=ut(ie|0,P|0,21)|0;f=P;l=ct(s|0,l|0,ie|0,f|0)|0;s=P;f=ht(ie|0,f|0,21)|0;f=lt(ce|0,m|0,f|0,P|0)|0;m=P;ce=ct(o|0,x|0,1048576,0)|0;ce=ut(ce|0,P|0,21)|0;ie=P;ae=ct(te|0,ae|0,ce|0,ie|0)|0;te=P;ie=ht(ce|0,ie|0,21)|0;ie=lt(o|0,x|0,ie|0,P|0)|0;x=P;o=ct(q|0,J|0,1048576,0)|0;o=ut(o|0,P|0,21)|0;ce=P;n=ht(o|0,ce|0,21)|0;n=lt(q|0,J|0,n|0,P|0)|0;J=P;q=yt(o|0,ce|0,666643,0)|0;q=ct(Pe|0,W|0,q|0,P|0)|0;W=P;Pe=yt(o|0,ce|0,470296,0)|0;Ne=P;Oe=yt(o|0,ce|0,654183,0)|0;Fe=P;we=yt(o|0,ce|0,-997805,-1)|0;be=P;ve=yt(o|0,ce|0,136657,0)|0;_e=P;ce=yt(o|0,ce|0,-683901,-1)|0;o=P;X=ut(q|0,W|0,21)|0;oe=P;Re=ct(Pe|0,Ne|0,Te|0,Re|0)|0;z=lt(Re|0,P|0,U|0,z|0)|0;z=ct(z|0,P|0,X|0,oe|0)|0;U=P;oe=ht(X|0,oe|0,21)|0;oe=lt(q|0,W|0,oe|0,P|0)|0;W=P;q=ut(z|0,U|0,21)|0;X=P;Me=ct(Oe|0,Fe|0,ke|0,Me|0)|0;Se=lt(Me|0,P|0,Ae|0,Se|0)|0;se=ct(Se|0,P|0,I|0,se|0)|0;se=ct(se|0,P|0,q|0,X|0)|0;I=P;X=ht(q|0,X|0,21)|0;X=lt(z|0,U|0,X|0,P|0)|0;U=P;z=ut(se|0,I|0,21)|0;q=P;be=ct(Ee|0,ye|0,we|0,be|0)|0;Z=lt(be|0,P|0,N|0,Z|0)|0;Z=ct(Z|0,P|0,z|0,q|0)|0;N=P;q=ht(z|0,q|0,21)|0;q=lt(se|0,I|0,q|0,P|0)|0;I=P;se=ut(Z|0,N|0,21)|0;z=P;pe=ct(ve|0,_e|0,ge|0,pe|0)|0;he=lt(pe|0,P|0,me|0,he|0)|0;O=ct(he|0,P|0,k|0,O|0)|0;O=ct(O|0,P|0,se|0,z|0)|0;k=P;z=ht(se|0,z|0,21)|0;z=lt(Z|0,N|0,z|0,P|0)|0;N=P;Z=ut(O|0,k|0,21)|0;se=P;o=ct(fe|0,de|0,ce|0,o|0)|0;S=lt(o|0,P|0,A|0,S|0)|0;S=ct(S|0,P|0,Z|0,se|0)|0;A=P;se=ht(Z|0,se|0,21)|0;se=lt(O|0,k|0,se|0,P|0)|0;k=P;O=ut(S|0,A|0,21)|0;Z=P;b=ct(_|0,b|0,O|0,Z|0)|0;_=P;Z=ht(O|0,Z|0,21)|0;Z=lt(S|0,A|0,Z|0,P|0)|0;A=P;S=ut(b|0,_|0,21)|0;O=P;m=ct(S|0,O|0,f|0,m|0)|0;f=P;O=ht(S|0,O|0,21)|0;O=lt(b|0,_|0,O|0,P|0)|0;_=P;b=ut(m|0,f|0,21)|0;S=P;s=ct(l|0,s|0,b|0,S|0)|0;l=P;S=ht(b|0,S|0,21)|0;S=lt(m|0,f|0,S|0,P|0)|0;f=P;m=ut(s|0,l|0,21)|0;b=P;x=ct(m|0,b|0,ie|0,x|0)|0;ie=P;b=ht(m|0,b|0,21)|0;b=lt(s|0,l|0,b|0,P|0)|0;l=P;s=ut(x|0,ie|0,21)|0;m=P;te=ct(ae|0,te|0,s|0,m|0)|0;ae=P;m=ht(s|0,m|0,21)|0;m=lt(x|0,ie|0,m|0,P|0)|0;ie=P;x=ut(te|0,ae|0,21)|0;s=P;J=ct(x|0,s|0,n|0,J|0)|0;n=P;s=ht(x|0,s|0,21)|0;s=lt(te|0,ae|0,s|0,P|0)|0;ae=P;te=ut(J|0,n|0,21)|0;x=P;o=ht(te|0,x|0,21)|0;o=lt(J|0,n|0,o|0,P|0)|0;n=P;J=yt(te|0,x|0,666643,0)|0;W=ct(J|0,P|0,oe|0,W|0)|0;oe=P;J=yt(te|0,x|0,470296,0)|0;J=ct(X|0,U|0,J|0,P|0)|0;U=P;X=yt(te|0,x|0,654183,0)|0;X=ct(q|0,I|0,X|0,P|0)|0;I=P;q=yt(te|0,x|0,-997805,-1)|0;q=ct(z|0,N|0,q|0,P|0)|0;N=P;z=yt(te|0,x|0,136657,0)|0;z=ct(se|0,k|0,z|0,P|0)|0;k=P;x=yt(te|0,x|0,-683901,-1)|0;x=ct(Z|0,A|0,x|0,P|0)|0;A=P;Z=ut(W|0,oe|0,21)|0;te=P;U=ct(J|0,U|0,Z|0,te|0)|0;J=P;te=ht(Z|0,te|0,21)|0;te=lt(W|0,oe|0,te|0,P|0)|0;oe=P;W=ut(U|0,J|0,21)|0;Z=P;I=ct(X|0,I|0,W|0,Z|0)|0;X=P;Z=ht(W|0,Z|0,21)|0;Z=lt(U|0,J|0,Z|0,P|0)|0;J=P;U=ut(I|0,X|0,21)|0;W=P;N=ct(q|0,N|0,U|0,W|0)|0;q=P;W=ht(U|0,W|0,21)|0;W=lt(I|0,X|0,W|0,P|0)|0;X=P;I=ut(N|0,q|0,21)|0;U=P;k=ct(z|0,k|0,I|0,U|0)|0;z=P;U=ht(I|0,U|0,21)|0;U=lt(N|0,q|0,U|0,P|0)|0;q=P;N=ut(k|0,z|0,21)|0;I=P;A=ct(x|0,A|0,N|0,I|0)|0;x=P;I=ht(N|0,I|0,21)|0;I=lt(k|0,z|0,I|0,P|0)|0;z=P;k=ut(A|0,x|0,21)|0;N=P;_=ct(k|0,N|0,O|0,_|0)|0;O=P;N=ht(k|0,N|0,21)|0;N=lt(A|0,x|0,N|0,P|0)|0;x=P;A=ut(_|0,O|0,21)|0;k=P;f=ct(A|0,k|0,S|0,f|0)|0;S=P;k=ht(A|0,k|0,21)|0;k=lt(_|0,O|0,k|0,P|0)|0;O=P;_=ut(f|0,S|0,21)|0;A=P;l=ct(_|0,A|0,b|0,l|0)|0;b=P;A=ht(_|0,A|0,21)|0;A=lt(f|0,S|0,A|0,P|0)|0;S=P;f=ut(l|0,b|0,21)|0;_=P;ie=ct(f|0,_|0,m|0,ie|0)|0;m=P;_=ht(f|0,_|0,21)|0;_=lt(l|0,b|0,_|0,P|0)|0;b=P;l=ut(ie|0,m|0,21)|0;f=P;ae=ct(l|0,f|0,s|0,ae|0)|0;s=P;f=ht(l|0,f|0,21)|0;f=lt(ie|0,m|0,f|0,P|0)|0;m=P;ie=ut(ae|0,s|0,21)|0;l=P;n=ct(ie|0,l|0,o|0,n|0)|0;o=P;l=ht(ie|0,l|0,21)|0;l=lt(ae|0,s|0,l|0,P|0)|0;s=P;le(e>>0|0,te|0,1,0);e=ft(te|0,oe|0,8)|0;le(ne>>0|0,e|0,1,0);e=ft(te|0,oe|0,16)|0;oe=P;te=ht(Z|0,J|0,5)|0;P|oe;le(re>>0|0,te|e|0,1,0);e=ft(Z|0,J|0,3)|0;le(ee>>0|0,e|0,1,0);e=ft(Z|0,J|0,11)|0;le(Q>>0|0,e|0,1,0);e=ft(Z|0,J|0,19)|0;J=P;Z=ht(W|0,X|0,2)|0;P|J;le($>>0|0,Z|e|0,1,0);e=ft(W|0,X|0,6)|0;le(K>>0|0,e|0,1,0);e=ft(W|0,X|0,14)|0;X=P;W=ht(U|0,q|0,7)|0;P|X;le(G>>0|0,W|e|0,1,0);e=ft(U|0,q|0,1)|0;le(Y>>0|0,e|0,1,0);e=ft(U|0,q|0,9)|0;le(V>>0|0,e|0,1,0);e=ft(U|0,q|0,17)|0;q=P;U=ht(I|0,z|0,4)|0;P|q;le(H>>0|0,U|e|0,1,0);e=ft(I|0,z|0,4)|0;le(j>>0|0,e|0,1,0);e=ft(I|0,z|0,12)|0;le(B>>0|0,e|0,1,0);e=ft(I|0,z|0,20)|0;z=P;I=ht(N|0,x|0,1)|0;P|z;le(C>>0|0,I|e|0,1,0);e=ft(N|0,x|0,7)|0;le(L>>0|0,e|0,1,0);e=ft(N|0,x|0,15)|0;x=P;N=ht(k|0,O|0,6)|0;P|x;le(D>>0|0,N|e|0,1,0);e=ft(k|0,O|0,2)|0;le(T>>0|0,e|0,1,0);e=ft(k|0,O|0,10)|0;le(R>>0|0,e|0,1,0);e=ft(k|0,O|0,18)|0;O=P;k=ht(A|0,S|0,3)|0;P|O;le(F>>0|0,k|e|0,1,0);e=ft(A|0,S|0,5)|0;le(M>>0|0,e|0,1,0);e=ft(A|0,S|0,13)|0;le(E>>0|0,e|0,1,0);le(y>>0|0,_|0,1,0);e=ft(_|0,b|0,8)|0;le(w>>0|0,e|0,1,0);e=ft(_|0,b|0,16)|0;b=P;_=ht(f|0,m|0,5)|0;P|b;le(v>>0|0,_|e|0,1,0);e=ft(f|0,m|0,3)|0;le(g>>0|0,e|0,1,0);e=ft(f|0,m|0,11)|0;le(p>>0|0,e|0,1,0);e=ft(f|0,m|0,19)|0;m=P;f=ht(l|0,s|0,2)|0;P|m;le(h>>0|0,f|e|0,1,0);e=ft(l|0,s|0,6)|0;le(c>>0|0,e|0,1,0);s=ft(l|0,s|0,14)|0;l=P;e=ht(n|0,o|0,7)|0;l|P;le(u>>0|0,s|e|0,1,0);e=ft(n|0,o|0,1)|0;le(i>>0|0,e|0,1,0);e=ft(n|0,o|0,9)|0;le(a>>0|0,e|0,1,0);e=ft(n|0,o|0,17)|0;le(r>>0|0,e|0,1,0);d=t;return}function Xe(e,t,r){e=e|0;t=t|0;r=r|0;var o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,P=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0,de=0,fe=0,he=0,me=0,pe=0,ge=0,_e=0,ve=0,be=0,we=0,ye=0,Ee=0,Se=0,Ae=0,Me=0,Oe=0,Te=0,Ne=0,Pe=0,xe=0,Le=0,Ie=0,Ce=0,ze=0,Be=0,je=0,Ue=0,He=0,qe=0,Ve=0,Ye=0,We=0,Ge=0,Xe=0,Ke=0,Ze=0,$e=0,Je=0,Qe=0,et=0,tt=0,rt=0,ot=0,at=0,it=0,st=0,ut=0,lt=0,ct=0,dt=0,ht=0,mt=0,pt=0,gt=0,_t=0,vt=0,bt=0,wt=0,yt=0,Et=0,St=0,At=0,Mt=0,kt=0,Ft=0,Ot=0,Rt=0,Tt=0,Nt=0,Pt=0,Dt=0,xt=0,Lt=0,It=0;u=d;d=d+1984|0;a=u+1920|0;l=u+640|0;i=u+480|0;s=u+320|0;o=u+160|0;n=u;c=0;f=0;do{Ot=(ue(t+f>>0|0,1,0,1)|0|0)+c|0;Tt=Ot+8>>4;Rt=f<<1;le(a+Rt>>0|0,Ot-(Tt<<4)|0,1,0);c=Tt+8>>4;le(a+(Rt|1)>>0|0,Tt-(c<<4)|0,1,0);f=f+1|0}while((f|0)!=31);f=(ue(t+31>>0|0,1,0,1)|0|0)+c|0;p=f+8>>4;le(a+62>>0|0,f-(p<<4)|0,1,0);le(a+63>>0|0,p|0,1,0);Re(l,r);p=i+120|0;f=s+40|0;t=i+40|0;c=i+80|0;h=s+80|0;m=s+120|0;g=0;do{ke(i,r,l+(g*160|0)|0);Fe(s,i,p);Fe(f,t,c);Fe(h,c,p);Fe(m,i,t);g=g+1|0;Re(l+(g*160|0)|0,s)}while((g|0)!=7);y=e+0|0;w=y+40|0;do{le(y|0,0|0,4,0);y=y+4|0}while((y|0)<(w|0));E=e+40|0;le(E|0,1|0,4,0);y=e+44|0;w=y+36|0;do{le(y|0,0|0,4,0);y=y+4|0}while((y|0)<(w|0));S=e+80|0;le(S|0,1|0,4,0);y=e+84|0;w=y+36|0;do{le(y|0,0|0,4,0);y=y+4|0}while((y|0)<(w|0));Me=o+4|0;A=o+40|0;M=o+44|0;k=o+80|0;F=o+84|0;O=l+40|0;R=l+80|0;T=o+120|0;N=l+120|0;P=l+160|0;D=l+200|0;x=l+240|0;L=l+280|0;I=l+320|0;C=l+360|0;z=l+400|0;B=l+440|0;j=l+480|0;U=l+520|0;H=l+560|0;q=l+600|0;V=l+640|0;Y=l+680|0;W=l+720|0;G=l+760|0;X=l+800|0;K=l+840|0;Z=l+880|0;$=l+920|0;J=l+960|0;Q=l+1e3|0;ee=l+1040|0;te=l+1080|0;re=l+1120|0;oe=l+1160|0;ne=l+1200|0;ae=l+1240|0;ie=o+48|0;se=o+52|0;ce=o+56|0;de=o+60|0;fe=o+64|0;he=o+68|0;me=o+72|0;pe=o+76|0;Tt=n+4|0;_e=n+8|0;ve=n+12|0;be=n+16|0;we=n+20|0;ye=n+24|0;Ee=n+28|0;Se=n+32|0;Ae=n+36|0;ze=n+40|0;Oe=o+8|0;Te=o+12|0;Ne=o+16|0;Pe=o+20|0;xe=o+24|0;Le=o+28|0;Ie=o+32|0;Ce=o+36|0;Be=n+44|0;je=n+48|0;Ue=n+52|0;He=n+56|0;qe=n+60|0;Ve=n+64|0;Ye=n+68|0;We=n+72|0;Ge=n+76|0;rt=n+80|0;Xe=o+88|0;Ke=o+92|0;Ze=o+96|0;$e=o+100|0;Je=o+104|0;Qe=o+108|0;et=o+112|0;tt=o+116|0;ot=n+84|0;at=n+88|0;it=n+92|0;st=n+96|0;ut=n+100|0;lt=n+104|0;ct=n+108|0;dt=n+112|0;ht=n+116|0;St=n+120|0;mt=o+124|0;pt=o+128|0;gt=o+132|0;_t=o+136|0;vt=o+140|0;bt=o+144|0;wt=o+148|0;yt=o+152|0;Et=o+156|0;At=n+124|0;Mt=n+128|0;kt=n+132|0;Ft=n+136|0;Ot=n+140|0;Rt=n+144|0;b=n+148|0;_=n+152|0;g=n+156|0;r=63;while(1){ge=ue(a+r>>0|0,1,0,0)|0|0;v=ge<<24>>24;v=ft(v|0,((v|0)<0)<<31>>31|0,63)|0;ge=ge<<24>>24;ge=ge-((ge&0-v)<<1)|0;De(i,e);Fe(e,i,p);Fe(E,t,c);Fe(S,c,p);De(i,e);Fe(e,i,p);Fe(E,t,c);Fe(S,c,p);De(i,e);Fe(e,i,p);Fe(E,t,c);Fe(S,c,p);De(i,e);Fe(s,i,p);Fe(f,t,c);Fe(h,c,p);Fe(m,i,t);le(o|0,1|0,4,0);y=Me+0|0;w=y+36|0;do{le(y|0,0|0,4,0);y=y+4|0}while((y|0)<(w|0));le(A|0,1|0,4,0);y=M+0|0;w=y+36|0;do{le(y|0,0|0,4,0);y=y+4|0}while((y|0)<(w|0));le(k|0,1|0,4,0);y=F+0|0;w=y+76|0;do{le(y|0,0|0,4,0);y=y+4|0}while((y|0)<(w|0));ge=ge&255;y=((ge^1)+-1|0)>>>31;nt(o,l,y);nt(A,O,y);nt(k,R,y);nt(T,N,y);y=((ge^2)+-1|0)>>>31;nt(o,P,y);nt(A,D,y);nt(k,x,y);nt(T,L,y);y=((ge^3)+-1|0)>>>31;nt(o,I,y);nt(A,C,y);nt(k,z,y);nt(T,B,y);y=((ge^4)+-1|0)>>>31;nt(o,j,y);nt(A,U,y);nt(k,H,y);nt(T,q,y);y=((ge^5)+-1|0)>>>31;nt(o,V,y);nt(A,Y,y);nt(k,W,y);nt(T,G,y);y=((ge^6)+-1|0)>>>31;nt(o,X,y);nt(A,K,y);nt(k,Z,y);nt(T,$,y);y=((ge^7)+-1|0)>>>31;nt(o,J,y);nt(A,Q,y);nt(k,ee,y);nt(T,te,y);ge=((ge^8)+-1|0)>>>31;nt(o,re,ge);nt(A,oe,ge);nt(k,ne,ge);nt(T,ae,ge);ge=ue(M|0,4,0,0)|0|0;y=ue(ie|0,4,0,0)|0|0;w=ue(se|0,4,0,0)|0|0;Nt=ue(ce|0,4,0,0)|0|0;Pt=ue(de|0,4,0,0)|0|0;Dt=ue(fe|0,4,0,0)|0|0;xt=ue(he|0,4,0,0)|0|0;Lt=ue(me|0,4,0,0)|0|0;It=ue(pe|0,4,0,0)|0|0;le(n|0,ue(A|0,4,0,0)|0|0,4,0);le(Tt|0,ge|0,4,0);le(_e|0,y|0,4,0);le(ve|0,w|0,4,0);le(be|0,Nt|0,4,0);le(we|0,Pt|0,4,0);le(ye|0,Dt|0,4,0);le(Ee|0,xt|0,4,0);le(Se|0,Lt|0,4,0);le(Ae|0,It|0,4,0);It=ue(Me|0,4,0,0)|0|0;Lt=ue(Oe|0,4,0,0)|0|0;xt=ue(Te|0,4,0,0)|0|0;Dt=ue(Ne|0,4,0,0)|0|0;Pt=ue(Pe|0,4,0,0)|0|0;Nt=ue(xe|0,4,0,0)|0|0;w=ue(Le|0,4,0,0)|0|0;y=ue(Ie|0,4,0,0)|0|0;ge=ue(Ce|0,4,0,0)|0|0;le(ze|0,ue(o|0,4,0,0)|0|0,4,0);le(Be|0,It|0,4,0);le(je|0,Lt|0,4,0);le(Ue|0,xt|0,4,0);le(He|0,Dt|0,4,0);le(qe|0,Pt|0,4,0);le(Ve|0,Nt|0,4,0);le(Ye|0,w|0,4,0);le(We|0,y|0,4,0);le(Ge|0,ge|0,4,0);ge=ue(F|0,4,0,0)|0|0;y=ue(Xe|0,4,0,0)|0|0;w=ue(Ke|0,4,0,0)|0|0;Nt=ue(Ze|0,4,0,0)|0|0;Pt=ue($e|0,4,0,0)|0|0;Dt=ue(Je|0,4,0,0)|0|0;xt=ue(Qe|0,4,0,0)|0|0;Lt=ue(et|0,4,0,0)|0|0;It=ue(tt|0,4,0,0)|0|0;le(rt|0,ue(k|0,4,0,0)|0|0,4,0);le(ot|0,ge|0,4,0);le(at|0,y|0,4,0);le(it|0,w|0,4,0);le(st|0,Nt|0,4,0);le(ut|0,Pt|0,4,0);le(lt|0,Dt|0,4,0);le(ct|0,xt|0,4,0);le(dt|0,Lt|0,4,0);le(ht|0,It|0,4,0);It=0-(ue(mt|0,4,0,0)|0|0)|0;Lt=0-(ue(pt|0,4,0,0)|0|0)|0;xt=0-(ue(gt|0,4,0,0)|0|0)|0;Dt=0-(ue(_t|0,4,0,0)|0|0)|0;Pt=0-(ue(vt|0,4,0,0)|0|0)|0;Nt=0-(ue(bt|0,4,0,0)|0|0)|0;w=0-(ue(wt|0,4,0,0)|0|0)|0;y=0-(ue(yt|0,4,0,0)|0|0)|0;ge=0-(ue(Et|0,4,0,0)|0|0)|0;le(St|0,0-(ue(T|0,4,0,0)|0|0)|0,4,0);le(At|0,It|0,4,0);le(Mt|0,Lt|0,4,0);le(kt|0,xt|0,4,0);le(Ft|0,Dt|0,4,0);le(Ot|0,Pt|0,4,0);le(Rt|0,Nt|0,4,0);le(b|0,w|0,4,0);le(_|0,y|0,4,0);le(g|0,ge|0,4,0);nt(o,n,v);nt(A,ze,v);nt(k,rt,v);nt(T,St,v);ke(i,s,o);Fe(e,i,p);Fe(E,t,c);Fe(S,c,p);if((r|0)>0){r=r+-1|0}else{break}}d=u;return}function Ke(e,t,r,o,n){e=e|0;t=t|0;r=r|0;o=o|0;n=n|0;var a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0;s=d;d=d+2112|0;a=s+1856|0;i=s+1600|0;c=s+320|0;u=s+160|0;l=s;Pe(a,t);Pe(i,o);Oe(c,r);r=e+0|0;f=r+40|0;do{le(r|0,0|0,4,0);r=r+4|0}while((r|0)<(f|0));t=e+40|0;le(t|0,1|0,4,0);r=e+44|0;f=r+36|0;do{le(r|0,0|0,4,0);r=r+4|0}while((r|0)<(f|0));o=e+80|0;le(o|0,1|0,4,0);r=e+84|0;f=r+36|0;do{le(r|0,0|0,4,0);r=r+4|0}while((r|0)<(f|0));_=255;while(1){if((ue(a+_>>0|0,1,0,0)|0|0)!=0){break}r=_+-1|0;if((ue(i+_>>0|0,1,0,0)|0|0)!=0){break}if((_|0)>0){_=r}else{_=r;break}}if(!((_|0)>-1)){d=s;return}g=u+120|0;h=l+40|0;p=u+40|0;m=u+80|0;f=l+80|0;r=l+120|0;while(1){De(u,e);v=ue(a+_>>0|0,1,0,0)|0|0;if(!(v<<24>>24>0)){if(v<<24>>24<0){Fe(l,u,g);Fe(h,p,m);Fe(f,m,g);Fe(r,u,p);xe(u,l,c+(((v<<24>>24|0)/-2|0)*160|0)|0)}}else{Fe(l,u,g);Fe(h,p,m);Fe(f,m,g);Fe(r,u,p);ke(u,l,c+(((v<<24>>24|0)/2|0)*160|0)|0)}v=ue(i+_>>0|0,1,0,0)|0|0;if(!(v<<24>>24>0)){if(v<<24>>24<0){Fe(l,u,g);Fe(h,p,m);Fe(f,m,g);Fe(r,u,p);xe(u,l,n+(((v<<24>>24|0)/-2|0)*160|0)|0)}}else{Fe(l,u,g);Fe(h,p,m);Fe(f,m,g);Fe(r,u,p);ke(u,l,n+(((v<<24>>24|0)/2|0)*160|0)|0)}Fe(e,u,g);Fe(t,p,m);Fe(o,m,g);if((_|0)>0){_=_+-1|0}else{break}}d=s;return}function Ze(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0,s=0;r=d;d=d+128|0;o=r;De(e,t);t=e+120|0;Fe(o,e,t);s=o+40|0;i=e+40|0;n=e+80|0;Fe(s,i,n);a=o+80|0;Fe(a,n,t);De(e,o);Fe(o,e,t);Fe(s,i,n);Fe(a,n,t);De(e,o);d=r;return}function $e(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0,de=0,fe=0,he=0,me=0,pe=0,_e=0,ve=0,be=0,we=0,ye=0,Ee=0,Se=0,Ae=0,Me=0,ke=0,Oe=0,Re=0,Te=0,Ne=0,Pe=0,De=0,xe=0,Le=0,Ie=0,Ce=0,Ue=0,Ve=0,Ye=0,We=0,Ge=0;n=d;d=d+432|0;r=n+400|0;Pe=n+360|0;ke=n+320|0;Y=n+280|0;j=n+240|0;U=n+200|0;H=n+160|0;C=n+120|0;z=n+80|0;V=n+40|0;o=n;ie=ue(t>>0|0,1,0,1)|0|0;Oe=ht(ue(t+1>>0|0,1,0,1)|0|0|0,0,8)|0;Re=P;ve=ht(ue(t+2>>0|0,1,0,1)|0|0|0,0,16)|0;Re=Re|P;_e=ht(ue(t+3>>0|0,1,0,1)|0|0|0,0,24)|0;Re=Re|P;De=ue(t+6>>0|0,1,0,0)|0|0;Te=ue(t+4>>0|0,1,0,1)|0|0;be=ht(ue(t+5>>0|0,1,0,1)|0|0|0,0,8)|0;Ne=P;De=ht(De&255|0,0,16)|0;Ne=ht(be|Te|De|0,Ne|P|0,6)|0;De=P;Te=ue(t+9>>0|0,1,0,0)|0|0;be=ue(t+7>>0|0,1,0,1)|0|0;Me=ht(ue(t+8>>0|0,1,0,1)|0|0|0,0,8)|0;fe=P;Te=ht(Te&255|0,0,16)|0;fe=ht(Me|be|Te|0,fe|P|0,5)|0;Te=P;be=ue(t+12>>0|0,1,0,0)|0|0;Me=ue(t+10>>0|0,1,0,1)|0|0;ce=ht(ue(t+11>>0|0,1,0,1)|0|0|0,0,8)|0;ye=P;be=ht(be&255|0,0,16)|0;ye=ht(ce|Me|be|0,ye|P|0,3)|0;be=P;Me=ue(t+15>>0|0,1,0,0)|0|0;ce=ue(t+13>>0|0,1,0,1)|0|0;X=ht(ue(t+14>>0|0,1,0,1)|0|0|0,0,8)|0;Q=P;Me=ht(Me&255|0,0,16)|0;Q=ht(X|ce|Me|0,Q|P|0,2)|0;Me=P;ce=ue(t+16>>0|0,1,0,1)|0|0;X=ht(ue(t+17>>0|0,1,0,1)|0|0|0,0,8)|0;me=P;Se=ht(ue(t+18>>0|0,1,0,1)|0|0|0,0,16)|0;me=me|P;pe=ht(ue(t+19>>0|0,1,0,1)|0|0|0,0,24)|0;pe=X|ce|Se|pe;me=me|P;Se=ue(t+22>>0|0,1,0,0)|0|0;ce=ue(t+20>>0|0,1,0,1)|0|0;X=ht(ue(t+21>>0|0,1,0,1)|0|0|0,0,8)|0;K=P;Se=ht(Se&255|0,0,16)|0;K=ht(X|ce|Se|0,K|P|0,7)|0;Se=P;ce=ue(t+25>>0|0,1,0,0)|0|0;X=ue(t+23>>0|0,1,0,1)|0|0;$=ht(ue(t+24>>0|0,1,0,1)|0|0|0,0,8)|0;de=P;ce=ht(ce&255|0,0,16)|0;de=ht($|X|ce|0,de|P|0,5)|0;ce=P;X=ue(t+28>>0|0,1,0,0)|0|0;$=ue(t+26>>0|0,1,0,1)|0|0;Ee=ht(ue(t+27>>0|0,1,0,1)|0|0|0,0,8)|0;he=P;X=ht(X&255|0,0,16)|0;he=ht(Ee|$|X|0,he|P|0,4)|0;X=P;$=ue(t+31>>0|0,1,0,0)|0|0;Ee=ue(t+29>>0|0,1,0,1)|0|0;Z=ht(ue(t+30>>0|0,1,0,1)|0|0|0,0,8)|0;J=P;$=ht($&255|0,0,16)|0;J=ht(Z|Ee|$|0,J|P|0,2)|0;$=P;Ee=ct(J|0,$|0,16777216,0)|0;Ee=ft(Ee|0,P|0,25)|0;Z=P;W=yt(Ee|0,Z|0,19,0)|0;Re=ct(W|0,P|0,Oe|ie|ve|_e|0,Re|0)|0;_e=P;Z=ht(Ee|0,Z|0,25)|0;Ee=P;ve=ct(Ne|0,De|0,16777216,0)|0;ve=ft(ve|0,P|0,25)|0;ie=P;Te=ct(fe|0,Te|0,ve|0,ie|0)|0;fe=P;ie=ht(ve|0,ie|0,25)|0;ie=lt(Ne|0,De|0,ie|0,P|0)|0;De=P;Ne=ct(ye|0,be|0,16777216,0)|0;Ne=ft(Ne|0,P|0,25)|0;ve=P;Me=ct(Q|0,Me|0,Ne|0,ve|0)|0;Q=P;ve=ht(Ne|0,ve|0,25)|0;Ne=P;Oe=ct(pe|0,me|0,16777216,0)|0;Oe=ft(Oe|0,P|0,25)|0;W=P;Se=ct(K|0,Se|0,Oe|0,W|0)|0;K=P;W=ht(Oe|0,W|0,25)|0;Oe=P;Ae=ct(de|0,ce|0,16777216,0)|0;Ae=ft(Ae|0,P|0,25)|0;ee=P;X=ct(he|0,X|0,Ae|0,ee|0)|0;he=P;ee=ht(Ae|0,ee|0,25)|0;Ae=P;se=ct(Re|0,_e|0,33554432,0)|0;se=ut(se|0,P|0,26)|0;ae=P;De=ct(ie|0,De|0,se|0,ae|0)|0;ae=ht(se|0,ae|0,26)|0;ae=lt(Re|0,_e|0,ae|0,P|0)|0;_e=ct(Te|0,fe|0,33554432,0)|0;_e=ut(_e|0,P|0,26)|0;Re=P;be=ct(_e|0,Re|0,ye|0,be|0)|0;Ne=lt(be|0,P|0,ve|0,Ne|0)|0;Re=ht(_e|0,Re|0,26)|0;Re=lt(Te|0,fe|0,Re|0,P|0)|0;fe=ct(Me|0,Q|0,33554432,0)|0;fe=ut(fe|0,P|0,26)|0;Te=P;me=ct(fe|0,Te|0,pe|0,me|0)|0;Oe=lt(me|0,P|0,W|0,Oe|0)|0;Te=ht(fe|0,Te|0,26)|0;Te=lt(Me|0,Q|0,Te|0,P|0)|0;Q=ct(Se|0,K|0,33554432,0)|0;Q=ut(Q|0,P|0,26)|0;Me=P;ce=ct(Q|0,Me|0,de|0,ce|0)|0;Ae=lt(ce|0,P|0,ee|0,Ae|0)|0;Me=ht(Q|0,Me|0,26)|0;Me=lt(Se|0,K|0,Me|0,P|0)|0;K=ct(X|0,he|0,33554432,0)|0;K=ut(K|0,P|0,26)|0;Se=P;$=ct(K|0,Se|0,J|0,$|0)|0;Ee=lt($|0,P|0,Z|0,Ee|0)|0;Se=ht(K|0,Se|0,26)|0;Se=lt(X|0,he|0,Se|0,P|0)|0;le(Pe|0,ae|0,4,0);le(Pe+4|0,De|0,4,0);le(Pe+8|0,Re|0,4,0);le(Pe+12|0,Ne|0,4,0);le(Pe+16|0,Te|0,4,0);le(Pe+20|0,Oe|0,4,0);le(Pe+24|0,Me|0,4,0);le(Pe+28|0,Ae|0,4,0);le(Pe+32|0,Se|0,4,0);le(Pe+36|0,Ee|0,4,0);je(ke,Pe);Ee=Y+4|0;le(Ee+0|0,0|0,4,0);le(Ee+4|0,0|0,4,0);le(Ee+8|0,0|0,4,0);le(Ee+12|0,0|0,4,0);le(Ee+16|0,0|0,4,0);le(Ee+20|0,0|0,4,0);le(Ee+24|0,0|0,4,0);le(Ee+28|0,0|0,4,0);Se=ue(ke+4|0,4,0,0)|0|0;Ae=ue(ke+8|0,4,0,0)|0|0;Me=ue(ke+12|0,4,0,0)|0|0;Oe=ue(ke+16|0,4,0,0)|0|0;Te=ue(ke+20|0,4,0,0)|0|0;Ne=ue(ke+24|0,4,0,0)|0|0;Re=ue(ke+28|0,4,0,0)|0|0;De=ue(ke+32|0,4,0,0)|0|0;ae=ue(ke+36|0,4,0,0)|0|0;he=Y+8|0;X=Y+12|0;K=Y+16|0;Z=Y+20|0;$=Y+24|0;J=Y+28|0;Q=Y+32|0;ee=Y+36|0;le(Y|0,(ue(ke|0,4,0,0)|0|0)+1|0,4,0);le(Ee|0,Se|0,4,0);le(he|0,Ae|0,4,0);le(X|0,Me|0,4,0);le(K|0,Oe|0,4,0);le(Z|0,Te|0,4,0);le($|0,Ne|0,4,0);le(J|0,Re|0,4,0);le(Q|0,De|0,4,0);le(ee|0,ae|0,4,0);ze(j,Y);Fe(U,32040,ke);ae=j+4|0;De=j+8|0;Re=j+12|0;Ne=j+16|0;Te=j+20|0;Oe=j+24|0;Me=j+28|0;Ae=j+32|0;Se=j+36|0;ce=U+4|0;de=U+8|0;fe=U+12|0;W=U+16|0;me=U+20|0;pe=U+24|0;_e=U+28|0;ve=U+32|0;be=U+36|0;ye=(ue(ce|0,4,0,0)|0|0)+(ue(ae|0,4,0,0)|0|0)|0;se=(ue(de|0,4,0,0)|0|0)+(ue(De|0,4,0,0)|0|0)|0;ie=(ue(fe|0,4,0,0)|0|0)+(ue(Re|0,4,0,0)|0|0)|0;ne=(ue(W|0,4,0,0)|0|0)+(ue(Ne|0,4,0,0)|0|0)|0;oe=(ue(me|0,4,0,0)|0|0)+(ue(Te|0,4,0,0)|0|0)|0;re=(ue(pe|0,4,0,0)|0|0)+(ue(Oe|0,4,0,0)|0|0)|0;te=(ue(_e|0,4,0,0)|0|0)+(ue(Me|0,4,0,0)|0|0)|0;G=(ue(ve|0,4,0,0)|0|0)+(ue(Ae|0,4,0,0)|0|0)|0;b=(ue(be|0,4,0,0)|0|0)+(ue(Se|0,4,0,0)|0|0)|0;le(j|0,(ue(U|0,4,0,0)|0|0)+(ue(j|0,4,0,0)|0|0)|0,4,0);le(ae|0,ye|0,4,0);le(De|0,se|0,4,0);le(Re|0,ie|0,4,0);le(Ne|0,ne|0,4,0);le(Te|0,oe|0,4,0);le(Oe|0,re|0,4,0);le(Me|0,te|0,4,0);le(Ae|0,G|0,4,0);le(Se|0,b|0,4,0);Be(e,Y,j);ze(U,e);Fe(j,U,j);b=(ue(Ee|0,4,0,0)|0|0)-(ue(ae|0,4,0,0)|0|0)|0;G=(ue(he|0,4,0,0)|0|0)-(ue(De|0,4,0,0)|0|0)|0;te=(ue(X|0,4,0,0)|0|0)-(ue(Re|0,4,0,0)|0|0)|0;re=(ue(K|0,4,0,0)|0|0)-(ue(Ne|0,4,0,0)|0|0)|0;oe=(ue(Z|0,4,0,0)|0|0)-(ue(Te|0,4,0,0)|0|0)|0;ne=(ue($|0,4,0,0)|0|0)-(ue(Oe|0,4,0,0)|0|0)|0;ie=(ue(J|0,4,0,0)|0|0)-(ue(Me|0,4,0,0)|0|0)|0;se=(ue(Q|0,4,0,0)|0|0)-(ue(Ae|0,4,0,0)|0|0)|0;ye=(ue(ee|0,4,0,0)|0|0)-(ue(Se|0,4,0,0)|0|0)|0;le(U|0,(ue(Y|0,4,0,0)|0|0)-(ue(j|0,4,0,0)|0|0)|0,4,0);le(ce|0,b|0,4,0);le(de|0,G|0,4,0);le(fe|0,te|0,4,0);le(W|0,re|0,4,0);le(me|0,oe|0,4,0);le(pe|0,ne|0,4,0);le(_e|0,ie|0,4,0);le(ve|0,se|0,4,0);le(be|0,ye|0,4,0);ye=ue(32084|0,4,0,0)|0|0;se=ue(32088|0,4,0,0)|0|0;ie=ue(32092|0,4,0,0)|0|0;ne=ue(32096|0,4,0,0)|0|0;oe=ue(32100|0,4,0,0)|0|0;re=ue(32104|0,4,0,0)|0|0;te=ue(32108|0,4,0,0)|0|0;G=ue(32112|0,4,0,0)|0|0;b=ue(32116|0,4,0,0)|0|0;le(H|0,ue(8020*4|0,4,0,0)|0|0,4,0);we=H+4|0;le(we|0,ye|0,4,0);ye=H+8|0;le(ye|0,se|0,4,0);se=H+12|0;le(se|0,ie|0,4,0);ie=H+16|0;le(ie|0,ne|0,4,0);ne=H+20|0;le(ne|0,oe|0,4,0);oe=H+24|0;le(oe|0,re|0,4,0);re=H+28|0;le(re|0,te|0,4,0);te=H+32|0;le(te|0,G|0,4,0);G=H+36|0;le(G|0,b|0,4,0);qe(r,U);b=r+1|0;L=r+2|0;a=r+3|0;w=r+4|0;i=r+5|0;s=r+6|0;u=r+7|0;l=r+8|0;c=r+9|0;f=r+10|0;h=r+11|0;m=r+12|0;p=r+13|0;g=r+14|0;_=r+15|0;v=r+16|0;I=r+17|0;t=r+18|0;y=r+19|0;E=r+20|0;S=r+21|0;A=r+22|0;M=r+23|0;k=r+24|0;F=r+25|0;O=r+26|0;R=r+27|0;T=r+28|0;N=r+29|0;D=r+30|0;x=r+31|0;do{if(!((((ue(b>>0|0,1,0,0)|0|(ue(r>>0|0,1,0,0)|0)|(ue(L>>0|0,1,0,0)|0)|(ue(a>>0|0,1,0,0)|0)|(ue(w>>0|0,1,0,0)|0)|(ue(i>>0|0,1,0,0)|0)|(ue(s>>0|0,1,0,0)|0)|(ue(u>>0|0,1,0,0)|0)|(ue(l>>0|0,1,0,0)|0)|(ue(c>>0|0,1,0,0)|0)|(ue(f>>0|0,1,0,0)|0)|(ue(h>>0|0,1,0,0)|0)|(ue(m>>0|0,1,0,0)|0)|(ue(p>>0|0,1,0,0)|0)|(ue(g>>0|0,1,0,0)|0)|(ue(_>>0|0,1,0,0)|0)|(ue(v>>0|0,1,0,0)|0)|(ue(I>>0|0,1,0,0)|0)|(ue(t>>0|0,1,0,0)|0)|(ue(y>>0|0,1,0,0)|0)|(ue(E>>0|0,1,0,0)|0)|(ue(S>>0|0,1,0,0)|0)|(ue(A>>0|0,1,0,0)|0)|(ue(M>>0|0,1,0,0)|0)|(ue(k>>0|0,1,0,0)|0)|(ue(F>>0|0,1,0,0)|0)|(ue(O>>0|0,1,0,0)|0)|(ue(R>>0|0,1,0,0)|0)|(ue(T>>0|0,1,0,0)|0)|(ue(N>>0|0,1,0,0)|0)|(ue(D>>0|0,1,0,0)|0)|(ue(x>>0|0,1,0,0)|0))&255)+-1&-256|0)==-256)){Ge=(ue(ae|0,4,0,0)|0|0)+(ue(Ee|0,4,0,0)|0|0)|0;We=(ue(De|0,4,0,0)|0|0)+(ue(he|0,4,0,0)|0|0)|0;Ye=(ue(Re|0,4,0,0)|0|0)+(ue(X|0,4,0,0)|0|0)|0;Ve=(ue(Ne|0,4,0,0)|0|0)+(ue(K|0,4,0,0)|0|0)|0;Ue=(ue(Te|0,4,0,0)|0|0)+(ue(Z|0,4,0,0)|0|0)|0;Ce=(ue(Oe|0,4,0,0)|0|0)+(ue($|0,4,0,0)|0|0)|0;Ie=(ue(Me|0,4,0,0)|0|0)+(ue(J|0,4,0,0)|0|0)|0;Le=(ue(Ae|0,4,0,0)|0|0)+(ue(Q|0,4,0,0)|0|0)|0;xe=(ue(Se|0,4,0,0)|0|0)+(ue(ee|0,4,0,0)|0|0)|0;le(U|0,(ue(j|0,4,0,0)|0|0)+(ue(Y|0,4,0,0)|0|0)|0,4,0);le(ce|0,Ge|0,4,0);le(de|0,We|0,4,0);le(fe|0,Ye|0,4,0);le(W|0,Ve|0,4,0);le(me|0,Ue|0,4,0);le(pe|0,Ce|0,4,0);le(_e|0,Ie|0,4,0);le(ve|0,Le|0,4,0);le(be|0,xe|0,4,0);qe(r,U);if((((ue(b>>0|0,1,0,0)|0|(ue(r>>0|0,1,0,0)|0)|(ue(L>>0|0,1,0,0)|0)|(ue(a>>0|0,1,0,0)|0)|(ue(w>>0|0,1,0,0)|0)|(ue(i>>0|0,1,0,0)|0)|(ue(s>>0|0,1,0,0)|0)|(ue(u>>0|0,1,0,0)|0)|(ue(l>>0|0,1,0,0)|0)|(ue(c>>0|0,1,0,0)|0)|(ue(f>>0|0,1,0,0)|0)|(ue(h>>0|0,1,0,0)|0)|(ue(m>>0|0,1,0,0)|0)|(ue(p>>0|0,1,0,0)|0)|(ue(g>>0|0,1,0,0)|0)|(ue(_>>0|0,1,0,0)|0)|(ue(v>>0|0,1,0,0)|0)|(ue(I>>0|0,1,0,0)|0)|(ue(t>>0|0,1,0,0)|0)|(ue(y>>0|0,1,0,0)|0)|(ue(E>>0|0,1,0,0)|0)|(ue(S>>0|0,1,0,0)|0)|(ue(A>>0|0,1,0,0)|0)|(ue(M>>0|0,1,0,0)|0)|(ue(k>>0|0,1,0,0)|0)|(ue(F>>0|0,1,0,0)|0)|(ue(O>>0|0,1,0,0)|0)|(ue(R>>0|0,1,0,0)|0)|(ue(T>>0|0,1,0,0)|0)|(ue(N>>0|0,1,0,0)|0)|(ue(D>>0|0,1,0,0)|0)|(ue(x>>0|0,1,0,0)|0))&255)+-1&-256|0)==-256){Fe(e,e,32120);B=5;break}Fe(j,j,280);ke=ue(De|0,4,0,0)|0|0;Re=ue(Re|0,4,0,0)|0|0;Ne=ue(Ne|0,4,0,0)|0|0;Te=ue(Te|0,4,0,0)|0|0;Oe=ue(Oe|0,4,0,0)|0|0;Me=ue(Me|0,4,0,0)|0|0;Ae=ue(Ae|0,4,0,0)|0|0;Se=ue(Se|0,4,0,0)|0|0;xe=(ue(Ee|0,4,0,0)|0|0)-(ue(ae|0,4,0,0)|0|0)|0;Le=(ue(he|0,4,0,0)|0|0)-ke|0;Ie=(ue(X|0,4,0,0)|0|0)-Re|0;Ce=(ue(K|0,4,0,0)|0|0)-Ne|0;Ue=(ue(Z|0,4,0,0)|0|0)-Te|0;Ve=(ue($|0,4,0,0)|0|0)-Oe|0;Ye=(ue(J|0,4,0,0)|0|0)-Me|0;We=(ue(Q|0,4,0,0)|0|0)-Ae|0;Ge=(ue(ee|0,4,0,0)|0|0)-Se|0;le(U|0,(ue(Y|0,4,0,0)|0|0)-(ue(j|0,4,0,0)|0|0)|0,4,0);le(ce|0,xe|0,4,0);le(de|0,Le|0,4,0);le(fe|0,Ie|0,4,0);le(W|0,Ce|0,4,0);le(me|0,Ue|0,4,0);le(pe|0,Ve|0,4,0);le(_e|0,Ye|0,4,0);le(ve|0,We|0,4,0);le(be|0,Ge|0,4,0);qe(r,U);if((((ue(b>>0|0,1,0,0)|0|(ue(r>>0|0,1,0,0)|0)|(ue(L>>0|0,1,0,0)|0)|(ue(a>>0|0,1,0,0)|0)|(ue(w>>0|0,1,0,0)|0)|(ue(i>>0|0,1,0,0)|0)|(ue(s>>0|0,1,0,0)|0)|(ue(u>>0|0,1,0,0)|0)|(ue(l>>0|0,1,0,0)|0)|(ue(c>>0|0,1,0,0)|0)|(ue(f>>0|0,1,0,0)|0)|(ue(h>>0|0,1,0,0)|0)|(ue(m>>0|0,1,0,0)|0)|(ue(p>>0|0,1,0,0)|0)|(ue(g>>0|0,1,0,0)|0)|(ue(_>>0|0,1,0,0)|0)|(ue(v>>0|0,1,0,0)|0)|(ue(I>>0|0,1,0,0)|0)|(ue(t>>0|0,1,0,0)|0)|(ue(y>>0|0,1,0,0)|0)|(ue(E>>0|0,1,0,0)|0)|(ue(S>>0|0,1,0,0)|0)|(ue(A>>0|0,1,0,0)|0)|(ue(M>>0|0,1,0,0)|0)|(ue(k>>0|0,1,0,0)|0)|(ue(F>>0|0,1,0,0)|0)|(ue(O>>0|0,1,0,0)|0)|(ue(R>>0|0,1,0,0)|0)|(ue(T>>0|0,1,0,0)|0)|(ue(N>>0|0,1,0,0)|0)|(ue(D>>0|0,1,0,0)|0)|(ue(x>>0|0,1,0,0)|0))&255)+-1&-256|0)==-256){Fe(e,e,32240);q=1;break}xe=(ue(ae|0,4,0,0)|0|0)+(ue(Ee|0,4,0,0)|0|0)|0;Le=ke+(ue(he|0,4,0,0)|0|0)|0;Ie=Re+(ue(X|0,4,0,0)|0|0)|0;Ce=Ne+(ue(K|0,4,0,0)|0|0)|0;Ue=Te+(ue(Z|0,4,0,0)|0|0)|0;Ve=Oe+(ue($|0,4,0,0)|0|0)|0;Ye=Me+(ue(J|0,4,0,0)|0|0)|0;We=Ae+(ue(Q|0,4,0,0)|0|0)|0;Ge=Se+(ue(ee|0,4,0,0)|0|0)|0;le(U|0,(ue(j|0,4,0,0)|0|0)+(ue(Y|0,4,0,0)|0|0)|0,4,0);le(ce|0,xe|0,4,0);le(de|0,Le|0,4,0);le(fe|0,Ie|0,4,0);le(W|0,Ce|0,4,0);le(me|0,Ue|0,4,0);le(pe|0,Ve|0,4,0);le(_e|0,Ye|0,4,0);le(ve|0,We|0,4,0);le(be|0,Ge|0,4,0);qe(r,U);if((((ue(b>>0|0,1,0,0)|0|(ue(r>>0|0,1,0,0)|0)|(ue(L>>0|0,1,0,0)|0)|(ue(a>>0|0,1,0,0)|0)|(ue(w>>0|0,1,0,0)|0)|(ue(i>>0|0,1,0,0)|0)|(ue(s>>0|0,1,0,0)|0)|(ue(u>>0|0,1,0,0)|0)|(ue(l>>0|0,1,0,0)|0)|(ue(c>>0|0,1,0,0)|0)|(ue(f>>0|0,1,0,0)|0)|(ue(h>>0|0,1,0,0)|0)|(ue(m>>0|0,1,0,0)|0)|(ue(p>>0|0,1,0,0)|0)|(ue(g>>0|0,1,0,0)|0)|(ue(_>>0|0,1,0,0)|0)|(ue(v>>0|0,1,0,0)|0)|(ue(I>>0|0,1,0,0)|0)|(ue(t>>0|0,1,0,0)|0)|(ue(y>>0|0,1,0,0)|0)|(ue(E>>0|0,1,0,0)|0)|(ue(S>>0|0,1,0,0)|0)|(ue(A>>0|0,1,0,0)|0)|(ue(M>>0|0,1,0,0)|0)|(ue(k>>0|0,1,0,0)|0)|(ue(F>>0|0,1,0,0)|0)|(ue(O>>0|0,1,0,0)|0)|(ue(R>>0|0,1,0,0)|0)|(ue(T>>0|0,1,0,0)|0)|(ue(N>>0|0,1,0,0)|0)|(ue(D>>0|0,1,0,0)|0)|(ue(x>>0|0,1,0,0)|0))&255)+-1&-256|0)==-256){Fe(e,e,32200);q=1;break}else{ge(8,48,2107,88)}}else{Fe(e,e,32160);B=5}}while(0);if((B|0)==5){Fe(e,e,Pe);Fe(H,H,ke);q=0}qe(r,e);do{if(((ue(r>>0|0,1,0,0)|0)&1|0)!=(q|0)){qe(r,e);if((((ue(b>>0|0,1,0,0)|0|(ue(r>>0|0,1,0,0)|0)|(ue(L>>0|0,1,0,0)|0)|(ue(a>>0|0,1,0,0)|0)|(ue(w>>0|0,1,0,0)|0)|(ue(i>>0|0,1,0,0)|0)|(ue(s>>0|0,1,0,0)|0)|(ue(u>>0|0,1,0,0)|0)|(ue(l>>0|0,1,0,0)|0)|(ue(c>>0|0,1,0,0)|0)|(ue(f>>0|0,1,0,0)|0)|(ue(h>>0|0,1,0,0)|0)|(ue(m>>0|0,1,0,0)|0)|(ue(p>>0|0,1,0,0)|0)|(ue(g>>0|0,1,0,0)|0)|(ue(_>>0|0,1,0,0)|0)|(ue(v>>0|0,1,0,0)|0)|(ue(I>>0|0,1,0,0)|0)|(ue(t>>0|0,1,0,0)|0)|(ue(y>>0|0,1,0,0)|0)|(ue(E>>0|0,1,0,0)|0)|(ue(S>>0|0,1,0,0)|0)|(ue(A>>0|0,1,0,0)|0)|(ue(M>>0|0,1,0,0)|0)|(ue(k>>0|0,1,0,0)|0)|(ue(F>>0|0,1,0,0)|0)|(ue(O>>0|0,1,0,0)|0)|(ue(R>>0|0,1,0,0)|0)|(ue(T>>0|0,1,0,0)|0)|(ue(N>>0|0,1,0,0)|0)|(ue(D>>0|0,1,0,0)|0)|(ue(x>>0|0,1,0,0)|0))&255)+-1&-256|0)==-256){ge(120,48,2117,88)}else{Ae=e+4|0;ke=e+8|0;Re=e+12|0;Ne=e+16|0;De=e+20|0;Le=e+24|0;Ce=e+28|0;Ve=e+32|0;We=e+36|0;Me=0-(ue(Ae|0,4,0,0)|0|0)|0;Oe=0-(ue(ke|0,4,0,0)|0|0)|0;Te=0-(ue(Re|0,4,0,0)|0|0)|0;Pe=0-(ue(Ne|0,4,0,0)|0|0)|0;xe=0-(ue(De|0,4,0,0)|0|0)|0;Ie=0-(ue(Le|0,4,0,0)|0|0)|0;Ue=0-(ue(Ce|0,4,0,0)|0|0)|0;Ye=0-(ue(Ve|0,4,0,0)|0|0)|0;Ge=0-(ue(We|0,4,0,0)|0|0)|0;le(e|0,0-(ue(e|0,4,0,0)|0|0)|0,4,0);le(Ae|0,Me|0,4,0);le(ke|0,Oe|0,4,0);le(Re|0,Te|0,4,0);le(Ne|0,Pe|0,4,0);le(De|0,xe|0,4,0);le(Le|0,Ie|0,4,0);le(Ce|0,Ue|0,4,0);le(Ve|0,Ye|0,4,0);le(We|0,Ge|0,4,0);break}}}while(0);q=e+80|0;xe=ue(H|0,4,0,0)|0|0;Ie=ue(we|0,4,0,0)|0|0;Ue=ue(ye|0,4,0,0)|0|0;Ye=ue(se|0,4,0,0)|0|0;Ge=ue(ie|0,4,0,0)|0|0;W=ue(ne|0,4,0,0)|0|0;U=ue(oe|0,4,0,0)|0|0;re=ue(re|0,4,0,0)|0|0;te=ue(te|0,4,0,0)|0|0;G=ue(G|0,4,0,0)|0|0;Le=ue(Y|0,4,0,0)|0|0;Ce=ue(Ee|0,4,0,0)|0|0;Ve=ue(he|0,4,0,0)|0|0;We=ue(X|0,4,0,0)|0|0;X=ue(K|0,4,0,0)|0|0;H=ue(Z|0,4,0,0)|0|0;B=ue($|0,4,0,0)|0|0;$=ue(J|0,4,0,0)|0|0;K=ue(Q|0,4,0,0)|0|0;Y=ue(ee|0,4,0,0)|0|0;le(q|0,Le+xe|0,4,0);le(e+84|0,Ce+Ie|0,4,0);le(e+88|0,Ve+Ue|0,4,0);le(e+92|0,We+Ye|0,4,0);le(e+96|0,X+Ge|0,4,0);le(e+100|0,H+W|0,4,0);le(e+104|0,B+U|0,4,0);le(e+108|0,$+re|0,4,0);le(e+112|0,K+te|0,4,0);le(e+116|0,Y+G|0,4,0);j=e+40|0;le(j|0,xe-Le|0,4,0);le(e+44|0,Ie-Ce|0,4,0);le(e+48|0,Ue-Ve|0,4,0);le(e+52|0,Ye-We|0,4,0);le(e+56|0,Ge-X|0,4,0);le(e+60|0,W-H|0,4,0);le(e+64|0,U-B|0,4,0);le(e+68|0,re-$|0,4,0);le(e+72|0,te-K|0,4,0);le(e+76|0,G-Y|0,4,0);Fe(e,e,q);He(V,q);Fe(C,e,V);Fe(z,j,V);ze(C,C);ze(z,z);Fe(o,C,z);Fe(o,240,o);j=o+4|0;e=o+8|0;q=o+12|0;Y=o+16|0;G=o+20|0;K=o+24|0;$=o+28|0;Q=o+32|0;te=o+36|0;re=C+4|0;B=(ue(C|0,4,0,0)|0|0)+(ue(o|0,4,0,0)|0|0)-(ue(z|0,4,0,0)|0|0)|0;U=(ue(re|0,4,0,0)|0|0)+(ue(j|0,4,0,0)|0|0)-(ue(z+4|0,4,0,0)|0|0)|0;H=(ue(C+8|0,4,0,0)|0|0)+(ue(e|0,4,0,0)|0|0)-(ue(z+8|0,4,0,0)|0|0)|0;V=(ue(C+12|0,4,0,0)|0|0)+(ue(q|0,4,0,0)|0|0)-(ue(z+12|0,4,0,0)|0|0)|0;W=(ue(C+16|0,4,0,0)|0|0)+(ue(Y|0,4,0,0)|0|0)-(ue(z+16|0,4,0,0)|0|0)|0;X=(ue(C+20|0,4,0,0)|0|0)+(ue(G|0,4,0,0)|0|0)-(ue(z+20|0,4,0,0)|0|0)|0;Z=(ue(C+24|0,4,0,0)|0|0)+(ue(K|0,4,0,0)|0|0)-(ue(z+24|0,4,0,0)|0|0)|0;J=(ue(C+28|0,4,0,0)|0|0)+(ue($|0,4,0,0)|0|0)-(ue(z+28|0,4,0,0)|0|0)|0;ee=(ue(C+32|0,4,0,0)|0|0)+(ue(Q|0,4,0,0)|0|0)-(ue(z+32|0,4,0,0)|0|0)|0;z=(ue(C+36|0,4,0,0)|0|0)+(ue(te|0,4,0,0)|0|0)-(ue(z+36|0,4,0,0)|0|0)|0;le(C|0,1|0,4,0);re=re+0|0;C=re+36|0;do{le(re|0,0|0,4,0);re=re+4|0}while((re|0)<(C|0));le(o|0,B+1|0,4,0);le(j|0,U|0,4,0);le(e|0,H|0,4,0);le(q|0,V|0,4,0);le(Y|0,W|0,4,0);le(G|0,X|0,4,0);le(K|0,Z|0,4,0);le($|0,J|0,4,0);le(Q|0,ee|0,4,0);le(te|0,z|0,4,0);qe(r,o);if((((ue(b>>0|0,1,0,0)|0|(ue(r>>0|0,1,0,0)|0)|(ue(L>>0|0,1,0,0)|0)|(ue(a>>0|0,1,0,0)|0)|(ue(w>>0|0,1,0,0)|0)|(ue(i>>0|0,1,0,0)|0)|(ue(s>>0|0,1,0,0)|0)|(ue(u>>0|0,1,0,0)|0)|(ue(l>>0|0,1,0,0)|0)|(ue(c>>0|0,1,0,0)|0)|(ue(f>>0|0,1,0,0)|0)|(ue(h>>0|0,1,0,0)|0)|(ue(m>>0|0,1,0,0)|0)|(ue(p>>0|0,1,0,0)|0)|(ue(g>>0|0,1,0,0)|0)|(ue(_>>0|0,1,0,0)|0)|(ue(v>>0|0,1,0,0)|0)|(ue(I>>0|0,1,0,0)|0)|(ue(t>>0|0,1,0,0)|0)|(ue(y>>0|0,1,0,0)|0)|(ue(E>>0|0,1,0,0)|0)|(ue(S>>0|0,1,0,0)|0)|(ue(A>>0|0,1,0,0)|0)|(ue(M>>0|0,1,0,0)|0)|(ue(k>>0|0,1,0,0)|0)|(ue(F>>0|0,1,0,0)|0)|(ue(O>>0|0,1,0,0)|0)|(ue(R>>0|0,1,0,0)|0)|(ue(T>>0|0,1,0,0)|0)|(ue(N>>0|0,1,0,0)|0)|(ue(D>>0|0,1,0,0)|0)|(ue(x>>0|0,1,0,0)|0))&255)+-1&-256|0)==-256){d=n;return}else{ge(144,48,2137,88)}}function Je(e){e=e|0;var t=0,r=0;t=d;r=e+0|0;e=r+32|0;do{le(r>>0|0,0|0,1,0);r=r+1|0}while((r|0)<(e|0));d=t;return}function Qe(e){e=e|0;var t=0,r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0,de=0,fe=0,he=0,me=0,pe=0,ge=0,_e=0,ve=0,be=0,we=0,ye=0,Ee=0,Se=0,Ae=0,Me=0,ke=0,Fe=0,Oe=0;t=d;ne=e+1|0;re=e+2|0;Se=ue(re>>0|0,1,0,0)|0|0;ee=ue(e>>0|0,1,0,1)|0|0;_e=ht(ue(ne>>0|0,1,0,1)|0|0|0,0,8)|0;q=P;Se=Se&255;Ae=ht(Se|0,0,16)|0;Ae=_e|ee|Ae&2031616;ee=e+3|0;_e=ht(ue(ee>>0|0,1,0,1)|0|0|0,0,8)|0;Ee=P;Q=e+4|0;G=ht(ue(Q>>0|0,1,0,1)|0|0|0,0,16)|0;Ee=Ee|P;$=e+5|0;B=ue($>>0|0,1,0,1)|0|0;K=ht(B|0,0,24)|0;Ee=ft(_e|Se|G|K|0,Ee|P|0,5)|0;K=e+6|0;G=e+7|0;Se=ue(G>>0|0,1,0,0)|0|0;_e=ht(ue(K>>0|0,1,0,1)|0|0|0,0,8)|0;ke=P;Se=Se&255;Y=ht(Se|0,0,16)|0;ke=ft(_e|B|Y|0,ke|P|0,2)|0;ke=ke&2097151;Y=e+8|0;B=ht(ue(Y>>0|0,1,0,1)|0|0|0,0,8)|0;_e=P;V=e+9|0;ve=ht(ue(V>>0|0,1,0,1)|0|0|0,0,16)|0;_e=_e|P;H=e+10|0;de=ue(H>>0|0,1,0,1)|0|0;j=ht(de|0,0,24)|0;_e=ft(B|Se|ve|j|0,_e|P|0,7)|0;j=e+11|0;ve=ht(ue(j>>0|0,1,0,1)|0|0|0,0,8)|0;Se=P;B=e+12|0;D=ht(ue(B>>0|0,1,0,1)|0|0|0,0,16)|0;Se=Se|P;C=e+13|0;w=ue(C>>0|0,1,0,1)|0|0;L=ht(w|0,0,24)|0;Se=ft(ve|de|D|L|0,Se|P|0,4)|0;Se=Se&2097151;L=e+14|0;D=e+15|0;de=ue(D>>0|0,1,0,0)|0|0;ve=ht(ue(L>>0|0,1,0,1)|0|0|0,0,8)|0;pe=P;de=de&255;T=ht(de|0,0,16)|0;pe=ft(ve|w|T|0,pe|P|0,1)|0;T=e+16|0;w=ht(ue(T>>0|0,1,0,1)|0|0|0,0,8)|0;ve=P;R=e+17|0;E=ht(ue(R>>0|0,1,0,1)|0|0|0,0,16)|0;ve=ve|P;F=e+18|0;y=ue(F>>0|0,1,0,1)|0|0;M=ht(y|0,0,24)|0;ve=ft(w|de|E|M|0,ve|P|0,6)|0;ve=ve&2097151;M=e+19|0;E=e+20|0;de=ue(E>>0|0,1,0,0)|0|0;w=ht(ue(M>>0|0,1,0,1)|0|0|0,0,8)|0;m=P;de=ht(de&255|0,0,16)|0;m=ft(w|y|de|0,m|P|0,3)|0;de=P;y=e+21|0;w=e+22|0;v=e+23|0;W=ue(v>>0|0,1,0,0)|0|0;g=ue(y>>0|0,1,0,1)|0|0;J=ht(ue(w>>0|0,1,0,1)|0|0|0,0,8)|0;fe=P;W=W&255;he=ht(W|0,0,16)|0;he=J|g|he&2031616;g=e+24|0;J=ht(ue(g>>0|0,1,0,1)|0|0|0,0,8)|0;oe=P;p=e+25|0;u=ht(ue(p>>0|0,1,0,1)|0|0|0,0,16)|0;oe=oe|P;h=e+26|0;z=ue(h>>0|0,1,0,1)|0|0;c=ht(z|0,0,24)|0;oe=ft(J|W|u|c|0,oe|P|0,5)|0;c=e+27|0;u=e+28|0;W=ue(u>>0|0,1,0,0)|0|0;J=ht(ue(c>>0|0,1,0,1)|0|0|0,0,8)|0;o=P;W=W&255;i=ht(W|0,0,16)|0;o=ft(J|z|i|0,o|P|0,2)|0;o=o&2097151;i=e+29|0;z=ht(ue(i>>0|0,1,0,1)|0|0|0,0,8)|0;J=P;a=e+30|0;Me=ht(ue(a>>0|0,1,0,1)|0|0|0,0,16)|0;J=J|P;r=e+31|0;U=ht(ue(r>>0|0,1,0,1)|0|0|0,0,24)|0;J=ft(z|W|Me|U|0,J|P|0,7)|0;U=P;Me=ct(Ae|0,q|0,1048576,0)|0;Me=ft(Me|0,P|0,21)|0;W=P;Ee=ct(Ee&2097151|0,0,Me|0,W|0)|0;z=P;W=ht(Me|0,W|0,21)|0;W=lt(Ae|0,q|0,W|0,P|0)|0;q=P;Ae=ct(ke|0,0,1048576,0)|0;Ae=ft(Ae|0,P|0,21)|0;Me=P;_e=ct(_e&2097151|0,0,Ae|0,Me|0)|0;Z=P;Me=ht(Ae|0,Me|0,21)|0;Ae=P;be=ct(Se|0,0,1048576,0)|0;be=ft(be|0,P|0,21)|0;we=P;pe=ct(pe&2097151|0,0,be|0,we|0)|0;S=P;we=ht(be|0,we|0,21)|0;be=P;b=ct(ve|0,0,1048576,0)|0;b=ft(b|0,P|0,21)|0;_=P;de=ct(m|0,de|0,b|0,_|0)|0;m=P;_=ht(b|0,_|0,21)|0;b=P;s=ct(he|0,fe|0,1048576,0)|0;s=ft(s|0,P|0,21)|0;l=P;oe=ct(oe&2097151|0,0,s|0,l|0)|0;x=P;l=ht(s|0,l|0,21)|0;s=P;te=ct(o|0,0,1048576,0)|0;te=ft(te|0,P|0,21)|0;ae=P;U=ct(J|0,U|0,te|0,ae|0)|0;J=P;ae=ht(te|0,ae|0,21)|0;te=P;Oe=ct(Ee|0,z|0,1048576,0)|0;Oe=ft(Oe|0,P|0,21)|0;Fe=P;I=ht(Oe|0,Fe|0,21)|0;I=lt(Ee|0,z|0,I|0,P|0)|0;z=P;Ee=ct(_e|0,Z|0,1048576,0)|0;Ee=ft(Ee|0,P|0,21)|0;ye=P;k=ht(Ee|0,ye|0,21)|0;k=lt(_e|0,Z|0,k|0,P|0)|0;Z=P;_e=ct(pe|0,S|0,1048576,0)|0;_e=ft(_e|0,P|0,21)|0;ge=P;X=ht(_e|0,ge|0,21)|0;X=lt(pe|0,S|0,X|0,P|0)|0;S=P;pe=ct(de|0,m|0,1048576,0)|0;pe=ft(pe|0,P|0,21)|0;me=P;f=ht(pe|0,me|0,21)|0;f=lt(de|0,m|0,f|0,P|0)|0;m=P;de=ct(oe|0,x|0,1048576,0)|0;de=ft(de|0,P|0,21)|0;ce=P;ie=ht(de|0,ce|0,21)|0;ie=lt(oe|0,x|0,ie|0,P|0)|0;x=P;oe=ct(U|0,J|0,1048576,0)|0;oe=ft(oe|0,P|0,21)|0;A=P;n=ht(oe|0,A|0,21)|0;n=lt(U|0,J|0,n|0,P|0)|0;J=P;U=yt(oe|0,A|0,666643,0)|0;q=ct(U|0,P|0,W|0,q|0)|0;W=P;U=yt(oe|0,A|0,470296,0)|0;U=ct(I|0,z|0,U|0,P|0)|0;z=P;I=yt(oe|0,A|0,654183,0)|0;se=P;N=yt(oe|0,A|0,-997805,-1)|0;N=ct(k|0,Z|0,N|0,P|0)|0;Z=P;k=yt(oe|0,A|0,136657,0)|0;O=P;A=yt(oe|0,A|0,-683901,-1)|0;A=ct(X|0,S|0,A|0,P|0)|0;S=P;X=ut(q|0,W|0,21)|0;oe=P;z=ct(U|0,z|0,X|0,oe|0)|0;U=P;oe=ht(X|0,oe|0,21)|0;oe=lt(q|0,W|0,oe|0,P|0)|0;W=P;q=ut(z|0,U|0,21)|0;X=P;ke=ct(Oe|0,Fe|0,ke|0,0)|0;Ae=lt(ke|0,P|0,Me|0,Ae|0)|0;se=ct(Ae|0,P|0,I|0,se|0)|0;se=ct(se|0,P|0,q|0,X|0)|0;I=P;X=ht(q|0,X|0,21)|0;X=lt(z|0,U|0,X|0,P|0)|0;U=P;z=ut(se|0,I|0,21)|0;q=P;Z=ct(N|0,Z|0,z|0,q|0)|0;N=P;q=ht(z|0,q|0,21)|0;q=lt(se|0,I|0,q|0,P|0)|0;I=P;se=ut(Z|0,N|0,21)|0;z=P;ye=ct(Se|0,0,Ee|0,ye|0)|0;be=lt(ye|0,P|0,we|0,be|0)|0;O=ct(be|0,P|0,k|0,O|0)|0;O=ct(O|0,P|0,se|0,z|0)|0;k=P;z=ht(se|0,z|0,21)|0;z=lt(Z|0,N|0,z|0,P|0)|0;N=P;Z=ut(O|0,k|0,21)|0;se=P;S=ct(A|0,S|0,Z|0,se|0)|0;A=P;se=ht(Z|0,se|0,21)|0;se=lt(O|0,k|0,se|0,P|0)|0;k=P;O=ut(S|0,A|0,21)|0;Z=P;ge=ct(ve|0,0,_e|0,ge|0)|0;b=lt(ge|0,P|0,_|0,b|0)|0;b=ct(b|0,P|0,O|0,Z|0)|0;_=P;Z=ht(O|0,Z|0,21)|0;Z=lt(S|0,A|0,Z|0,P|0)|0;A=P;S=ut(b|0,_|0,21)|0;O=P;m=ct(S|0,O|0,f|0,m|0)|0;f=P;O=ht(S|0,O|0,21)|0;O=lt(b|0,_|0,O|0,P|0)|0;_=P;b=ut(m|0,f|0,21)|0;S=P;fe=ct(pe|0,me|0,he|0,fe|0)|0;s=lt(fe|0,P|0,l|0,s|0)|0;s=ct(s|0,P|0,b|0,S|0)|0;l=P;S=ht(b|0,S|0,21)|0;S=lt(m|0,f|0,S|0,P|0)|0;f=P;m=ut(s|0,l|0,21)|0;b=P;x=ct(m|0,b|0,ie|0,x|0)|0;ie=P;b=ht(m|0,b|0,21)|0;b=lt(s|0,l|0,b|0,P|0)|0;l=P;s=ut(x|0,ie|0,21)|0;m=P;o=ct(de|0,ce|0,o|0,0)|0;te=lt(o|0,P|0,ae|0,te|0)|0;te=ct(te|0,P|0,s|0,m|0)|0;ae=P;m=ht(s|0,m|0,21)|0;m=lt(x|0,ie|0,m|0,P|0)|0;ie=P;x=ut(te|0,ae|0,21)|0;s=P;J=ct(x|0,s|0,n|0,J|0)|0;n=P;s=ht(x|0,s|0,21)|0;s=lt(te|0,ae|0,s|0,P|0)|0;ae=P;te=ut(J|0,n|0,21)|0;x=P;o=ht(te|0,x|0,21)|0;o=lt(J|0,n|0,o|0,P|0)|0;n=P;J=yt(te|0,x|0,666643,0)|0;W=ct(J|0,P|0,oe|0,W|0)|0;oe=P;J=yt(te|0,x|0,470296,0)|0;J=ct(X|0,U|0,J|0,P|0)|0;U=P;X=yt(te|0,x|0,654183,0)|0;X=ct(q|0,I|0,X|0,P|0)|0;I=P;q=yt(te|0,x|0,-997805,-1)|0;q=ct(z|0,N|0,q|0,P|0)|0;N=P;z=yt(te|0,x|0,136657,0)|0;z=ct(se|0,k|0,z|0,P|0)|0;k=P;x=yt(te|0,x|0,-683901,-1)|0;x=ct(Z|0,A|0,x|0,P|0)|0;A=P;Z=ut(W|0,oe|0,21)|0;te=P;U=ct(J|0,U|0,Z|0,te|0)|0;J=P;te=ht(Z|0,te|0,21)|0;te=lt(W|0,oe|0,te|0,P|0)|0;oe=P;W=ut(U|0,J|0,21)|0;Z=P;I=ct(X|0,I|0,W|0,Z|0)|0;X=P;Z=ht(W|0,Z|0,21)|0;Z=lt(U|0,J|0,Z|0,P|0)|0;J=P;U=ut(I|0,X|0,21)|0;W=P;N=ct(q|0,N|0,U|0,W|0)|0;q=P;W=ht(U|0,W|0,21)|0;W=lt(I|0,X|0,W|0,P|0)|0;X=P;I=ut(N|0,q|0,21)|0;U=P;k=ct(z|0,k|0,I|0,U|0)|0;z=P;U=ht(I|0,U|0,21)|0;U=lt(N|0,q|0,U|0,P|0)|0;q=P;N=ut(k|0,z|0,21)|0;I=P;A=ct(x|0,A|0,N|0,I|0)|0;x=P;I=ht(N|0,I|0,21)|0;I=lt(k|0,z|0,I|0,P|0)|0;z=P;k=ut(A|0,x|0,21)|0;N=P;_=ct(k|0,N|0,O|0,_|0)|0;O=P;N=ht(k|0,N|0,21)|0;N=lt(A|0,x|0,N|0,P|0)|0;x=P;A=ut(_|0,O|0,21)|0;k=P;f=ct(A|0,k|0,S|0,f|0)|0;S=P;k=ht(A|0,k|0,21)|0;k=lt(_|0,O|0,k|0,P|0)|0;O=P;_=ut(f|0,S|0,21)|0;A=P;l=ct(_|0,A|0,b|0,l|0)|0;b=P;A=ht(_|0,A|0,21)|0;A=lt(f|0,S|0,A|0,P|0)|0;S=P;f=ut(l|0,b|0,21)|0;_=P;ie=ct(f|0,_|0,m|0,ie|0)|0;m=P;_=ht(f|0,_|0,21)|0;_=lt(l|0,b|0,_|0,P|0)|0;b=P;l=ut(ie|0,m|0,21)|0;f=P;ae=ct(l|0,f|0,s|0,ae|0)|0;s=P;f=ht(l|0,f|0,21)|0;f=lt(ie|0,m|0,f|0,P|0)|0;m=P;ie=ut(ae|0,s|0,21)|0;l=P;n=ct(ie|0,l|0,o|0,n|0)|0;o=P;l=ht(ie|0,l|0,21)|0;l=lt(ae|0,s|0,l|0,P|0)|0;s=P;le(e>>0|0,te|0,1,0);e=ft(te|0,oe|0,8)|0;le(ne>>0|0,e|0,1,0);e=ft(te|0,oe|0,16)|0;oe=P;te=ht(Z|0,J|0,5)|0;P|oe;le(re>>0|0,te|e|0,1,0);e=ft(Z|0,J|0,3)|0;le(ee>>0|0,e|0,1,0);e=ft(Z|0,J|0,11)|0;le(Q>>0|0,e|0,1,0);e=ft(Z|0,J|0,19)|0;J=P;Z=ht(W|0,X|0,2)|0;P|J;le($>>0|0,Z|e|0,1,0);e=ft(W|0,X|0,6)|0;le(K>>0|0,e|0,1,0);e=ft(W|0,X|0,14)|0;X=P;W=ht(U|0,q|0,7)|0;P|X;le(G>>0|0,W|e|0,1,0);e=ft(U|0,q|0,1)|0;le(Y>>0|0,e|0,1,0);e=ft(U|0,q|0,9)|0;le(V>>0|0,e|0,1,0);e=ft(U|0,q|0,17)|0;q=P;U=ht(I|0,z|0,4)|0;P|q;le(H>>0|0,U|e|0,1,0);e=ft(I|0,z|0,4)|0;le(j>>0|0,e|0,1,0);e=ft(I|0,z|0,12)|0;le(B>>0|0,e|0,1,0);e=ft(I|0,z|0,20)|0;z=P;I=ht(N|0,x|0,1)|0;P|z;le(C>>0|0,I|e|0,1,0);e=ft(N|0,x|0,7)|0;le(L>>0|0,e|0,1,0);e=ft(N|0,x|0,15)|0;x=P;N=ht(k|0,O|0,6)|0;P|x;le(D>>0|0,N|e|0,1,0);e=ft(k|0,O|0,2)|0;le(T>>0|0,e|0,1,0);e=ft(k|0,O|0,10)|0;le(R>>0|0,e|0,1,0);e=ft(k|0,O|0,18)|0;O=P;k=ht(A|0,S|0,3)|0;P|O;le(F>>0|0,k|e|0,1,0);e=ft(A|0,S|0,5)|0;le(M>>0|0,e|0,1,0);e=ft(A|0,S|0,13)|0;le(E>>0|0,e|0,1,0);le(y>>0|0,_|0,1,0);e=ft(_|0,b|0,8)|0;le(w>>0|0,e|0,1,0);e=ft(_|0,b|0,16)|0;b=P;_=ht(f|0,m|0,5)|0;P|b;le(v>>0|0,_|e|0,1,0);e=ft(f|0,m|0,3)|0;le(g>>0|0,e|0,1,0);e=ft(f|0,m|0,11)|0;le(p>>0|0,e|0,1,0);e=ft(f|0,m|0,19)|0;m=P;f=ht(l|0,s|0,2)|0;P|m;le(h>>0|0,f|e|0,1,0);e=ft(l|0,s|0,6)|0;le(c>>0|0,e|0,1,0);s=ft(l|0,s|0,14)|0;l=P;e=ht(n|0,o|0,7)|0;l|P;le(u>>0|0,s|e|0,1,0);e=ft(n|0,o|0,1)|0;le(i>>0|0,e|0,1,0);e=ft(n|0,o|0,9)|0;le(a>>0|0,e|0,1,0);e=ft(n|0,o|0,17)|0;le(r>>0|0,e|0,1,0);d=t;return}function et(e,t,r){e=e|0;t=t|0;r=r|0;var o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0;o=d;Q=ue(t+2>>0|0,1,0,0)|0|0;$=ue(t>>0|0,1,0,1)|0|0;Z=ht(ue(t+1>>0|0,1,0,1)|0|0|0,0,8)|0;X=P;Q=Q&255;v=ht(Q|0,0,16)|0;U=ht(ue(t+3>>0|0,1,0,1)|0|0|0,0,8)|0;g=P;G=ht(ue(t+4>>0|0,1,0,1)|0|0|0,0,16)|0;g=g|P;M=ue(t+5>>0|0,1,0,1)|0|0;H=ht(M|0,0,24)|0;g=ft(U|Q|G|H|0,g|P|0,5)|0;H=ue(t+7>>0|0,1,0,0)|0|0;G=ht(ue(t+6>>0|0,1,0,1)|0|0|0,0,8)|0;Q=P;H=H&255;U=ht(H|0,0,16)|0;Q=ft(G|M|U|0,Q|P|0,2)|0;U=ht(ue(t+8>>0|0,1,0,1)|0|0|0,0,8)|0;M=P;G=ht(ue(t+9>>0|0,1,0,1)|0|0|0,0,16)|0;M=M|P;l=ue(t+10>>0|0,1,0,1)|0|0;q=ht(l|0,0,24)|0;M=ft(U|H|G|q|0,M|P|0,7)|0;q=ht(ue(t+11>>0|0,1,0,1)|0|0|0,0,8)|0;G=P;H=ht(ue(t+12>>0|0,1,0,1)|0|0|0,0,16)|0;G=G|P;U=ue(t+13>>0|0,1,0,1)|0|0;T=ht(U|0,0,24)|0;G=ft(q|l|H|T|0,G|P|0,4)|0;T=ue(t+15>>0|0,1,0,0)|0|0;H=ht(ue(t+14>>0|0,1,0,1)|0|0|0,0,8)|0;l=P;T=T&255;q=ht(T|0,0,16)|0;l=ft(H|U|q|0,l|P|0,1)|0;q=ht(ue(t+16>>0|0,1,0,1)|0|0|0,0,8)|0;U=P;H=ht(ue(t+17>>0|0,1,0,1)|0|0|0,0,16)|0;U=U|P;D=ue(t+18>>0|0,1,0,1)|0|0;n=ht(D|0,0,24)|0;U=ft(q|T|H|n|0,U|P|0,6)|0;n=ue(t+20>>0|0,1,0,0)|0|0;H=ht(ue(t+19>>0|0,1,0,1)|0|0|0,0,8)|0;T=P;n=ht(n&255|0,0,16)|0;T=ft(H|D|n|0,T|P|0,3)|0;n=P;D=ue(t+23>>0|0,1,0,0)|0|0;H=ue(t+21>>0|0,1,0,1)|0|0;q=ht(ue(t+22>>0|0,1,0,1)|0|0|0,0,8)|0;L=P;D=D&255;x=ht(D|0,0,16)|0;z=ht(ue(t+24>>0|0,1,0,1)|0|0|0,0,8)|0;m=P;J=ht(ue(t+25>>0|0,1,0,1)|0|0|0,0,16)|0;m=m|P;y=ue(t+26>>0|0,1,0,1)|0|0;p=ht(y|0,0,24)|0;m=ft(z|D|J|p|0,m|P|0,5)|0;p=ue(t+28>>0|0,1,0,0)|0|0;J=ht(ue(t+27>>0|0,1,0,1)|0|0|0,0,8)|0;D=P;p=p&255;z=ht(p|0,0,16)|0;D=ft(J|y|z|0,D|P|0,2)|0;z=ht(ue(t+29>>0|0,1,0,1)|0|0|0,0,8)|0;y=P;J=ht(ue(t+30>>0|0,1,0,1)|0|0|0,0,16)|0;y=y|P;E=ht(ue(t+31>>0|0,1,0,1)|0|0|0,0,24)|0;y=ft(z|p|J|E|0,y|P|0,7)|0;E=P;J=ue(r+2>>0|0,1,0,0)|0|0;p=ue(r>>0|0,1,0,1)|0|0;z=ht(ue(r+1>>0|0,1,0,1)|0|0|0,0,8)|0;b=P;J=J&255;V=ht(J|0,0,16)|0;j=ht(ue(r+3>>0|0,1,0,1)|0|0|0,0,8)|0;Y=P;W=ht(ue(r+4>>0|0,1,0,1)|0|0|0,0,16)|0;Y=Y|P;B=ue(r+5>>0|0,1,0,1)|0|0;a=ht(B|0,0,24)|0;Y=ft(j|J|W|a|0,Y|P|0,5)|0;a=ue(r+7>>0|0,1,0,0)|0|0;W=ht(ue(r+6>>0|0,1,0,1)|0|0|0,0,8)|0;J=P;a=a&255;j=ht(a|0,0,16)|0;J=ft(W|B|j|0,J|P|0,2)|0;j=ht(ue(r+8>>0|0,1,0,1)|0|0|0,0,8)|0;B=P;W=ht(ue(r+9>>0|0,1,0,1)|0|0|0,0,16)|0;B=B|P;C=ue(r+10>>0|0,1,0,1)|0|0;i=ht(C|0,0,24)|0;B=ft(j|a|W|i|0,B|P|0,7)|0;i=ht(ue(r+11>>0|0,1,0,1)|0|0|0,0,8)|0;W=P;a=ht(ue(r+12>>0|0,1,0,1)|0|0|0,0,16)|0;W=W|P;j=ue(r+13>>0|0,1,0,1)|0|0;k=ht(j|0,0,24)|0;W=ft(i|C|a|k|0,W|P|0,4)|0;k=ue(r+15>>0|0,1,0,0)|0|0;a=ht(ue(r+14>>0|0,1,0,1)|0|0|0,0,8)|0;C=P;k=k&255;i=ht(k|0,0,16)|0;C=ft(a|j|i|0,C|P|0,1)|0;i=ht(ue(r+16>>0|0,1,0,1)|0|0|0,0,8)|0;j=P;a=ht(ue(r+17>>0|0,1,0,1)|0|0|0,0,16)|0;j=j|P;N=ue(r+18>>0|0,1,0,1)|0|0;F=ht(N|0,0,24)|0;j=ft(i|k|a|F|0,j|P|0,6)|0;F=ue(r+20>>0|0,1,0,0)|0|0;a=ht(ue(r+19>>0|0,1,0,1)|0|0|0,0,8)|0;k=P;F=ht(F&255|0,0,16)|0;k=ft(a|N|F|0,k|P|0,3)|0;F=P;N=ue(r+23>>0|0,1,0,0)|0|0;a=ue(r+21>>0|0,1,0,1)|0|0;i=ht(ue(r+22>>0|0,1,0,1)|0|0|0,0,8)|0;s=P;N=N&255;c=ht(N|0,0,16)|0;u=ht(ue(r+24>>0|0,1,0,1)|0|0|0,0,8)|0;A=P;w=ht(ue(r+25>>0|0,1,0,1)|0|0|0,0,16)|0;A=A|P;S=ue(r+26>>0|0,1,0,1)|0|0;I=ht(S|0,0,24)|0;A=ft(u|N|w|I|0,A|P|0,5)|0;I=ue(r+28>>0|0,1,0,0)|0|0;w=ht(ue(r+27>>0|0,1,0,1)|0|0|0,0,8)|0;N=P;I=I&255;u=ht(I|0,0,16)|0;N=ft(w|S|u|0,N|P|0,2)|0;u=ht(ue(r+29>>0|0,1,0,1)|0|0|0,0,8)|0;S=P;w=ht(ue(r+30>>0|0,1,0,1)|0|0|0,0,16)|0;S=S|P;K=ht(ue(r+31>>0|0,1,0,1)|0|0|0,0,24)|0;S=ft(u|I|w|K|0,S|P|0,7)|0;K=P;X=ct(z|p|V&2031616|0,b|0,Z|$|v&2031616|0,X|0)|0;v=P;Q=ct(J&2097151|0,0,Q&2097151|0,0)|0;J=P;G=ct(W&2097151|0,0,G&2097151|0,0)|0;W=P;l=ct(C&2097151|0,0,l&2097151|0,0)|0;C=P;U=ct(j&2097151|0,0,U&2097151|0,0)|0;j=P;n=ct(k|0,F|0,T|0,n|0)|0;T=P;L=ct(i|a|c&2031616|0,s|0,q|H|x&2031616|0,L|0)|0;x=P;D=ct(N&2097151|0,0,D&2097151|0,0)|0;N=P;E=ct(S|0,K|0,y|0,E|0)|0;y=P;K=ct(X|0,v|0,1048576,0)|0;K=ft(K|0,P|0,21)|0;S=P;g=ct(K|0,S|0,g&2097151|0,0)|0;Y=ct(g|0,P|0,Y&2097151|0,0)|0;g=P;S=ht(K|0,S|0,21)|0;S=lt(X|0,v|0,S|0,P|0)|0;v=P;X=ct(Q|0,J|0,1048576,0)|0;X=ft(X|0,P|0,21)|0;K=P;M=ct(X|0,K|0,M&2097151|0,0)|0;B=ct(M|0,P|0,B&2097151|0,0)|0;M=P;K=ht(X|0,K|0,21)|0;X=P;H=ct(G|0,W|0,1048576,0)|0;H=ft(H|0,P|0,21)|0;q=P;C=ct(l|0,C|0,H|0,q|0)|0;l=P;q=ht(H|0,q|0,21)|0;H=P;s=ct(U|0,j|0,1048576,0)|0;s=ft(s|0,P|0,21)|0;c=P;T=ct(n|0,T|0,s|0,c|0)|0;n=P;c=ht(s|0,c|0,21)|0;s=P;a=ct(L|0,x|0,1048576,0)|0;a=ft(a|0,P|0,21)|0;i=P;m=ct(a|0,i|0,m&2097151|0,0)|0;A=ct(m|0,P|0,A&2097151|0,0)|0;m=P;i=ht(a|0,i|0,21)|0;a=P;F=ct(D|0,N|0,1048576,0)|0;F=ft(F|0,P|0,21)|0;k=P;y=ct(E|0,y|0,F|0,k|0)|0;E=P;k=ht(F|0,k|0,21)|0;F=P;$=ct(Y|0,g|0,1048576,0)|0;$=ft($|0,P|0,21)|0;Z=P;b=ht($|0,Z|0,21)|0;b=lt(Y|0,g|0,b|0,P|0)|0;g=P;Y=ct(B|0,M|0,1048576,0)|0;Y=ft(Y|0,P|0,21)|0;V=P;p=ht(Y|0,V|0,21)|0;p=lt(B|0,M|0,p|0,P|0)|0;M=P;B=ct(C|0,l|0,1048576,0)|0;B=ft(B|0,P|0,21)|0;z=P;w=ht(B|0,z|0,21)|0;w=lt(C|0,l|0,w|0,P|0)|0;l=P;C=ct(T|0,n|0,1048576,0)|0;C=ft(C|0,P|0,21)|0;I=P;u=ht(C|0,I|0,21)|0;u=lt(T|0,n|0,u|0,P|0)|0;n=P;T=ct(A|0,m|0,1048576,0)|0;T=ft(T|0,P|0,21)|0;t=P;O=ht(T|0,t|0,21)|0;O=lt(A|0,m|0,O|0,P|0)|0;m=P;A=ct(y|0,E|0,1048576,0)|0;A=ft(A|0,P|0,21)|0;f=P;r=ht(A|0,f|0,21)|0;r=lt(y|0,E|0,r|0,P|0)|0;E=P;y=yt(A|0,f|0,666643,0)|0;v=ct(y|0,P|0,S|0,v|0)|0;S=P;y=yt(A|0,f|0,470296,0)|0;y=ct(b|0,g|0,y|0,P|0)|0;g=P;b=yt(A|0,f|0,654183,0)|0;R=P;_=yt(A|0,f|0,-997805,-1)|0;_=ct(p|0,M|0,_|0,P|0)|0;M=P;p=yt(A|0,f|0,136657,0)|0;h=P;f=yt(A|0,f|0,-683901,-1)|0;f=ct(w|0,l|0,f|0,P|0)|0;l=P;w=ut(v|0,S|0,21)|0;A=P;g=ct(y|0,g|0,w|0,A|0)|0;y=P;A=ht(w|0,A|0,21)|0;A=lt(v|0,S|0,A|0,P|0)|0;S=P;v=ut(g|0,y|0,21)|0;w=P;Z=ct(Q|0,J|0,$|0,Z|0)|0;X=lt(Z|0,P|0,K|0,X|0)|0;R=ct(X|0,P|0,b|0,R|0)|0;R=ct(R|0,P|0,v|0,w|0)|0;b=P;w=ht(v|0,w|0,21)|0;w=lt(g|0,y|0,w|0,P|0)|0;y=P;g=ut(R|0,b|0,21)|0;v=P;M=ct(_|0,M|0,g|0,v|0)|0;_=P;v=ht(g|0,v|0,21)|0;v=lt(R|0,b|0,v|0,P|0)|0;b=P;R=ut(M|0,_|0,21)|0;g=P;V=ct(G|0,W|0,Y|0,V|0)|0;H=lt(V|0,P|0,q|0,H|0)|0;h=ct(H|0,P|0,p|0,h|0)|0;h=ct(h|0,P|0,R|0,g|0)|0;p=P;g=ht(R|0,g|0,21)|0;g=lt(M|0,_|0,g|0,P|0)|0;_=P;M=ut(h|0,p|0,21)|0;R=P;l=ct(f|0,l|0,M|0,R|0)|0;f=P;R=ht(M|0,R|0,21)|0;R=lt(h|0,p|0,R|0,P|0)|0;p=P;h=ut(l|0,f|0,21)|0;M=P;z=ct(U|0,j|0,B|0,z|0)|0;s=lt(z|0,P|0,c|0,s|0)|0;s=ct(s|0,P|0,h|0,M|0)|0;c=P;M=ht(h|0,M|0,21)|0;M=lt(l|0,f|0,M|0,P|0)|0;f=P;l=ut(s|0,c|0,21)|0;h=P;n=ct(l|0,h|0,u|0,n|0)|0;u=P;h=ht(l|0,h|0,21)|0;h=lt(s|0,c|0,h|0,P|0)|0;c=P;s=ut(n|0,u|0,21)|0;l=P;x=ct(C|0,I|0,L|0,x|0)|0;a=lt(x|0,P|0,i|0,a|0)|0;a=ct(a|0,P|0,s|0,l|0)|0;i=P;l=ht(s|0,l|0,21)|0;l=lt(n|0,u|0,l|0,P|0)|0;u=P;n=ut(a|0,i|0,21)|0;s=P;m=ct(n|0,s|0,O|0,m|0)|0;O=P;s=ht(n|0,s|0,21)|0;s=lt(a|0,i|0,s|0,P|0)|0;i=P;a=ut(m|0,O|0,21)|0;n=P;t=ct(D|0,N|0,T|0,t|0)|0;F=lt(t|0,P|0,k|0,F|0)|0;F=ct(F|0,P|0,a|0,n|0)|0;k=P;n=ht(a|0,n|0,21)|0;n=lt(m|0,O|0,n|0,P|0)|0;O=P;m=ut(F|0,k|0,21)|0;a=P;E=ct(m|0,a|0,r|0,E|0)|0;r=P;a=ht(m|0,a|0,21)|0;a=lt(F|0,k|0,a|0,P|0)|0;k=P;F=ut(E|0,r|0,21)|0;m=P;t=ht(F|0,m|0,21)|0;t=lt(E|0,r|0,t|0,P|0)|0;r=P;E=yt(F|0,m|0,666643,0)|0;S=ct(E|0,P|0,A|0,S|0)|0;A=P;E=yt(F|0,m|0,470296,0)|0;E=ct(w|0,y|0,E|0,P|0)|0;y=P;w=yt(F|0,m|0,654183,0)|0;w=ct(v|0,b|0,w|0,P|0)|0;b=P;v=yt(F|0,m|0,-997805,-1)|0;v=ct(g|0,_|0,v|0,P|0)|0;_=P;g=yt(F|0,m|0,136657,0)|0;g=ct(R|0,p|0,g|0,P|0)|0;p=P;m=yt(F|0,m|0,-683901,-1)|0;m=ct(M|0,f|0,m|0,P|0)|0;f=P;M=ut(S|0,A|0,21)|0;F=P;y=ct(E|0,y|0,M|0,F|0)|0;E=P;F=ht(M|0,F|0,21)|0;F=lt(S|0,A|0,F|0,P|0)|0;A=P;S=ut(y|0,E|0,21)|0;M=P;b=ct(w|0,b|0,S|0,M|0)|0;w=P;M=ht(S|0,M|0,21)|0;M=lt(y|0,E|0,M|0,P|0)|0;E=P;y=ut(b|0,w|0,21)|0;S=P;_=ct(v|0,_|0,y|0,S|0)|0;v=P;S=ht(y|0,S|0,21)|0;S=lt(b|0,w|0,S|0,P|0)|0;w=P;b=ut(_|0,v|0,21)|0;y=P;p=ct(g|0,p|0,b|0,y|0)|0;g=P;y=ht(b|0,y|0,21)|0;y=lt(_|0,v|0,y|0,P|0)|0;v=P;_=ut(p|0,g|0,21)|0;b=P;f=ct(m|0,f|0,_|0,b|0)|0;m=P;b=ht(_|0,b|0,21)|0;b=lt(p|0,g|0,b|0,P|0)|0;g=P;p=ut(f|0,m|0,21)|0;_=P;c=ct(p|0,_|0,h|0,c|0)|0;h=P;_=ht(p|0,_|0,21)|0;_=lt(f|0,m|0,_|0,P|0)|0;m=P;f=ut(c|0,h|0,21)|0;p=P;u=ct(f|0,p|0,l|0,u|0)|0;l=P;p=ht(f|0,p|0,21)|0;p=lt(c|0,h|0,p|0,P|0)|0;h=P;c=ut(u|0,l|0,21)|0;f=P;i=ct(c|0,f|0,s|0,i|0)|0;s=P;f=ht(c|0,f|0,21)|0;f=lt(u|0,l|0,f|0,P|0)|0;l=P;u=ut(i|0,s|0,21)|0;c=P;O=ct(u|0,c|0,n|0,O|0)|0;n=P;c=ht(u|0,c|0,21)|0;c=lt(i|0,s|0,c|0,P|0)|0;s=P;i=ut(O|0,n|0,21)|0;u=P;k=ct(i|0,u|0,a|0,k|0)|0;a=P;u=ht(i|0,u|0,21)|0;u=lt(O|0,n|0,u|0,P|0)|0;n=P;O=ut(k|0,a|0,21)|0;i=P;r=ct(O|0,i|0,t|0,r|0)|0;t=P;i=ht(O|0,i|0,21)|0;i=lt(k|0,a|0,i|0,P|0)|0;a=P;le(e>>0|0,F|0,1,0);k=ft(F|0,A|0,8)|0;le(e+1>>0|0,k|0,1,0);A=ft(F|0,A|0,16)|0;F=P;k=ht(M|0,E|0,5)|0;P|F;le(e+2>>0|0,k|A|0,1,0);A=ft(M|0,E|0,3)|0;le(e+3>>0|0,A|0,1,0);A=ft(M|0,E|0,11)|0;le(e+4>>0|0,A|0,1,0);E=ft(M|0,E|0,19)|0;M=P;A=ht(S|0,w|0,2)|0;P|M;le(e+5>>0|0,A|E|0,1,0);E=ft(S|0,w|0,6)|0;le(e+6>>0|0,E|0,1,0);w=ft(S|0,w|0,14)|0;S=P;E=ht(y|0,v|0,7)|0;P|S;le(e+7>>0|0,E|w|0,1,0);w=ft(y|0,v|0,1)|0;le(e+8>>0|0,w|0,1,0);w=ft(y|0,v|0,9)|0;le(e+9>>0|0,w|0,1,0);v=ft(y|0,v|0,17)|0;y=P;w=ht(b|0,g|0,4)|0;P|y;le(e+10>>0|0,w|v|0,1,0);v=ft(b|0,g|0,4)|0;le(e+11>>0|0,v|0,1,0);v=ft(b|0,g|0,12)|0;le(e+12>>0|0,v|0,1,0);g=ft(b|0,g|0,20)|0;b=P;v=ht(_|0,m|0,1)|0;P|b;le(e+13>>0|0,v|g|0,1,0);g=ft(_|0,m|0,7)|0;le(e+14>>0|0,g|0,1,0);m=ft(_|0,m|0,15)|0;_=P;g=ht(p|0,h|0,6)|0;P|_;le(e+15>>0|0,g|m|0,1,0);m=ft(p|0,h|0,2)|0;le(e+16>>0|0,m|0,1,0);m=ft(p|0,h|0,10)|0;le(e+17>>0|0,m|0,1,0);h=ft(p|0,h|0,18)|0;p=P;m=ht(f|0,l|0,3)|0;P|p;le(e+18>>0|0,m|h|0,1,0);h=ft(f|0,l|0,5)|0;le(e+19>>0|0,h|0,1,0);l=ft(f|0,l|0,13)|0;le(e+20>>0|0,l|0,1,0);le(e+21>>0|0,c|0,1,0);l=ft(c|0,s|0,8)|0;le(e+22>>0|0,l|0,1,0);s=ft(c|0,s|0,16)|0;c=P;l=ht(u|0,n|0,5)|0;P|c;le(e+23>>0|0,l|s|0,1,0);s=ft(u|0,n|0,3)|0;le(e+24>>0|0,s|0,1,0);s=ft(u|0,n|0,11)|0;le(e+25>>0|0,s|0,1,0);n=ft(u|0,n|0,19)|0;u=P;s=ht(i|0,a|0,2)|0;P|u;le(e+26>>0|0,s|n|0,1,0);n=ft(i|0,a|0,6)|0;le(e+27>>0|0,n|0,1,0);a=ft(i|0,a|0,14)|0;i=P;n=ht(r|0,t|0,7)|0;i|P;le(e+28>>0|0,a|n|0,1,0);n=ft(r|0,t|0,1)|0;le(e+29>>0|0,n|0,1,0);n=ft(r|0,t|0,9)|0;le(e+30>>0|0,n|0,1,0);t=ft(r|0,t|0,17)|0;le(e+31>>0|0,t|0,1,0);d=o;return}function tt(e,t,r){e=e|0;t=t|0;r=r|0;var o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0;o=d;Z=ue(t+2>>0|0,1,0,0)|0|0;p=ue(t>>0|0,1,0,1)|0|0;z=ht(ue(t+1>>0|0,1,0,1)|0|0|0,0,8)|0;b=P;Z=Z&255;V=ht(Z|0,0,16)|0;j=ht(ue(t+3>>0|0,1,0,1)|0|0|0,0,8)|0;Y=P;W=ht(ue(t+4>>0|0,1,0,1)|0|0|0,0,16)|0;Y=Y|P;B=ue(t+5>>0|0,1,0,1)|0|0;a=ht(B|0,0,24)|0;Y=ft(j|Z|W|a|0,Y|P|0,5)|0;a=ue(t+7>>0|0,1,0,0)|0|0;W=ht(ue(t+6>>0|0,1,0,1)|0|0|0,0,8)|0;Z=P;a=a&255;j=ht(a|0,0,16)|0;Z=ft(W|B|j|0,Z|P|0,2)|0;j=ht(ue(t+8>>0|0,1,0,1)|0|0|0,0,8)|0;B=P;W=ht(ue(t+9>>0|0,1,0,1)|0|0|0,0,16)|0;B=B|P;C=ue(t+10>>0|0,1,0,1)|0|0;i=ht(C|0,0,24)|0;B=ft(j|a|W|i|0,B|P|0,7)|0;i=ht(ue(t+11>>0|0,1,0,1)|0|0|0,0,8)|0;W=P;a=ht(ue(t+12>>0|0,1,0,1)|0|0|0,0,16)|0;W=W|P;j=ue(t+13>>0|0,1,0,1)|0|0;k=ht(j|0,0,24)|0;W=ft(i|C|a|k|0,W|P|0,4)|0;k=ue(t+15>>0|0,1,0,0)|0|0;a=ht(ue(t+14>>0|0,1,0,1)|0|0|0,0,8)|0;C=P;k=k&255;i=ht(k|0,0,16)|0;C=ft(a|j|i|0,C|P|0,1)|0;i=ht(ue(t+16>>0|0,1,0,1)|0|0|0,0,8)|0;j=P;a=ht(ue(t+17>>0|0,1,0,1)|0|0|0,0,16)|0;j=j|P;H=ue(t+18>>0|0,1,0,1)|0|0;F=ht(H|0,0,24)|0;j=ft(i|k|a|F|0,j|P|0,6)|0;F=ue(t+20>>0|0,1,0,0)|0|0;a=ht(ue(t+19>>0|0,1,0,1)|0|0|0,0,8)|0;k=P;F=ht(F&255|0,0,16)|0;k=ft(a|H|F|0,k|P|0,3)|0;F=P;H=ue(t+23>>0|0,1,0,0)|0|0;a=ue(t+21>>0|0,1,0,1)|0|0;i=ht(ue(t+22>>0|0,1,0,1)|0|0|0,0,8)|0;s=P;H=H&255;c=ht(H|0,0,16)|0;J=ht(ue(t+24>>0|0,1,0,1)|0|0|0,0,8)|0;A=P;$=ht(ue(t+25>>0|0,1,0,1)|0|0|0,0,16)|0;A=A|P;S=ue(t+26>>0|0,1,0,1)|0|0;Q=ht(S|0,0,24)|0;A=ft(J|H|$|Q|0,A|P|0,5)|0;Q=ue(t+28>>0|0,1,0,0)|0|0;$=ht(ue(t+27>>0|0,1,0,1)|0|0|0,0,8)|0;H=P;Q=Q&255;J=ht(Q|0,0,16)|0;H=ft($|S|J|0,H|P|0,2)|0;J=ht(ue(t+29>>0|0,1,0,1)|0|0|0,0,8)|0;S=P;$=ht(ue(t+30>>0|0,1,0,1)|0|0|0,0,16)|0;S=S|P;K=ht(ue(t+31>>0|0,1,0,1)|0|0|0,0,24)|0;S=ft(J|Q|$|K|0,S|P|0,7)|0;K=P;$=ue(r+2>>0|0,1,0,0)|0|0;Q=ue(r>>0|0,1,0,1)|0|0;J=ht(ue(r+1>>0|0,1,0,1)|0|0|0,0,8)|0;X=P;$=$&255;v=ht($|0,0,16)|0;U=ht(ue(r+3>>0|0,1,0,1)|0|0|0,0,8)|0;g=P;G=ht(ue(r+4>>0|0,1,0,1)|0|0|0,0,16)|0;g=g|P;M=ue(r+5>>0|0,1,0,1)|0|0;t=ht(M|0,0,24)|0;g=ft(U|$|G|t|0,g|P|0,5)|0;t=ue(r+7>>0|0,1,0,0)|0|0;G=ht(ue(r+6>>0|0,1,0,1)|0|0|0,0,8)|0;$=P;t=t&255;U=ht(t|0,0,16)|0;$=ft(G|M|U|0,$|P|0,2)|0;U=ht(ue(r+8>>0|0,1,0,1)|0|0|0,0,8)|0;M=P;G=ht(ue(r+9>>0|0,1,0,1)|0|0|0,0,16)|0;M=M|P;l=ue(r+10>>0|0,1,0,1)|0|0;q=ht(l|0,0,24)|0;M=ft(U|t|G|q|0,M|P|0,7)|0;q=ht(ue(r+11>>0|0,1,0,1)|0|0|0,0,8)|0;G=P;t=ht(ue(r+12>>0|0,1,0,1)|0|0|0,0,16)|0;G=G|P;U=ue(r+13>>0|0,1,0,1)|0|0;D=ht(U|0,0,24)|0;G=ft(q|l|t|D|0,G|P|0,4)|0;D=ue(r+15>>0|0,1,0,0)|0|0;t=ht(ue(r+14>>0|0,1,0,1)|0|0|0,0,8)|0;l=P;D=D&255;q=ht(D|0,0,16)|0;l=ft(t|U|q|0,l|P|0,1)|0;q=ht(ue(r+16>>0|0,1,0,1)|0|0|0,0,8)|0;U=P;t=ht(ue(r+17>>0|0,1,0,1)|0|0|0,0,16)|0;U=U|P;T=ue(r+18>>0|0,1,0,1)|0|0;n=ht(T|0,0,24)|0;U=ft(q|D|t|n|0,U|P|0,6)|0;n=ue(r+20>>0|0,1,0,0)|0|0;t=ht(ue(r+19>>0|0,1,0,1)|0|0|0,0,8)|0;D=P;n=ht(n&255|0,0,16)|0;D=ft(t|T|n|0,D|P|0,3)|0;n=P;T=ue(r+23>>0|0,1,0,0)|0|0;t=ue(r+21>>0|0,1,0,1)|0|0;q=ht(ue(r+22>>0|0,1,0,1)|0|0|0,0,8)|0;L=P;T=T&255;x=ht(T|0,0,16)|0;u=ht(ue(r+24>>0|0,1,0,1)|0|0|0,0,8)|0;m=P;w=ht(ue(r+25>>0|0,1,0,1)|0|0|0,0,16)|0;m=m|P;y=ue(r+26>>0|0,1,0,1)|0|0;I=ht(y|0,0,24)|0;m=ft(u|T|w|I|0,m|P|0,5)|0;I=ue(r+28>>0|0,1,0,0)|0|0;w=ht(ue(r+27>>0|0,1,0,1)|0|0|0,0,8)|0;T=P;I=I&255;u=ht(I|0,0,16)|0;T=ft(w|y|u|0,T|P|0,2)|0;u=ht(ue(r+29>>0|0,1,0,1)|0|0|0,0,8)|0;y=P;w=ht(ue(r+30>>0|0,1,0,1)|0|0|0,0,16)|0;y=y|P;E=ht(ue(r+31>>0|0,1,0,1)|0|0|0,0,24)|0;y=ft(u|I|w|E|0,y|P|0,7)|0;E=P;X=lt(z|p|V&2031616|0,b|0,J|Q|v&2031616|0,X|0)|0;v=P;g=lt(Y&2097151|0,0,g&2097151|0,0)|0;Y=P;$=lt(Z&2097151|0,0,$&2097151|0,0)|0;Z=P;M=lt(B&2097151|0,0,M&2097151|0,0)|0;B=P;G=lt(W&2097151|0,0,G&2097151|0,0)|0;W=P;l=lt(C&2097151|0,0,l&2097151|0,0)|0;C=P;U=lt(j&2097151|0,0,U&2097151|0,0)|0;j=P;n=lt(k|0,F|0,D|0,n|0)|0;D=P;L=lt(i|a|c&2031616|0,s|0,q|t|x&2031616|0,L|0)|0;x=P;m=lt(A&2097151|0,0,m&2097151|0,0)|0;A=P;T=lt(H&2097151|0,0,T&2097151|0,0)|0;t=P;E=lt(S|0,K|0,y|0,E|0)|0;y=P;K=ct(X|0,v|0,1048576,0)|0;K=ut(K|0,P|0,21)|0;S=P;Y=ct(g|0,Y|0,K|0,S|0)|0;g=P;S=ht(K|0,S|0,21)|0;S=lt(X|0,v|0,S|0,P|0)|0;v=P;X=ct($|0,Z|0,1048576,0)|0;X=ut(X|0,P|0,21)|0;K=P;B=ct(M|0,B|0,X|0,K|0)|0;M=P;K=ht(X|0,K|0,21)|0;X=P;H=ct(G|0,W|0,1048576,0)|0;H=ut(H|0,P|0,21)|0;q=P;C=ct(l|0,C|0,H|0,q|0)|0;l=P;q=ht(H|0,q|0,21)|0;H=P;s=ct(U|0,j|0,1048576,0)|0;s=ut(s|0,P|0,21)|0;c=P;D=ct(n|0,D|0,s|0,c|0)|0;n=P;c=ht(s|0,c|0,21)|0;s=P;a=ct(L|0,x|0,1048576,0)|0;a=ut(a|0,P|0,21)|0;i=P;A=ct(m|0,A|0,a|0,i|0)|0;m=P;i=ht(a|0,i|0,21)|0;a=P;F=ct(T|0,t|0,1048576,0)|0;F=ut(F|0,P|0,21)|0;k=P;y=ct(E|0,y|0,F|0,k|0)|0;E=P;k=ht(F|0,k|0,21)|0;F=P;Q=ct(Y|0,g|0,1048576,0)|0;Q=ut(Q|0,P|0,21)|0;J=P;b=ht(Q|0,J|0,21)|0;b=lt(Y|0,g|0,b|0,P|0)|0;g=P;Y=ct(B|0,M|0,1048576,0)|0;Y=ut(Y|0,P|0,21)|0;V=P;p=ht(Y|0,V|0,21)|0;p=lt(B|0,M|0,p|0,P|0)|0;M=P;B=ct(C|0,l|0,1048576,0)|0;B=ut(B|0,P|0,21)|0;z=P;w=ht(B|0,z|0,21)|0;w=lt(C|0,l|0,w|0,P|0)|0;l=P;C=ct(D|0,n|0,1048576,0)|0;C=ut(C|0,P|0,21)|0;I=P;u=ht(C|0,I|0,21)|0;u=lt(D|0,n|0,u|0,P|0)|0;n=P;D=ct(A|0,m|0,1048576,0)|0;D=ut(D|0,P|0,21)|0;N=P;O=ht(D|0,N|0,21)|0;O=lt(A|0,m|0,O|0,P|0)|0;m=P;A=ct(y|0,E|0,1048576,0)|0;A=ut(A|0,P|0,21)|0;f=P;r=ht(A|0,f|0,21)|0;r=lt(y|0,E|0,r|0,P|0)|0;E=P;y=yt(A|0,f|0,666643,0)|0;v=ct(y|0,P|0,S|0,v|0)|0;S=P;y=yt(A|0,f|0,470296,0)|0;y=ct(b|0,g|0,y|0,P|0)|0;g=P;b=yt(A|0,f|0,654183,0)|0;R=P;_=yt(A|0,f|0,-997805,-1)|0;_=ct(p|0,M|0,_|0,P|0)|0;M=P;p=yt(A|0,f|0,136657,0)|0;h=P;f=yt(A|0,f|0,-683901,-1)|0;f=ct(w|0,l|0,f|0,P|0)|0;l=P;w=ut(v|0,S|0,21)|0;A=P;g=ct(y|0,g|0,w|0,A|0)|0;y=P;A=ht(w|0,A|0,21)|0;A=lt(v|0,S|0,A|0,P|0)|0;S=P;v=ut(g|0,y|0,21)|0;w=P;Z=ct(Q|0,J|0,$|0,Z|0)|0;X=lt(Z|0,P|0,K|0,X|0)|0;R=ct(X|0,P|0,b|0,R|0)|0;R=ct(R|0,P|0,v|0,w|0)|0;b=P;w=ht(v|0,w|0,21)|0;w=lt(g|0,y|0,w|0,P|0)|0;y=P;g=ut(R|0,b|0,21)|0;v=P;M=ct(_|0,M|0,g|0,v|0)|0;_=P;v=ht(g|0,v|0,21)|0;v=lt(R|0,b|0,v|0,P|0)|0;b=P;R=ut(M|0,_|0,21)|0;g=P;V=ct(G|0,W|0,Y|0,V|0)|0;H=lt(V|0,P|0,q|0,H|0)|0;h=ct(H|0,P|0,p|0,h|0)|0;h=ct(h|0,P|0,R|0,g|0)|0;p=P;g=ht(R|0,g|0,21)|0;g=lt(M|0,_|0,g|0,P|0)|0;_=P;M=ut(h|0,p|0,21)|0;R=P;l=ct(f|0,l|0,M|0,R|0)|0;f=P;R=ht(M|0,R|0,21)|0;R=lt(h|0,p|0,R|0,P|0)|0;p=P;h=ut(l|0,f|0,21)|0;M=P;z=ct(U|0,j|0,B|0,z|0)|0;s=lt(z|0,P|0,c|0,s|0)|0;s=ct(s|0,P|0,h|0,M|0)|0;c=P;M=ht(h|0,M|0,21)|0;M=lt(l|0,f|0,M|0,P|0)|0;f=P;l=ut(s|0,c|0,21)|0;h=P;n=ct(l|0,h|0,u|0,n|0)|0;u=P;h=ht(l|0,h|0,21)|0;h=lt(s|0,c|0,h|0,P|0)|0;c=P;s=ut(n|0,u|0,21)|0;l=P;x=ct(C|0,I|0,L|0,x|0)|0;a=lt(x|0,P|0,i|0,a|0)|0;a=ct(a|0,P|0,s|0,l|0)|0;i=P;l=ht(s|0,l|0,21)|0;l=lt(n|0,u|0,l|0,P|0)|0;u=P;n=ut(a|0,i|0,21)|0;s=P;m=ct(n|0,s|0,O|0,m|0)|0;O=P;s=ht(n|0,s|0,21)|0;s=lt(a|0,i|0,s|0,P|0)|0;i=P;a=ut(m|0,O|0,21)|0;n=P;t=ct(D|0,N|0,T|0,t|0)|0;F=lt(t|0,P|0,k|0,F|0)|0;F=ct(F|0,P|0,a|0,n|0)|0;k=P;n=ht(a|0,n|0,21)|0;n=lt(m|0,O|0,n|0,P|0)|0;O=P;m=ut(F|0,k|0,21)|0;a=P;E=ct(m|0,a|0,r|0,E|0)|0;r=P;a=ht(m|0,a|0,21)|0;a=lt(F|0,k|0,a|0,P|0)|0;k=P;F=ut(E|0,r|0,21)|0;m=P;t=ht(F|0,m|0,21)|0;t=lt(E|0,r|0,t|0,P|0)|0;r=P;E=yt(F|0,m|0,666643,0)|0;S=ct(E|0,P|0,A|0,S|0)|0;A=P;E=yt(F|0,m|0,470296,0)|0;E=ct(w|0,y|0,E|0,P|0)|0;y=P;w=yt(F|0,m|0,654183,0)|0;w=ct(v|0,b|0,w|0,P|0)|0;b=P;v=yt(F|0,m|0,-997805,-1)|0;v=ct(g|0,_|0,v|0,P|0)|0;_=P;g=yt(F|0,m|0,136657,0)|0;g=ct(R|0,p|0,g|0,P|0)|0;p=P;m=yt(F|0,m|0,-683901,-1)|0;m=ct(M|0,f|0,m|0,P|0)|0;f=P;M=ut(S|0,A|0,21)|0;F=P;y=ct(E|0,y|0,M|0,F|0)|0;E=P;F=ht(M|0,F|0,21)|0;F=lt(S|0,A|0,F|0,P|0)|0;A=P;S=ut(y|0,E|0,21)|0;M=P;b=ct(w|0,b|0,S|0,M|0)|0;w=P;M=ht(S|0,M|0,21)|0;M=lt(y|0,E|0,M|0,P|0)|0;E=P;y=ut(b|0,w|0,21)|0;S=P;_=ct(v|0,_|0,y|0,S|0)|0;v=P;S=ht(y|0,S|0,21)|0;S=lt(b|0,w|0,S|0,P|0)|0;w=P;b=ut(_|0,v|0,21)|0;y=P;p=ct(g|0,p|0,b|0,y|0)|0;g=P;y=ht(b|0,y|0,21)|0;y=lt(_|0,v|0,y|0,P|0)|0;v=P;_=ut(p|0,g|0,21)|0;b=P;f=ct(m|0,f|0,_|0,b|0)|0;m=P;b=ht(_|0,b|0,21)|0;b=lt(p|0,g|0,b|0,P|0)|0;g=P;p=ut(f|0,m|0,21)|0;_=P;c=ct(p|0,_|0,h|0,c|0)|0;h=P;_=ht(p|0,_|0,21)|0;_=lt(f|0,m|0,_|0,P|0)|0;m=P;f=ut(c|0,h|0,21)|0;p=P;u=ct(f|0,p|0,l|0,u|0)|0;l=P;p=ht(f|0,p|0,21)|0;p=lt(c|0,h|0,p|0,P|0)|0;h=P;c=ut(u|0,l|0,21)|0;f=P;i=ct(c|0,f|0,s|0,i|0)|0;s=P;f=ht(c|0,f|0,21)|0;f=lt(u|0,l|0,f|0,P|0)|0;l=P;u=ut(i|0,s|0,21)|0;c=P;O=ct(u|0,c|0,n|0,O|0)|0;n=P;c=ht(u|0,c|0,21)|0;c=lt(i|0,s|0,c|0,P|0)|0;s=P;i=ut(O|0,n|0,21)|0;u=P;k=ct(i|0,u|0,a|0,k|0)|0;a=P;u=ht(i|0,u|0,21)|0;u=lt(O|0,n|0,u|0,P|0)|0;n=P;O=ut(k|0,a|0,21)|0;i=P;r=ct(O|0,i|0,t|0,r|0)|0;t=P;i=ht(O|0,i|0,21)|0;i=lt(k|0,a|0,i|0,P|0)|0;a=P;le(e>>0|0,F|0,1,0);k=ft(F|0,A|0,8)|0;le(e+1>>0|0,k|0,1,0);A=ft(F|0,A|0,16)|0;F=P;k=ht(M|0,E|0,5)|0;P|F;le(e+2>>0|0,k|A|0,1,0);A=ft(M|0,E|0,3)|0;le(e+3>>0|0,A|0,1,0);A=ft(M|0,E|0,11)|0;le(e+4>>0|0,A|0,1,0);E=ft(M|0,E|0,19)|0;M=P;A=ht(S|0,w|0,2)|0;P|M;le(e+5>>0|0,A|E|0,1,0);E=ft(S|0,w|0,6)|0;le(e+6>>0|0,E|0,1,0);w=ft(S|0,w|0,14)|0;S=P;E=ht(y|0,v|0,7)|0;P|S;le(e+7>>0|0,E|w|0,1,0);w=ft(y|0,v|0,1)|0;le(e+8>>0|0,w|0,1,0);w=ft(y|0,v|0,9)|0;le(e+9>>0|0,w|0,1,0);v=ft(y|0,v|0,17)|0;y=P;w=ht(b|0,g|0,4)|0;P|y;le(e+10>>0|0,w|v|0,1,0);v=ft(b|0,g|0,4)|0;le(e+11>>0|0,v|0,1,0);v=ft(b|0,g|0,12)|0;le(e+12>>0|0,v|0,1,0);g=ft(b|0,g|0,20)|0;b=P;v=ht(_|0,m|0,1)|0;P|b;le(e+13>>0|0,v|g|0,1,0);g=ft(_|0,m|0,7)|0;le(e+14>>0|0,g|0,1,0);m=ft(_|0,m|0,15)|0;_=P;g=ht(p|0,h|0,6)|0;P|_;le(e+15>>0|0,g|m|0,1,0);m=ft(p|0,h|0,2)|0;le(e+16>>0|0,m|0,1,0);m=ft(p|0,h|0,10)|0;le(e+17>>0|0,m|0,1,0);h=ft(p|0,h|0,18)|0;p=P;m=ht(f|0,l|0,3)|0;P|p;le(e+18>>0|0,m|h|0,1,0);h=ft(f|0,l|0,5)|0;le(e+19>>0|0,h|0,1,0);l=ft(f|0,l|0,13)|0;le(e+20>>0|0,l|0,1,0);le(e+21>>0|0,c|0,1,0);l=ft(c|0,s|0,8)|0;le(e+22>>0|0,l|0,1,0);s=ft(c|0,s|0,16)|0;c=P;l=ht(u|0,n|0,5)|0;P|c;le(e+23>>0|0,l|s|0,1,0);s=ft(u|0,n|0,3)|0;le(e+24>>0|0,s|0,1,0);s=ft(u|0,n|0,11)|0;le(e+25>>0|0,s|0,1,0);n=ft(u|0,n|0,19)|0;u=P;s=ht(i|0,a|0,2)|0;P|u;le(e+26>>0|0,s|n|0,1,0);n=ft(i|0,a|0,6)|0;le(e+27>>0|0,n|0,1,0);a=ft(i|0,a|0,14)|0;i=P;n=ht(r|0,t|0,7)|0;i|P;le(e+28>>0|0,a|n|0,1,0);n=ft(r|0,t|0,1)|0;le(e+29>>0|0,n|0,1,0);n=ft(r|0,t|0,9)|0;le(e+30>>0|0,n|0,1,0);t=ft(r|0,t|0,17)|0;le(e+31>>0|0,t|0,1,0);d=o;return}function rt(e,t,r,o){e=e|0;t=t|0;r=r|0;o=o|0;var n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0,q=0,V=0,Y=0,W=0,G=0,X=0,K=0,Z=0,$=0,J=0,Q=0,ee=0,te=0,re=0,oe=0,ne=0,ae=0,ie=0,se=0,ce=0,de=0,fe=0,he=0,me=0,pe=0,ge=0,_e=0,ve=0,be=0,we=0,ye=0,Ee=0,Se=0,Ae=0,Me=0,ke=0,Fe=0,Oe=0,Re=0,Te=0,Ne=0,Pe=0,De=0,xe=0,Le=0,Ie=0,Ce=0,ze=0,Be=0,je=0,Ue=0,He=0,qe=0,Ve=0,Ye=0,We=0,Ge=0,Xe=0,Ke=0,Ze=0,$e=0,Je=0,Qe=0,et=0,tt=0,rt=0,ot=0,nt=0,at=0,it=0,st=0,dt=0,mt=0,pt=0,gt=0,_t=0,vt=0,bt=0,wt=0,Et=0,St=0,At=0,Mt=0,kt=0,Ft=0,Ot=0,Rt=0,Tt=0,Nt=0,Pt=0,Dt=0,xt=0,Lt=0,It=0,Ct=0,zt=0,Bt=0,jt=0,Ut=0,Ht=0,qt=0,Vt=0,Yt=0,Wt=0,Gt=0,Xt=0,Kt=0,Zt=0,$t=0,Jt=0,Qt=0,er=0,tr=0,rr=0,or=0,nr=0,ar=0,ir=0,sr=0,ur=0,lr=0,cr=0,dr=0,fr=0,hr=0,mr=0,pr=0,gr=0,_r=0,vr=0,br=0,wr=0,yr=0,Er=0,Sr=0,Ar=0,Mr=0,kr=0,Fr=0;n=d;g=ue(t+2>>0|0,1,0,0)|0|0;He=ue(t>>0|0,1,0,1)|0|0;kt=ht(ue(t+1>>0|0,1,0,1)|0|0|0,0,8)|0;Mt=P;g=g&255;J=ht(g|0,0,16)|0;J=kt|He|J&2031616;He=ht(ue(t+3>>0|0,1,0,1)|0|0|0,0,8)|0;kt=P;m=ht(ue(t+4>>0|0,1,0,1)|0|0|0,0,16)|0;kt=kt|P;w=ue(t+5>>0|0,1,0,1)|0|0;$=ht(w|0,0,24)|0;kt=ft(He|g|m|$|0,kt|P|0,5)|0;kt=kt&2097151;$=ue(t+7>>0|0,1,0,0)|0|0;m=ht(ue(t+6>>0|0,1,0,1)|0|0|0,0,8)|0;g=P;$=$&255;He=ht($|0,0,16)|0;g=ft(m|w|He|0,g|P|0,2)|0;g=g&2097151;He=ht(ue(t+8>>0|0,1,0,1)|0|0|0,0,8)|0;w=P;m=ht(ue(t+9>>0|0,1,0,1)|0|0|0,0,16)|0;w=w|P;u=ue(t+10>>0|0,1,0,1)|0|0;E=ht(u|0,0,24)|0;w=ft(He|$|m|E|0,w|P|0,7)|0;w=w&2097151;E=ht(ue(t+11>>0|0,1,0,1)|0|0|0,0,8)|0;m=P;$=ht(ue(t+12>>0|0,1,0,1)|0|0|0,0,16)|0;m=m|P;He=ue(t+13>>0|0,1,0,1)|0|0;he=ht(He|0,0,24)|0;m=ft(E|u|$|he|0,m|P|0,4)|0;m=m&2097151;he=ue(t+15>>0|0,1,0,0)|0|0;$=ht(ue(t+14>>0|0,1,0,1)|0|0|0,0,8)|0;u=P;he=he&255;E=ht(he|0,0,16)|0;u=ft($|He|E|0,u|P|0,1)|0;u=u&2097151;E=ht(ue(t+16>>0|0,1,0,1)|0|0|0,0,8)|0;He=P;$=ht(ue(t+17>>0|0,1,0,1)|0|0|0,0,16)|0;He=He|P;Pe=ue(t+18>>0|0,1,0,1)|0|0;Ae=ht(Pe|0,0,24)|0;He=ft(E|he|$|Ae|0,He|P|0,6)|0;He=He&2097151;Ae=ue(t+20>>0|0,1,0,0)|0|0;$=ht(ue(t+19>>0|0,1,0,1)|0|0|0,0,8)|0;he=P;Ae=ht(Ae&255|0,0,16)|0;he=ft($|Pe|Ae|0,he|P|0,3)|0;Ae=P;Pe=ue(t+23>>0|0,1,0,0)|0|0;$=ue(t+21>>0|0,1,0,1)|0|0;E=ht(ue(t+22>>0|0,1,0,1)|0|0|0,0,8)|0;gt=P;Pe=Pe&255;Be=ht(Pe|0,0,16)|0;Be=E|$|Be&2031616;$=ht(ue(t+24>>0|0,1,0,1)|0|0|0,0,8)|0;E=P;st=ht(ue(t+25>>0|0,1,0,1)|0|0|0,0,16)|0;E=E|P;S=ue(t+26>>0|0,1,0,1)|0|0;We=ht(S|0,0,24)|0;E=ft($|Pe|st|We|0,E|P|0,5)|0;E=E&2097151;We=ue(t+28>>0|0,1,0,0)|0|0;st=ht(ue(t+27>>0|0,1,0,1)|0|0|0,0,8)|0;Pe=P;We=We&255;$=ht(We|0,0,16)|0;Pe=ft(st|S|$|0,Pe|P|0,2)|0;Pe=Pe&2097151;$=ht(ue(t+29>>0|0,1,0,1)|0|0|0,0,8)|0;S=P;st=ht(ue(t+30>>0|0,1,0,1)|0|0|0,0,16)|0;S=S|P;De=ht(ue(t+31>>0|0,1,0,1)|0|0|0,0,24)|0;S=ft($|We|st|De|0,S|P|0,7)|0;De=P;st=ue(r+2>>0|0,1,0,0)|0|0;We=ue(r>>0|0,1,0,1)|0|0;$=ht(ue(r+1>>0|0,1,0,1)|0|0|0,0,8)|0;Nt=P;st=st&255;Tt=ht(st|0,0,16)|0;Tt=$|We|Tt&2031616;We=ht(ue(r+3>>0|0,1,0,1)|0|0|0,0,8)|0;$=P;de=ht(ue(r+4>>0|0,1,0,1)|0|0|0,0,16)|0;$=$|P;_=ue(r+5>>0|0,1,0,1)|0|0;Mr=ht(_|0,0,24)|0;$=ft(We|st|de|Mr|0,$|P|0,5)|0;$=$&2097151;Mr=ue(r+7>>0|0,1,0,0)|0|0;de=ht(ue(r+6>>0|0,1,0,1)|0|0|0,0,8)|0;st=P;Mr=Mr&255;We=ht(Mr|0,0,16)|0;st=ft(de|_|We|0,st|P|0,2)|0;st=st&2097151;We=ht(ue(r+8>>0|0,1,0,1)|0|0|0,0,8)|0;_=P;de=ht(ue(r+9>>0|0,1,0,1)|0|0|0,0,16)|0;_=_|P;b=ue(r+10>>0|0,1,0,1)|0|0;K=ht(b|0,0,24)|0;_=ft(We|Mr|de|K|0,_|P|0,7)|0;_=_&2097151;K=ht(ue(r+11>>0|0,1,0,1)|0|0|0,0,8)|0;de=P;Mr=ht(ue(r+12>>0|0,1,0,1)|0|0|0,0,16)|0;de=de|P;We=ue(r+13>>0|0,1,0,1)|0|0;Fr=ht(We|0,0,24)|0;de=ft(K|b|Mr|Fr|0,de|P|0,4)|0;de=de&2097151;Fr=ue(r+15>>0|0,1,0,0)|0|0;Mr=ht(ue(r+14>>0|0,1,0,1)|0|0|0,0,8)|0;b=P;Fr=Fr&255;K=ht(Fr|0,0,16)|0;b=ft(Mr|We|K|0,b|P|0,1)|0;b=b&2097151;K=ht(ue(r+16>>0|0,1,0,1)|0|0|0,0,8)|0;We=P;Mr=ht(ue(r+17>>0|0,1,0,1)|0|0|0,0,16)|0;We=We|P;T=ue(r+18>>0|0,1,0,1)|0|0;k=ht(T|0,0,24)|0;We=ft(K|Fr|Mr|k|0,We|P|0,6)|0;We=We&2097151;k=ue(r+20>>0|0,1,0,0)|0|0;Mr=ht(ue(r+19>>0|0,1,0,1)|0|0|0,0,8)|0;Fr=P;k=ht(k&255|0,0,16)|0;Fr=ft(Mr|T|k|0,Fr|P|0,3)|0;k=P;T=ue(r+23>>0|0,1,0,0)|0|0;Mr=ue(r+21>>0|0,1,0,1)|0|0;K=ht(ue(r+22>>0|0,1,0,1)|0|0|0,0,8)|0;mt=P;T=T&255;Me=ht(T|0,0,16)|0;Me=K|Mr|Me&2031616;Mr=ht(ue(r+24>>0|0,1,0,1)|0|0|0,0,8)|0;K=P;xe=ht(ue(r+25>>0|0,1,0,1)|0|0|0,0,16)|0;K=K|P;Ne=ue(r+26>>0|0,1,0,1)|0|0;ge=ht(Ne|0,0,24)|0;K=ft(Mr|T|xe|ge|0,K|P|0,5)|0;K=K&2097151;ge=ue(r+28>>0|0,1,0,0)|0|0;xe=ht(ue(r+27>>0|0,1,0,1)|0|0|0,0,8)|0;T=P;ge=ge&255;Mr=ht(ge|0,0,16)|0;T=ft(xe|Ne|Mr|0,T|P|0,2)|0;T=T&2097151;Mr=ht(ue(r+29>>0|0,1,0,1)|0|0|0,0,8)|0;Ne=P;xe=ht(ue(r+30>>0|0,1,0,1)|0|0|0,0,16)|0;Ne=Ne|P;ae=ht(ue(r+31>>0|0,1,0,1)|0|0|0,0,24)|0;Ne=ft(Mr|ge|xe|ae|0,Ne|P|0,7)|0;ae=P;xe=ue(o+2>>0|0,1,0,0)|0|0;ge=ue(o>>0|0,1,0,1)|0|0;Mr=ht(ue(o+1>>0|0,1,0,1)|0|0|0,0,8)|0;X=P;xe=xe&255;we=ht(xe|0,0,16)|0;C=ht(ue(o+3>>0|0,1,0,1)|0|0|0,0,8)|0;Fe=P;Ee=ht(ue(o+4>>0|0,1,0,1)|0|0|0,0,16)|0;Fe=Fe|P;pt=ue(o+5>>0|0,1,0,1)|0|0;D=ht(pt|0,0,24)|0;Fe=ft(C|xe|Ee|D|0,Fe|P|0,5)|0;D=ue(o+7>>0|0,1,0,0)|0|0;Ee=ht(ue(o+6>>0|0,1,0,1)|0|0|0,0,8)|0;xe=P;D=D&255;C=ht(D|0,0,16)|0;xe=ft(Ee|pt|C|0,xe|P|0,2)|0;C=ht(ue(o+8>>0|0,1,0,1)|0|0|0,0,8)|0;pt=P;Ee=ht(ue(o+9>>0|0,1,0,1)|0|0|0,0,16)|0;pt=pt|P;q=ue(o+10>>0|0,1,0,1)|0|0;xt=ht(q|0,0,24)|0;pt=ft(C|D|Ee|xt|0,pt|P|0,7)|0;xt=ht(ue(o+11>>0|0,1,0,1)|0|0|0,0,8)|0;Ee=P;D=ht(ue(o+12>>0|0,1,0,1)|0|0|0,0,16)|0;Ee=Ee|P;C=ue(o+13>>0|0,1,0,1)|0|0;z=ht(C|0,0,24)|0;Ee=ft(xt|q|D|z|0,Ee|P|0,4)|0;z=ue(o+15>>0|0,1,0,0)|0|0;D=ht(ue(o+14>>0|0,1,0,1)|0|0|0,0,8)|0;q=P;z=z&255;xt=ht(z|0,0,16)|0;q=ft(D|C|xt|0,q|P|0,1)|0;xt=ht(ue(o+16>>0|0,1,0,1)|0|0|0,0,8)|0;C=P;D=ht(ue(o+17>>0|0,1,0,1)|0|0|0,0,16)|0;C=C|P;ve=ue(o+18>>0|0,1,0,1)|0|0;F=ht(ve|0,0,24)|0;C=ft(xt|z|D|F|0,C|P|0,6)|0;F=ue(o+20>>0|0,1,0,0)|0|0;D=ht(ue(o+19>>0|0,1,0,1)|0|0|0,0,8)|0;z=P;F=ht(F&255|0,0,16)|0;z=ft(D|ve|F|0,z|P|0,3)|0;F=P;ve=ue(o+23>>0|0,1,0,0)|0|0;D=ue(o+21>>0|0,1,0,1)|0|0;xt=ht(ue(o+22>>0|0,1,0,1)|0|0|0,0,8)|0;Qe=P;ve=ve&255;Oe=ht(ve|0,0,16)|0;ye=ht(ue(o+24>>0|0,1,0,1)|0|0|0,0,8)|0;N=P;Te=ht(ue(o+25>>0|0,1,0,1)|0|0|0,0,16)|0;N=N|P;At=ue(o+26>>0|0,1,0,1)|0|0;Le=ht(At|0,0,24)|0;N=ft(ye|ve|Te|Le|0,N|P|0,5)|0;Le=ue(o+28>>0|0,1,0,0)|0|0;Te=ht(ue(o+27>>0|0,1,0,1)|0|0|0,0,8)|0;ve=P;Le=Le&255;ye=ht(Le|0,0,16)|0;ve=ft(Te|At|ye|0,ve|P|0,2)|0;ye=ht(ue(o+29>>0|0,1,0,1)|0|0|0,0,8)|0;At=P;Te=ht(ue(o+30>>0|0,1,0,1)|0|0|0,0,16)|0;At=At|P;o=ht(ue(o+31>>0|0,1,0,1)|0|0|0,0,24)|0;At=ft(ye|Le|Te|o|0,At|P|0,7)|0;o=P;Te=yt(Tt|0,Nt|0,J|0,Mt|0)|0;Te=lt(Mr|ge|we&2031616|0,X|0,Te|0,P|0)|0;X=P;we=yt($|0,0,J|0,Mt|0)|0;ge=P;Mr=yt(Tt|0,Nt|0,kt|0,0)|0;Mr=ct(we|0,ge|0,Mr|0,P|0)|0;ge=P;we=yt(st|0,0,J|0,Mt|0)|0;Le=P;ye=yt($|0,0,kt|0,0)|0;wr=P;fe=yt(Tt|0,Nt|0,g|0,0)|0;fe=ct(ye|0,wr|0,fe|0,P|0)|0;Le=ct(fe|0,P|0,we|0,Le|0)|0;Le=lt(xe&2097151|0,0,Le|0,P|0)|0;xe=P;we=yt(_|0,0,J|0,Mt|0)|0;fe=P;wr=yt(st|0,0,kt|0,0)|0;ye=P;Ar=yt($|0,0,g|0,0)|0;Sr=P;Er=yt(Tt|0,Nt|0,w|0,0)|0;yr=P;Ce=yt(de|0,0,J|0,Mt|0)|0;Se=P;dr=yt(_|0,0,kt|0,0)|0;H=P;hr=yt(st|0,0,g|0,0)|0;Ie=P;mr=yt($|0,0,w|0,0)|0;pr=P;fr=yt(Tt|0,Nt|0,m|0,0)|0;fr=ct(mr|0,pr|0,fr|0,P|0)|0;Ie=ct(fr|0,P|0,hr|0,Ie|0)|0;H=ct(Ie|0,P|0,dr|0,H|0)|0;Se=ct(H|0,P|0,Ce|0,Se|0)|0;Se=lt(Ee&2097151|0,0,Se|0,P|0)|0;Ee=P;Ce=yt(b|0,0,J|0,Mt|0)|0;H=P;dr=yt(de|0,0,kt|0,0)|0;Ie=P;hr=yt(_|0,0,g|0,0)|0;fr=P;pr=yt(st|0,0,w|0,0)|0;mr=P;br=yt($|0,0,m|0,0)|0;vr=P;_r=yt(Tt|0,Nt|0,u|0,0)|0;gr=P;B=yt(We|0,0,J|0,Mt|0)|0;I=P;Jt=yt(b|0,0,kt|0,0)|0;i=P;er=yt(de|0,0,g|0,0)|0;$t=P;rr=yt(_|0,0,w|0,0)|0;Qt=P;nr=yt(st|0,0,m|0,0)|0;tr=P;ar=yt($|0,0,u|0,0)|0;ir=P;or=yt(Tt|0,Nt|0,He|0,0)|0;or=ct(ar|0,ir|0,or|0,P|0)|0;tr=ct(or|0,P|0,nr|0,tr|0)|0;Qt=ct(tr|0,P|0,rr|0,Qt|0)|0;$t=ct(Qt|0,P|0,er|0,$t|0)|0;i=ct($t|0,P|0,Jt|0,i|0)|0;I=ct(i|0,P|0,B|0,I|0)|0;I=lt(C&2097151|0,0,I|0,P|0)|0;C=P;B=yt(Fr|0,k|0,J|0,Mt|0)|0;i=P;Jt=yt(We|0,0,kt|0,0)|0;$t=P;er=yt(b|0,0,g|0,0)|0;Qt=P;rr=yt(de|0,0,w|0,0)|0;tr=P;nr=yt(_|0,0,m|0,0)|0;or=P;ir=yt(st|0,0,u|0,0)|0;ar=P;cr=yt($|0,0,He|0,0)|0;lr=P;ur=yt(Tt|0,Nt|0,he|0,Ae|0)|0;sr=P;Re=yt(Me|0,mt|0,J|0,Mt|0)|0;Je=P;Lt=yt(Fr|0,k|0,kt|0,0)|0;It=P;Ct=yt(We|0,0,g|0,0)|0;zt=P;Bt=yt(b|0,0,w|0,0)|0;jt=P;Ut=yt(de|0,0,m|0,0)|0;Ht=P;qt=yt(_|0,0,u|0,0)|0;Vt=P;Yt=yt(st|0,0,He|0,0)|0;Wt=P;Xt=yt($|0,0,he|0,Ae|0)|0;Kt=P;Zt=yt(Tt|0,Nt|0,Be|0,gt|0)|0;Zt=ct(Xt|0,Kt|0,Zt|0,P|0)|0;Wt=ct(Zt|0,P|0,Yt|0,Wt|0)|0;Vt=ct(Wt|0,P|0,qt|0,Vt|0)|0;Ht=ct(Vt|0,P|0,Ut|0,Ht|0)|0;jt=ct(Ht|0,P|0,Bt|0,jt|0)|0;zt=ct(jt|0,P|0,Ct|0,zt|0)|0;It=ct(zt|0,P|0,Lt|0,It|0)|0;Je=ct(It|0,P|0,Re|0,Je|0)|0;Je=lt(xt|D|Oe&2031616|0,Qe|0,Je|0,P|0)|0;Qe=P;Oe=yt(K|0,0,J|0,Mt|0)|0;D=P;xt=yt(Me|0,mt|0,kt|0,0)|0;Re=P;It=yt(Fr|0,k|0,g|0,0)|0;Lt=P;zt=yt(We|0,0,w|0,0)|0;Ct=P;jt=yt(b|0,0,m|0,0)|0;Bt=P;Ht=yt(de|0,0,u|0,0)|0;Ut=P;Vt=yt(_|0,0,He|0,0)|0;qt=P;Wt=yt(st|0,0,he|0,Ae|0)|0;Yt=P;Zt=yt($|0,0,Be|0,gt|0)|0;Kt=P;Xt=yt(Tt|0,Nt|0,E|0,0)|0;Gt=P;Ze=yt(T|0,0,J|0,Mt|0)|0;be=P;pe=yt(K|0,0,kt|0,0)|0;$e=P;_t=yt(Me|0,mt|0,g|0,0)|0;me=P;ne=yt(Fr|0,k|0,w|0,0)|0;vt=P;Ve=yt(We|0,0,m|0,0)|0;c=P;nt=yt(b|0,0,u|0,0)|0;Ye=P;re=yt(de|0,0,He|0,0)|0;at=P;Xe=yt(_|0,0,he|0,Ae|0)|0;oe=P;ee=yt(st|0,0,Be|0,gt|0)|0;Ke=P;Pt=yt($|0,0,E|0,0)|0;Dt=P;r=yt(Tt|0,Nt|0,Pe|0,0)|0;r=ct(Pt|0,Dt|0,r|0,P|0)|0;Ke=ct(r|0,P|0,ee|0,Ke|0)|0;oe=ct(Ke|0,P|0,Xe|0,oe|0)|0;at=ct(oe|0,P|0,re|0,at|0)|0;Ye=ct(at|0,P|0,nt|0,Ye|0)|0;c=ct(Ye|0,P|0,Ve|0,c|0)|0;vt=ct(c|0,P|0,ne|0,vt|0)|0;me=ct(vt|0,P|0,_t|0,me|0)|0;$e=ct(me|0,P|0,pe|0,$e|0)|0;be=ct($e|0,P|0,Ze|0,be|0)|0;be=lt(ve&2097151|0,0,be|0,P|0)|0;ve=P;Mt=yt(Ne|0,ae|0,J|0,Mt|0)|0;J=P;Ze=yt(T|0,0,kt|0,0)|0;$e=P;pe=yt(K|0,0,g|0,0)|0;me=P;_t=yt(Me|0,mt|0,w|0,0)|0;vt=P;ne=yt(Fr|0,k|0,m|0,0)|0;c=P;Ve=yt(We|0,0,u|0,0)|0;Ye=P;nt=yt(b|0,0,He|0,0)|0;at=P;re=yt(de|0,0,he|0,Ae|0)|0;oe=P;Xe=yt(_|0,0,Be|0,gt|0)|0;Ke=P;ee=yt(st|0,0,E|0,0)|0;r=P;Dt=yt($|0,0,Pe|0,0)|0;Pt=P;Nt=yt(Tt|0,Nt|0,S|0,De|0)|0;Tt=P;kt=yt(Ne|0,ae|0,kt|0,0)|0;Ft=P;rt=yt(T|0,0,g|0,0)|0;y=P;se=yt(K|0,0,w|0,0)|0;ot=P;Ot=yt(Me|0,mt|0,m|0,0)|0;dt=P;a=yt(Fr|0,k|0,u|0,0)|0;Rt=P;wt=yt(We|0,0,He|0,0)|0;s=P;qe=yt(b|0,0,he|0,Ae|0)|0;bt=P;Ue=yt(de|0,0,Be|0,gt|0)|0;ie=P;Z=yt(_|0,0,E|0,0)|0;je=P;A=yt(st|0,0,Pe|0,0)|0;it=P;$=yt($|0,0,S|0,De|0)|0;$=ct(A|0,it|0,$|0,P|0)|0;je=ct($|0,P|0,Z|0,je|0)|0;ie=ct(je|0,P|0,Ue|0,ie|0)|0;bt=ct(ie|0,P|0,qe|0,bt|0)|0;s=ct(bt|0,P|0,wt|0,s|0)|0;Rt=ct(s|0,P|0,a|0,Rt|0)|0;dt=ct(Rt|0,P|0,Ot|0,dt|0)|0;ot=ct(dt|0,P|0,se|0,ot|0)|0;y=ct(ot|0,P|0,rt|0,y|0)|0;Ft=ct(y|0,P|0,kt|0,Ft|0)|0;kt=P;g=yt(Ne|0,ae|0,g|0,0)|0;y=P;rt=yt(T|0,0,w|0,0)|0;ot=P;se=yt(K|0,0,m|0,0)|0;dt=P;Ot=yt(Me|0,mt|0,u|0,0)|0;Rt=P;a=yt(Fr|0,k|0,He|0,0)|0;s=P;wt=yt(We|0,0,he|0,Ae|0)|0;bt=P;qe=yt(b|0,0,Be|0,gt|0)|0;ie=P;Ue=yt(de|0,0,E|0,0)|0;je=P;Z=yt(_|0,0,Pe|0,0)|0;$=P;st=yt(st|0,0,S|0,De|0)|0;it=P;w=yt(Ne|0,ae|0,w|0,0)|0;A=P;et=yt(T|0,0,m|0,0)|0;x=P;h=yt(K|0,0,u|0,0)|0;tt=P;te=yt(Me|0,mt|0,He|0,0)|0;Q=P;G=yt(Fr|0,k|0,he|0,Ae|0)|0;v=P;L=yt(We|0,0,Be|0,gt|0)|0;W=P;M=yt(b|0,0,E|0,0)|0;O=P;t=yt(de|0,0,Pe|0,0)|0;p=P;_=yt(_|0,0,S|0,De|0)|0;_=ct(t|0,p|0,_|0,P|0)|0;O=ct(_|0,P|0,M|0,O|0)|0;W=ct(O|0,P|0,L|0,W|0)|0;v=ct(W|0,P|0,G|0,v|0)|0;Q=ct(v|0,P|0,te|0,Q|0)|0;tt=ct(Q|0,P|0,h|0,tt|0)|0;x=ct(tt|0,P|0,et|0,x|0)|0;A=ct(x|0,P|0,w|0,A|0)|0;w=P;m=yt(Ne|0,ae|0,m|0,0)|0;x=P;et=yt(T|0,0,u|0,0)|0;tt=P;h=yt(K|0,0,He|0,0)|0;Q=P;te=yt(Me|0,mt|0,he|0,Ae|0)|0;v=P;G=yt(Fr|0,k|0,Be|0,gt|0)|0;W=P;L=yt(We|0,0,E|0,0)|0;O=P;M=yt(b|0,0,Pe|0,0)|0;_=P;de=yt(de|0,0,S|0,De|0)|0;p=P;t=yt(Ne|0,ae|0,u|0,0)|0;u=P;St=yt(T|0,0,He|0,0)|0;ce=P;U=yt(K|0,0,he|0,Ae|0)|0;Et=P;f=yt(Me|0,mt|0,Be|0,gt|0)|0;j=P;R=yt(Fr|0,k|0,E|0,0)|0;l=P;_e=yt(We|0,0,Pe|0,0)|0;Ge=P;b=yt(b|0,0,S|0,De|0)|0;b=ct(_e|0,Ge|0,b|0,P|0)|0;l=ct(b|0,P|0,R|0,l|0)|0;j=ct(l|0,P|0,f|0,j|0)|0;Et=ct(j|0,P|0,U|0,Et|0)|0;ce=ct(Et|0,P|0,St|0,ce|0)|0;u=ct(ce|0,P|0,t|0,u|0)|0;t=P;He=yt(Ne|0,ae|0,He|0,0)|0;ce=P;St=yt(T|0,0,he|0,Ae|0)|0;Et=P;U=yt(K|0,0,Be|0,gt|0)|0;j=P;f=yt(Me|0,mt|0,E|0,0)|0;l=P;R=yt(Fr|0,k|0,Pe|0,0)|0;b=P;We=yt(We|0,0,S|0,De|0)|0;Ge=P;Ae=yt(Ne|0,ae|0,he|0,Ae|0)|0;he=P;_e=yt(T|0,0,Be|0,gt|0)|0;ke=P;V=yt(K|0,0,E|0,0)|0;Y=P;ze=yt(Me|0,mt|0,Pe|0,0)|0;kr=P;k=yt(Fr|0,k|0,S|0,De|0)|0;k=ct(ze|0,kr|0,k|0,P|0)|0;Y=ct(k|0,P|0,V|0,Y|0)|0;ke=ct(Y|0,P|0,_e|0,ke|0)|0;he=ct(ke|0,P|0,Ae|0,he|0)|0;Ae=P;gt=yt(Ne|0,ae|0,Be|0,gt|0)|0;Be=P;ke=yt(T|0,0,E|0,0)|0;_e=P;Y=yt(K|0,0,Pe|0,0)|0;V=P;mt=yt(Me|0,mt|0,S|0,De|0)|0;Me=P;E=yt(Ne|0,ae|0,E|0,0)|0;k=P;kr=yt(T|0,0,Pe|0,0)|0;ze=P;K=yt(K|0,0,S|0,De|0)|0;K=ct(kr|0,ze|0,K|0,P|0)|0;k=ct(K|0,P|0,E|0,k|0)|0;E=P;Pe=yt(Ne|0,ae|0,Pe|0,0)|0;K=P;T=yt(T|0,0,S|0,De|0)|0;ze=P;De=lt(0,0,S|0,De|0)|0;De=yt(Ne|0,ae|0,De|0,P|0)|0;ae=P;Ne=ct(Te|0,X|0,1048576,0)|0;Ne=ut(Ne|0,P|0,21)|0;S=P;ge=lt(Ne|0,S|0,Mr|0,ge|0)|0;Fe=ct(ge|0,P|0,Fe&2097151|0,0)|0;ge=P;S=ht(Ne|0,S|0,21)|0;S=lt(Te|0,X|0,S|0,P|0)|0;X=P;Te=ct(Le|0,xe|0,1048576,0)|0;Te=ut(Te|0,P|0,21)|0;Ne=P;yr=ct(Ar|0,Sr|0,Er|0,yr|0)|0;ye=ct(yr|0,P|0,wr|0,ye|0)|0;fe=ct(ye|0,P|0,we|0,fe|0)|0;fe=lt(Te|0,Ne|0,fe|0,P|0)|0;pt=ct(fe|0,P|0,pt&2097151|0,0)|0;fe=P;Ne=ht(Te|0,Ne|0,21)|0;Te=P;we=ct(Se|0,Ee|0,1048576,0)|0;we=ut(we|0,P|0,21)|0;ye=P;gr=ct(br|0,vr|0,_r|0,gr|0)|0;mr=ct(gr|0,P|0,pr|0,mr|0)|0;fr=ct(mr|0,P|0,hr|0,fr|0)|0;Ie=ct(fr|0,P|0,dr|0,Ie|0)|0;H=ct(Ie|0,P|0,Ce|0,H|0)|0;H=lt(q&2097151|0,0,H|0,P|0)|0;H=ct(H|0,P|0,we|0,ye|0)|0;q=P;ye=ht(we|0,ye|0,21)|0;we=P;Ce=ct(I|0,C|0,1048576,0)|0;Ce=ut(Ce|0,P|0,21)|0;Ie=P;sr=ct(cr|0,lr|0,ur|0,sr|0)|0;ar=ct(sr|0,P|0,ir|0,ar|0)|0;or=ct(ar|0,P|0,nr|0,or|0)|0;tr=ct(or|0,P|0,rr|0,tr|0)|0;Qt=ct(tr|0,P|0,er|0,Qt|0)|0;$t=ct(Qt|0,P|0,Jt|0,$t|0)|0;i=ct($t|0,P|0,B|0,i|0)|0;i=lt(z|0,F|0,i|0,P|0)|0;i=ct(i|0,P|0,Ce|0,Ie|0)|0;F=P;Ie=ht(Ce|0,Ie|0,21)|0;Ce=P;z=ct(Je|0,Qe|0,1048576,0)|0;z=ut(z|0,P|0,21)|0;B=P;Gt=ct(Zt|0,Kt|0,Xt|0,Gt|0)|0;Yt=ct(Gt|0,P|0,Wt|0,Yt|0)|0;qt=ct(Yt|0,P|0,Vt|0,qt|0)|0;Ut=ct(qt|0,P|0,Ht|0,Ut|0)|0;Bt=ct(Ut|0,P|0,jt|0,Bt|0)|0;Ct=ct(Bt|0,P|0,zt|0,Ct|0)|0;Lt=ct(Ct|0,P|0,It|0,Lt|0)|0;Re=ct(Lt|0,P|0,xt|0,Re|0)|0;D=ct(Re|0,P|0,Oe|0,D|0)|0;D=lt(z|0,B|0,D|0,P|0)|0;N=ct(D|0,P|0,N&2097151|0,0)|0;D=P;B=ht(z|0,B|0,21)|0;z=P;Oe=ct(be|0,ve|0,1048576,0)|0;Oe=ut(Oe|0,P|0,21)|0;Re=P;Tt=ct(Dt|0,Pt|0,Nt|0,Tt|0)|0;r=ct(Tt|0,P|0,ee|0,r|0)|0;Ke=ct(r|0,P|0,Xe|0,Ke|0)|0;oe=ct(Ke|0,P|0,re|0,oe|0)|0;at=ct(oe|0,P|0,nt|0,at|0)|0;Ye=ct(at|0,P|0,Ve|0,Ye|0)|0;c=ct(Ye|0,P|0,ne|0,c|0)|0;vt=ct(c|0,P|0,_t|0,vt|0)|0;me=ct(vt|0,P|0,pe|0,me|0)|0;$e=ct(me|0,P|0,Ze|0,$e|0)|0;J=ct($e|0,P|0,Mt|0,J|0)|0;J=lt(At|0,o|0,J|0,P|0)|0;J=ct(J|0,P|0,Oe|0,Re|0)|0;o=P;Re=ht(Oe|0,Re|0,21)|0;Oe=P;At=lt(1048576,0,Ft|0,kt|0)|0;At=ut(At|0,P|0,21)|0;Mt=P;it=ct(Z|0,$|0,st|0,it|0)|0;je=ct(it|0,P|0,Ue|0,je|0)|0;ie=ct(je|0,P|0,qe|0,ie|0)|0;bt=ct(ie|0,P|0,wt|0,bt|0)|0;s=ct(bt|0,P|0,a|0,s|0)|0;Rt=ct(s|0,P|0,Ot|0,Rt|0)|0;dt=ct(Rt|0,P|0,se|0,dt|0)|0;ot=ct(dt|0,P|0,rt|0,ot|0)|0;y=ct(ot|0,P|0,g|0,y|0)|0;y=lt(At|0,Mt|0,y|0,P|0)|0;g=P;Mt=ht(At|0,Mt|0,21)|0;At=P;ot=lt(1048576,0,A|0,w|0)|0;ot=ut(ot|0,P|0,21)|0;rt=P;p=ct(M|0,_|0,de|0,p|0)|0;O=ct(p|0,P|0,L|0,O|0)|0;W=ct(O|0,P|0,G|0,W|0)|0;v=ct(W|0,P|0,te|0,v|0)|0;Q=ct(v|0,P|0,h|0,Q|0)|0;tt=ct(Q|0,P|0,et|0,tt|0)|0;x=ct(tt|0,P|0,m|0,x|0)|0;x=lt(ot|0,rt|0,x|0,P|0)|0;m=P;rt=ht(ot|0,rt|0,21)|0;ot=P;tt=lt(1048576,0,u|0,t|0)|0;tt=ut(tt|0,P|0,21)|0;et=P;Ge=ct(R|0,b|0,We|0,Ge|0)|0;l=ct(Ge|0,P|0,f|0,l|0)|0;j=ct(l|0,P|0,U|0,j|0)|0;Et=ct(j|0,P|0,St|0,Et|0)|0;ce=ct(Et|0,P|0,He|0,ce|0)|0;ce=lt(tt|0,et|0,ce|0,P|0)|0;He=P;et=ht(tt|0,et|0,21)|0;tt=P;Et=lt(1048576,0,he|0,Ae|0)|0;Et=ut(Et|0,P|0,21)|0;St=P;Me=ct(Y|0,V|0,mt|0,Me|0)|0;_e=ct(Me|0,P|0,ke|0,_e|0)|0;Be=ct(_e|0,P|0,gt|0,Be|0)|0;Be=lt(Et|0,St|0,Be|0,P|0)|0;gt=P;St=ht(Et|0,St|0,21)|0;Ae=ct(St|0,P|0,he|0,Ae|0)|0;he=P;St=lt(1048576,0,k|0,E|0)|0;St=ut(St|0,P|0,21)|0;Et=P;ze=ct(Pe|0,K|0,T|0,ze|0)|0;ze=lt(St|0,Et|0,ze|0,P|0)|0;T=P;Et=ht(St|0,Et|0,21)|0;E=ct(Et|0,P|0,k|0,E|0)|0;k=P;Et=ct(De|0,ae|0,1048576,0)|0;Et=ut(Et|0,P|0,21)|0;St=P;K=ht(Et|0,St|0,21)|0;K=lt(De|0,ae|0,K|0,P|0)|0;ae=P;De=ct(Fe|0,ge|0,1048576,0)|0;De=ut(De|0,P|0,21)|0;Pe=P;_e=ht(De|0,Pe|0,21)|0;_e=lt(Fe|0,ge|0,_e|0,P|0)|0;ge=P;Fe=ct(pt|0,fe|0,1048576,0)|0;Fe=ut(Fe|0,P|0,21)|0;ke=P;Me=ht(Fe|0,ke|0,21)|0;Me=lt(pt|0,fe|0,Me|0,P|0)|0;fe=P;pt=ct(H|0,q|0,1048576,0)|0;pt=ut(pt|0,P|0,21)|0;mt=P;V=ht(pt|0,mt|0,21)|0;Y=P;j=ct(i|0,F|0,1048576,0)|0;j=ut(j|0,P|0,21)|0;U=P;l=ht(j|0,U|0,21)|0;f=P;Ge=ct(N|0,D|0,1048576,0)|0;Ge=ut(Ge|0,P|0,21)|0;We=P;b=ht(Ge|0,We|0,21)|0;R=P;Q=ct(J|0,o|0,1048576,0)|0;Q=ut(Q|0,P|0,21)|0;h=P;v=ht(Q|0,h|0,21)|0;te=P;W=ct(y|0,g|0,1048576,0)|0;W=ut(W|0,P|0,21)|0;G=P;O=ht(W|0,G|0,21)|0;L=P;p=ct(x|0,m|0,1048576,0)|0;p=ut(p|0,P|0,21)|0;de=P;_=ht(p|0,de|0,21)|0;M=P;dt=ct(ce|0,He|0,1048576,0)|0;dt=ut(dt|0,P|0,21)|0;se=P;he=lt(dt|0,se|0,Ae|0,he|0)|0;Ae=P;se=ht(dt|0,se|0,21)|0;se=lt(ce|0,He|0,se|0,P|0)|0;He=P;ce=ct(Be|0,gt|0,1048576,0)|0;ce=ut(ce|0,P|0,21)|0;dt=P;k=lt(ce|0,dt|0,E|0,k|0)|0;E=P;dt=ht(ce|0,dt|0,21)|0;dt=lt(Be|0,gt|0,dt|0,P|0)|0;gt=P;Be=ct(ze|0,T|0,1048576,0)|0;Be=ut(Be|0,P|0,21)|0;ce=P;ae=ct(Be|0,ce|0,K|0,ae|0)|0;K=P;ce=ht(Be|0,ce|0,21)|0;ce=lt(ze|0,T|0,ce|0,P|0)|0;T=P;ze=yt(Et|0,St|0,666643,0)|0;Be=P;Rt=yt(Et|0,St|0,470296,0)|0;Ot=P;s=yt(Et|0,St|0,654183,0)|0;a=P;bt=yt(Et|0,St|0,-997805,-1)|0;wt=P;ie=yt(Et|0,St|0,136657,0)|0;qe=P;St=yt(Et|0,St|0,-683901,-1)|0;t=lt(St|0,P|0,u|0,t|0)|0;tt=lt(t|0,P|0,et|0,tt|0)|0;de=ct(tt|0,P|0,p|0,de|0)|0;p=P;tt=yt(ae|0,K|0,666643,0)|0;et=P;t=yt(ae|0,K|0,470296,0)|0;u=P;St=yt(ae|0,K|0,654183,0)|0;Et=P;je=yt(ae|0,K|0,-997805,-1)|0;Ue=P;it=yt(ae|0,K|0,136657,0)|0;st=P;K=yt(ae|0,K|0,-683901,-1)|0;ae=P;$=yt(ce|0,T|0,666643,0)|0;Z=P;$e=yt(ce|0,T|0,470296,0)|0;Ze=P;me=yt(ce|0,T|0,654183,0)|0;pe=P;vt=yt(ce|0,T|0,-997805,-1)|0;_t=P;c=yt(ce|0,T|0,136657,0)|0;ne=P;T=yt(ce|0,T|0,-683901,-1)|0;ce=P;w=lt(bt|0,wt|0,A|0,w|0)|0;ot=lt(w|0,P|0,rt|0,ot|0)|0;G=ct(ot|0,P|0,W|0,G|0)|0;st=ct(G|0,P|0,it|0,st|0)|0;ce=ct(st|0,P|0,T|0,ce|0)|0;T=P;st=yt(k|0,E|0,666643,0)|0;it=P;G=yt(k|0,E|0,470296,0)|0;W=P;ot=yt(k|0,E|0,654183,0)|0;rt=P;w=yt(k|0,E|0,-997805,-1)|0;A=P;wt=yt(k|0,E|0,136657,0)|0;bt=P;E=yt(k|0,E|0,-683901,-1)|0;k=P;Ye=yt(dt|0,gt|0,666643,0)|0;Ve=P;at=yt(dt|0,gt|0,470296,0)|0;nt=P;oe=yt(dt|0,gt|0,654183,0)|0;re=P;Ke=yt(dt|0,gt|0,-997805,-1)|0;Xe=P;r=yt(dt|0,gt|0,136657,0)|0;ee=P;gt=yt(dt|0,gt|0,-683901,-1)|0;dt=P;kt=lt(Rt|0,Ot|0,Ft|0,kt|0)|0;At=lt(kt|0,P|0,Mt|0,At|0)|0;Et=ct(At|0,P|0,St|0,Et|0)|0;bt=ct(Et|0,P|0,wt|0,bt|0)|0;_t=ct(bt|0,P|0,vt|0,_t|0)|0;dt=ct(_t|0,P|0,gt|0,dt|0)|0;h=ct(dt|0,P|0,Q|0,h|0)|0;Q=P;dt=yt(he|0,Ae|0,666643,0)|0;dt=ct(pt|0,mt|0,dt|0,P|0)|0;C=ct(dt|0,P|0,I|0,C|0)|0;Ce=lt(C|0,P|0,Ie|0,Ce|0)|0;Ie=P;C=yt(he|0,Ae|0,470296,0)|0;I=P;dt=yt(he|0,Ae|0,654183,0)|0;it=ct(dt|0,P|0,st|0,it|0)|0;nt=ct(it|0,P|0,at|0,nt|0)|0;Qe=ct(nt|0,P|0,Je|0,Qe|0)|0;U=ct(Qe|0,P|0,j|0,U|0)|0;z=lt(U|0,P|0,B|0,z|0)|0;B=P;U=yt(he|0,Ae|0,-997805,-1)|0;j=P;Qe=yt(he|0,Ae|0,136657,0)|0;Je=P;et=ct(ot|0,rt|0,tt|0,et|0)|0;Je=ct(et|0,P|0,Qe|0,Je|0)|0;Ze=ct(Je|0,P|0,$e|0,Ze|0)|0;Xe=ct(Ze|0,P|0,Ke|0,Xe|0)|0;We=ct(Xe|0,P|0,Ge|0,We|0)|0;ve=ct(We|0,P|0,be|0,ve|0)|0;Oe=lt(ve|0,P|0,Re|0,Oe|0)|0;Re=P;Ae=yt(he|0,Ae|0,-683901,-1)|0;he=P;ve=ct(Ce|0,Ie|0,1048576,0)|0;ve=ut(ve|0,P|0,21)|0;be=P;I=ct(Ye|0,Ve|0,C|0,I|0)|0;F=ct(I|0,P|0,i|0,F|0)|0;f=lt(F|0,P|0,l|0,f|0)|0;f=ct(f|0,P|0,ve|0,be|0)|0;l=P;be=ht(ve|0,be|0,21)|0;ve=P;F=ct(z|0,B|0,1048576,0)|0;F=ut(F|0,P|0,21)|0;i=P;W=ct(U|0,j|0,G|0,W|0)|0;Z=ct(W|0,P|0,$|0,Z|0)|0;re=ct(Z|0,P|0,oe|0,re|0)|0;D=ct(re|0,P|0,N|0,D|0)|0;D=ct(D|0,P|0,F|0,i|0)|0;R=lt(D|0,P|0,b|0,R|0)|0;b=P;i=ht(F|0,i|0,21)|0;F=P;D=ct(Oe|0,Re|0,1048576,0)|0;D=ut(D|0,P|0,21)|0;N=P;Be=ct(t|0,u|0,ze|0,Be|0)|0;A=ct(Be|0,P|0,w|0,A|0)|0;he=ct(A|0,P|0,Ae|0,he|0)|0;pe=ct(he|0,P|0,me|0,pe|0)|0;ee=ct(pe|0,P|0,r|0,ee|0)|0;o=ct(ee|0,P|0,J|0,o|0)|0;o=ct(o|0,P|0,D|0,N|0)|0;te=lt(o|0,P|0,v|0,te|0)|0;v=P;N=ht(D|0,N|0,21)|0;D=P;o=ct(h|0,Q|0,1048576,0)|0;o=ut(o|0,P|0,21)|0;J=P;a=ct(y|0,g|0,s|0,a|0)|0;L=lt(a|0,P|0,O|0,L|0)|0;Ue=ct(L|0,P|0,je|0,Ue|0)|0;k=ct(Ue|0,P|0,E|0,k|0)|0;ne=ct(k|0,P|0,c|0,ne|0)|0;ne=ct(ne|0,P|0,o|0,J|0)|0;c=P;J=ht(o|0,J|0,21)|0;J=lt(h|0,Q|0,J|0,P|0)|0;Q=P;h=ct(ce|0,T|0,1048576,0)|0;h=ut(h|0,P|0,21)|0;o=P;qe=ct(x|0,m|0,ie|0,qe|0)|0;M=lt(qe|0,P|0,_|0,M|0)|0;ae=ct(M|0,P|0,K|0,ae|0)|0;ae=ct(ae|0,P|0,h|0,o|0)|0;K=P;o=ht(h|0,o|0,21)|0;o=lt(ce|0,T|0,o|0,P|0)|0;T=P;ce=ct(de|0,p|0,1048576,0)|0;ce=ut(ce|0,P|0,21)|0;h=P;He=ct(ce|0,h|0,se|0,He|0)|0;se=P;h=ht(ce|0,h|0,21)|0;h=lt(de|0,p|0,h|0,P|0)|0;p=P;de=ct(f|0,l|0,1048576,0)|0;de=ut(de|0,P|0,21)|0;ce=P;M=ht(de|0,ce|0,21)|0;_=P;qe=ct(R|0,b|0,1048576,0)|0;qe=ut(qe|0,P|0,21)|0;ie=P;m=ht(qe|0,ie|0,21)|0;x=P;k=ct(te|0,v|0,1048576,0)|0;k=ut(k|0,P|0,21)|0;E=P;Q=ct(J|0,Q|0,k|0,E|0)|0;J=P;E=ht(k|0,E|0,21)|0;E=lt(te|0,v|0,E|0,P|0)|0;v=P;te=ct(ne|0,c|0,1048576,0)|0;te=ut(te|0,P|0,21)|0;k=P;T=ct(te|0,k|0,o|0,T|0)|0;o=P;k=ht(te|0,k|0,21)|0;k=lt(ne|0,c|0,k|0,P|0)|0;c=P;ne=ct(ae|0,K|0,1048576,0)|0;ne=ut(ne|0,P|0,21)|0;te=P;p=ct(ne|0,te|0,h|0,p|0)|0;h=P;te=ht(ne|0,te|0,21)|0;te=lt(ae|0,K|0,te|0,P|0)|0;K=P;ae=yt(He|0,se|0,666643,0)|0;ne=P;Ue=yt(He|0,se|0,470296,0)|0;je=P;L=yt(He|0,se|0,654183,0)|0;O=P;a=yt(He|0,se|0,-997805,-1)|0;s=P;g=yt(He|0,se|0,136657,0)|0;y=P;se=yt(He|0,se|0,-683901,-1)|0;se=ct(qe|0,ie|0,se|0,P|0)|0;Re=ct(se|0,P|0,Oe|0,Re|0)|0;D=lt(Re|0,P|0,N|0,D|0)|0;N=P;Re=yt(p|0,h|0,666643,0)|0;Oe=P;se=yt(p|0,h|0,470296,0)|0;ie=P;qe=yt(p|0,h|0,654183,0)|0;He=P;ee=yt(p|0,h|0,-997805,-1)|0;r=P;pe=yt(p|0,h|0,136657,0)|0;me=P;h=yt(p|0,h|0,-683901,-1)|0;p=P;he=yt(te|0,K|0,666643,0)|0;he=ct(Me|0,fe|0,he|0,P|0)|0;fe=P;Me=yt(te|0,K|0,470296,0)|0;Ae=P;A=yt(te|0,K|0,654183,0)|0;w=P;Be=yt(te|0,K|0,-997805,-1)|0;ze=P;u=yt(te|0,K|0,136657,0)|0;t=P;K=yt(te|0,K|0,-683901,-1)|0;te=P;s=ct(pe|0,me|0,a|0,s|0)|0;te=ct(s|0,P|0,K|0,te|0)|0;B=ct(te|0,P|0,z|0,B|0)|0;ce=ct(B|0,P|0,de|0,ce|0)|0;F=lt(ce|0,P|0,i|0,F|0)|0;i=P;ce=yt(T|0,o|0,666643,0)|0;de=P;B=yt(T|0,o|0,470296,0)|0;z=P;te=yt(T|0,o|0,654183,0)|0;K=P;s=yt(T|0,o|0,-997805,-1)|0;a=P;me=yt(T|0,o|0,136657,0)|0;pe=P;o=yt(T|0,o|0,-683901,-1)|0;T=P;re=yt(k|0,c|0,666643,0)|0;oe=P;Z=yt(k|0,c|0,470296,0)|0;$=P;W=yt(k|0,c|0,654183,0)|0;G=P;j=yt(k|0,c|0,-997805,-1)|0;U=P;I=yt(k|0,c|0,136657,0)|0;C=P;c=yt(k|0,c|0,-683901,-1)|0;k=P;je=ct(qe|0,He|0,Ue|0,je|0)|0;ze=ct(je|0,P|0,Be|0,ze|0)|0;Ie=ct(ze|0,P|0,Ce|0,Ie|0)|0;ve=lt(Ie|0,P|0,be|0,ve|0)|0;pe=ct(ve|0,P|0,me|0,pe|0)|0;k=ct(pe|0,P|0,c|0,k|0)|0;c=P;pe=yt(Q|0,J|0,666643,0)|0;X=ct(pe|0,P|0,S|0,X|0)|0;S=P;pe=yt(Q|0,J|0,470296,0)|0;me=P;ve=yt(Q|0,J|0,654183,0)|0;be=P;Pe=ct(Le|0,xe|0,De|0,Pe|0)|0;Te=lt(Pe|0,P|0,Ne|0,Te|0)|0;be=ct(Te|0,P|0,ve|0,be|0)|0;de=ct(be|0,P|0,ce|0,de|0)|0;$=ct(de|0,P|0,Z|0,$|0)|0;Z=P;de=yt(Q|0,J|0,-997805,-1)|0;ce=P;be=yt(Q|0,J|0,136657,0)|0;ve=P;ke=ct(Re|0,Oe|0,Fe|0,ke|0)|0;Ae=ct(ke|0,P|0,Me|0,Ae|0)|0;Ee=ct(Ae|0,P|0,Se|0,Ee|0)|0;we=lt(Ee|0,P|0,ye|0,we|0)|0;ve=ct(we|0,P|0,be|0,ve|0)|0;K=ct(ve|0,P|0,te|0,K|0)|0;U=ct(K|0,P|0,j|0,U|0)|0;j=P;J=yt(Q|0,J|0,-683901,-1)|0;Q=P;K=ct(X|0,S|0,1048576,0)|0;K=ut(K|0,P|0,21)|0;te=P;me=ct(_e|0,ge|0,pe|0,me|0)|0;oe=ct(me|0,P|0,re|0,oe|0)|0;oe=ct(oe|0,P|0,K|0,te|0)|0;re=P;te=ht(K|0,te|0,21)|0;te=lt(X|0,S|0,te|0,P|0)|0;S=P;X=ct($|0,Z|0,1048576,0)|0;X=ut(X|0,P|0,21)|0;K=P;ce=ct(he|0,fe|0,de|0,ce|0)|0;z=ct(ce|0,P|0,B|0,z|0)|0;G=ct(z|0,P|0,W|0,G|0)|0;G=ct(G|0,P|0,X|0,K|0)|0;W=P;K=ht(X|0,K|0,21)|0;X=P;z=ct(U|0,j|0,1048576,0)|0;z=ut(z|0,P|0,21)|0;B=P;ne=ct(se|0,ie|0,ae|0,ne|0)|0;w=ct(ne|0,P|0,A|0,w|0)|0;q=ct(w|0,P|0,H|0,q|0)|0;Y=lt(q|0,P|0,V|0,Y|0)|0;Q=ct(Y|0,P|0,J|0,Q|0)|0;a=ct(Q|0,P|0,s|0,a|0)|0;C=ct(a|0,P|0,I|0,C|0)|0;C=ct(C|0,P|0,z|0,B|0)|0;I=P;B=ht(z|0,B|0,21)|0;z=P;a=ct(k|0,c|0,1048576,0)|0;a=ut(a|0,P|0,21)|0;s=P;O=ct(ee|0,r|0,L|0,O|0)|0;t=ct(O|0,P|0,u|0,t|0)|0;l=ct(t|0,P|0,f|0,l|0)|0;_=lt(l|0,P|0,M|0,_|0)|0;T=ct(_|0,P|0,o|0,T|0)|0;T=ct(T|0,P|0,a|0,s|0)|0;o=P;s=ht(a|0,s|0,21)|0;s=lt(k|0,c|0,s|0,P|0)|0;c=P;k=ct(F|0,i|0,1048576,0)|0;k=ut(k|0,P|0,21)|0;a=P;y=ct(h|0,p|0,g|0,y|0)|0;b=ct(y|0,P|0,R|0,b|0)|0;b=ct(b|0,P|0,k|0,a|0)|0;x=lt(b|0,P|0,m|0,x|0)|0;m=P;a=ht(k|0,a|0,21)|0;a=lt(F|0,i|0,a|0,P|0)|0;i=P;F=ct(D|0,N|0,1048576,0)|0;F=ut(F|0,P|0,21)|0;k=P;v=ct(E|0,v|0,F|0,k|0)|0;E=P;k=ht(F|0,k|0,21)|0;F=P;b=ct(oe|0,re|0,1048576,0)|0;b=ut(b|0,P|0,21)|0;R=P;y=ht(b|0,R|0,21)|0;g=P;p=ct(G|0,W|0,1048576,0)|0;p=ut(p|0,P|0,21)|0;h=P;_=ht(p|0,h|0,21)|0;M=P;l=ct(C|0,I|0,1048576,0)|0;l=ut(l|0,P|0,21)|0;f=P;c=ct(s|0,c|0,l|0,f|0)|0;s=P;f=ht(l|0,f|0,21)|0;l=P;t=ct(T|0,o|0,1048576,0)|0;t=ut(t|0,P|0,21)|0;u=P;i=ct(a|0,i|0,t|0,u|0)|0;a=P;u=ht(t|0,u|0,21)|0;u=lt(T|0,o|0,u|0,P|0)|0;o=P;T=ct(x|0,m|0,1048576,0)|0;T=ut(T|0,P|0,21)|0;t=P;O=ht(T|0,t|0,21)|0;O=lt(x|0,m|0,O|0,P|0)|0;m=P;x=ct(v|0,E|0,1048576,0)|0;x=ut(x|0,P|0,21)|0;L=P;r=ht(x|0,L|0,21)|0;r=lt(v|0,E|0,r|0,P|0)|0;E=P;v=yt(x|0,L|0,666643,0)|0;v=ct(te|0,S|0,v|0,P|0)|0;S=P;te=yt(x|0,L|0,470296,0)|0;ee=P;Q=yt(x|0,L|0,654183,0)|0;J=P;Y=yt(x|0,L|0,-997805,-1)|0;V=P;q=yt(x|0,L|0,136657,0)|0;H=P;L=yt(x|0,L|0,-683901,-1)|0;x=P;w=ut(v|0,S|0,21)|0;A=P;ee=ct(oe|0,re|0,te|0,ee|0)|0;g=lt(ee|0,P|0,y|0,g|0)|0;g=ct(g|0,P|0,w|0,A|0)|0;y=P;A=ht(w|0,A|0,21)|0;A=lt(v|0,S|0,A|0,P|0)|0;S=P;v=ut(g|0,y|0,21)|0;w=P;Z=ct(Q|0,J|0,$|0,Z|0)|0;X=lt(Z|0,P|0,K|0,X|0)|0;R=ct(X|0,P|0,b|0,R|0)|0;R=ct(R|0,P|0,v|0,w|0)|0;b=P;w=ht(v|0,w|0,21)|0;w=lt(g|0,y|0,w|0,P|0)|0;y=P;g=ut(R|0,b|0,21)|0;v=P;V=ct(G|0,W|0,Y|0,V|0)|0;M=lt(V|0,P|0,_|0,M|0)|0;M=ct(M|0,P|0,g|0,v|0)|0;_=P;v=ht(g|0,v|0,21)|0;v=lt(R|0,b|0,v|0,P|0)|0;b=P;R=ut(M|0,_|0,21)|0;g=P;j=ct(q|0,H|0,U|0,j|0)|0;z=lt(j|0,P|0,B|0,z|0)|0;h=ct(z|0,P|0,p|0,h|0)|0;h=ct(h|0,P|0,R|0,g|0)|0;p=P;g=ht(R|0,g|0,21)|0;g=lt(M|0,_|0,g|0,P|0)|0;_=P;M=ut(h|0,p|0,21)|0;R=P;x=ct(C|0,I|0,L|0,x|0)|0;l=lt(x|0,P|0,f|0,l|0)|0;l=ct(l|0,P|0,M|0,R|0)|0;f=P;R=ht(M|0,R|0,21)|0;R=lt(h|0,p|0,R|0,P|0)|0;p=P;h=ut(l|0,f|0,21)|0;M=P;s=ct(c|0,s|0,h|0,M|0)|0;c=P;M=ht(h|0,M|0,21)|0;M=lt(l|0,f|0,M|0,P|0)|0;f=P;l=ut(s|0,c|0,21)|0;h=P;o=ct(l|0,h|0,u|0,o|0)|0;u=P;h=ht(l|0,h|0,21)|0;h=lt(s|0,c|0,h|0,P|0)|0;c=P;s=ut(o|0,u|0,21)|0;l=P;a=ct(i|0,a|0,s|0,l|0)|0;i=P;l=ht(s|0,l|0,21)|0;l=lt(o|0,u|0,l|0,P|0)|0;u=P;o=ut(a|0,i|0,21)|0;s=P;m=ct(o|0,s|0,O|0,m|0)|0;O=P;s=ht(o|0,s|0,21)|0;s=lt(a|0,i|0,s|0,P|0)|0;i=P;a=ut(m|0,O|0,21)|0;o=P;t=ct(D|0,N|0,T|0,t|0)|0;F=lt(t|0,P|0,k|0,F|0)|0;F=ct(F|0,P|0,a|0,o|0)|0;k=P;o=ht(a|0,o|0,21)|0;o=lt(m|0,O|0,o|0,P|0)|0;O=P;m=ut(F|0,k|0,21)|0;a=P;E=ct(m|0,a|0,r|0,E|0)|0;r=P;a=ht(m|0,a|0,21)|0;a=lt(F|0,k|0,a|0,P|0)|0;k=P;F=ut(E|0,r|0,21)|0;m=P;t=ht(F|0,m|0,21)|0;t=lt(E|0,r|0,t|0,P|0)|0;r=P;E=yt(F|0,m|0,666643,0)|0;S=ct(E|0,P|0,A|0,S|0)|0;A=P;E=yt(F|0,m|0,470296,0)|0;E=ct(w|0,y|0,E|0,P|0)|0;y=P;w=yt(F|0,m|0,654183,0)|0;w=ct(v|0,b|0,w|0,P|0)|0;b=P;v=yt(F|0,m|0,-997805,-1)|0;v=ct(g|0,_|0,v|0,P|0)|0;_=P;g=yt(F|0,m|0,136657,0)|0;g=ct(R|0,p|0,g|0,P|0)|0;p=P;m=yt(F|0,m|0,-683901,-1)|0;m=ct(M|0,f|0,m|0,P|0)|0;f=P;M=ut(S|0,A|0,21)|0;F=P;y=ct(E|0,y|0,M|0,F|0)|0;E=P;F=ht(M|0,F|0,21)|0;F=lt(S|0,A|0,F|0,P|0)|0;A=P;S=ut(y|0,E|0,21)|0;M=P;b=ct(w|0,b|0,S|0,M|0)|0;w=P;M=ht(S|0,M|0,21)|0;M=lt(y|0,E|0,M|0,P|0)|0;E=P;y=ut(b|0,w|0,21)|0;S=P;_=ct(v|0,_|0,y|0,S|0)|0;v=P;S=ht(y|0,S|0,21)|0;S=lt(b|0,w|0,S|0,P|0)|0;w=P;b=ut(_|0,v|0,21)|0;y=P;p=ct(g|0,p|0,b|0,y|0)|0;g=P;y=ht(b|0,y|0,21)|0;y=lt(_|0,v|0,y|0,P|0)|0;v=P;_=ut(p|0,g|0,21)|0;b=P;f=ct(m|0,f|0,_|0,b|0)|0;m=P;b=ht(_|0,b|0,21)|0;b=lt(p|0,g|0,b|0,P|0)|0;g=P;p=ut(f|0,m|0,21)|0;_=P;c=ct(p|0,_|0,h|0,c|0)|0;h=P;_=ht(p|0,_|0,21)|0;_=lt(f|0,m|0,_|0,P|0)|0;m=P;f=ut(c|0,h|0,21)|0;p=P;u=ct(f|0,p|0,l|0,u|0)|0;l=P;p=ht(f|0,p|0,21)|0;p=lt(c|0,h|0,p|0,P|0)|0;h=P;c=ut(u|0,l|0,21)|0;f=P;i=ct(c|0,f|0,s|0,i|0)|0;s=P;f=ht(c|0,f|0,21)|0;f=lt(u|0,l|0,f|0,P|0)|0;l=P;u=ut(i|0,s|0,21)|0;c=P;O=ct(u|0,c|0,o|0,O|0)|0;o=P;c=ht(u|0,c|0,21)|0;c=lt(i|0,s|0,c|0,P|0)|0;s=P;i=ut(O|0,o|0,21)|0;u=P;k=ct(i|0,u|0,a|0,k|0)|0;a=P;u=ht(i|0,u|0,21)|0;u=lt(O|0,o|0,u|0,P|0)|0;o=P;O=ut(k|0,a|0,21)|0;i=P;r=ct(O|0,i|0,t|0,r|0)|0;t=P;i=ht(O|0,i|0,21)|0;i=lt(k|0,a|0,i|0,P|0)|0;a=P;le(e>>0|0,F|0,1,0);k=ft(F|0,A|0,8)|0;le(e+1>>0|0,k|0,1,0);A=ft(F|0,A|0,16)|0;F=P;k=ht(M|0,E|0,5)|0;P|F;le(e+2>>0|0,k|A|0,1,0);A=ft(M|0,E|0,3)|0;le(e+3>>0|0,A|0,1,0);A=ft(M|0,E|0,11)|0;le(e+4>>0|0,A|0,1,0);E=ft(M|0,E|0,19)|0;M=P;A=ht(S|0,w|0,2)|0;P|M;le(e+5>>0|0,A|E|0,1,0);E=ft(S|0,w|0,6)|0;le(e+6>>0|0,E|0,1,0);w=ft(S|0,w|0,14)|0;S=P;E=ht(y|0,v|0,7)|0;P|S;le(e+7>>0|0,E|w|0,1,0);w=ft(y|0,v|0,1)|0;le(e+8>>0|0,w|0,1,0);w=ft(y|0,v|0,9)|0;le(e+9>>0|0,w|0,1,0);v=ft(y|0,v|0,17)|0;y=P;w=ht(b|0,g|0,4)|0;P|y;le(e+10>>0|0,w|v|0,1,0);v=ft(b|0,g|0,4)|0;le(e+11>>0|0,v|0,1,0);v=ft(b|0,g|0,12)|0;le(e+12>>0|0,v|0,1,0);g=ft(b|0,g|0,20)|0;b=P;v=ht(_|0,m|0,1)|0;P|b;le(e+13>>0|0,v|g|0,1,0);g=ft(_|0,m|0,7)|0;le(e+14>>0|0,g|0,1,0);m=ft(_|0,m|0,15)|0;_=P;g=ht(p|0,h|0,6)|0;P|_;le(e+15>>0|0,g|m|0,1,0);m=ft(p|0,h|0,2)|0;le(e+16>>0|0,m|0,1,0);m=ft(p|0,h|0,10)|0;le(e+17>>0|0,m|0,1,0);h=ft(p|0,h|0,18)|0;p=P;m=ht(f|0,l|0,3)|0;P|p;le(e+18>>0|0,m|h|0,1,0);h=ft(f|0,l|0,5)|0;le(e+19>>0|0,h|0,1,0);l=ft(f|0,l|0,13)|0;le(e+20>>0|0,l|0,1,0);le(e+21>>0|0,c|0,1,0);l=ft(c|0,s|0,8)|0;le(e+22>>0|0,l|0,1,0);s=ft(c|0,s|0,16)|0;c=P;l=ht(u|0,o|0,5)|0;P|c;le(e+23>>0|0,l|s|0,1,0);s=ft(u|0,o|0,3)|0;le(e+24>>0|0,s|0,1,0);s=ft(u|0,o|0,11)|0;le(e+25>>0|0,s|0,1,0);o=ft(u|0,o|0,19)|0;u=P;s=ht(i|0,a|0,2)|0;P|u;le(e+26>>0|0,s|o|0,1,0);o=ft(i|0,a|0,6)|0;le(e+27>>0|0,o|0,1,0);a=ft(i|0,a|0,14)|0;i=P;o=ht(r|0,t|0,7)|0;i|P;le(e+28>>0|0,a|o|0,1,0);o=ft(r|0,t|0,1)|0;le(e+29>>0|0,o|0,1,0);o=ft(r|0,t|0,9)|0;le(e+30>>0|0,o|0,1,0);t=ft(r|0,t|0,17)|0;le(e+31>>0|0,t|0,1,0);d=n;return}function ot(e){e=e|0;var t=0,r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,D=0,x=0,L=0,I=0,C=0,z=0,B=0,j=0,U=0,H=0;t=d;r=ue(e>>0|0,1,0,1)|0|0;H=ht(ue(e+1>>0|0,1,0,1)|0|0|0,0,8)|0;U=P;j=ht(ue(e+2>>0|0,1,0,1)|0|0|0,0,16)|0;U=U|P;L=ht(ue(e+3>>0|0,1,0,1)|0|0|0,0,24)|0;U=U|P;I=ue(e+4>>0|0,1,0,1)|0|0;B=ht(ue(e+5>>0|0,1,0,1)|0|0|0,0,8)|0;z=P;C=ht(ue(e+6>>0|0,1,0,1)|0|0|0,0,16)|0;z=z|P;R=ht(ue(e+7>>0|0,1,0,1)|0|0|0,0,24)|0;z=z|P;T=ue(e+8>>0|0,1,0,1)|0|0;x=ht(ue(e+9>>0|0,1,0,1)|0|0|0,0,8)|0;D=P;N=ht(ue(e+10>>0|0,1,0,1)|0|0|0,0,16)|0;D=D|P;A=ht(ue(e+11>>0|0,1,0,1)|0|0|0,0,24)|0;D=D|P;M=ue(e+12>>0|0,1,0,1)|0|0;O=ht(ue(e+13>>0|0,1,0,1)|0|0|0,0,8)|0;F=P;k=ht(ue(e+14>>0|0,1,0,1)|0|0|0,0,16)|0;F=F|P;b=ht(ue(e+15>>0|0,1,0,1)|0|0|0,0,24)|0;F=F|P;E=ue(e+16>>0|0,1,0,1)|0|0;S=ht(ue(e+17>>0|0,1,0,1)|0|0|0,0,8)|0;m=P;y=ht(ue(e+18>>0|0,1,0,1)|0|0|0,0,16)|0;m=m|P;w=ht(ue(e+19>>0|0,1,0,1)|0|0|0,0,24)|0;m=m|P;_=ue(e+20>>0|0,1,0,1)|0|0;v=ht(ue(e+21>>0|0,1,0,1)|0|0|0,0,8)|0;u=P;g=ht(ue(e+22>>0|0,1,0,1)|0|0|0,0,16)|0;u=u|P;p=ht(ue(e+23>>0|0,1,0,1)|0|0|0,0,24)|0;u=u|P;f=ue(e+24>>0|0,1,0,1)|0|0;h=ht(ue(e+25>>0|0,1,0,1)|0|0|0,0,8)|0;o=P;c=ht(ue(e+26>>0|0,1,0,1)|0|0|0,0,16)|0;o=o|P;l=ht(ue(e+27>>0|0,1,0,1)|0|0|0,0,24)|0;o=o|P;n=ue(e+28>>0|0,1,0,1)|0|0;s=ht(ue(e+29>>0|0,1,0,1)|0|0|0,0,8)|0;i=P;a=ht(ue(e+30>>0|0,1,0,1)|0|0|0,0,16)|0;i=i|P;e=ht(ue(e+31>>0|0,1,0,1)|0|0|0,0,24)|0;i=i|P;U=lt(1559614444,0,H|r|j|L|0,U|0)|0;L=P;j=ut(U|0,L|0,63)|0;r=P;L=lt(0,0,U|0,L|0)|0;L=ft(L|0,P|0,63)|0;L=ct(j|0,r|0,L|0,P|0)|0;r=P;z=lt(1477600026,0,B|I|C|R|0,z|0)|0;R=P;C=ut(z|0,R|0,63)|0;I=P;R=lt(0,0,z|0,R|0)|0;R=ut(R|0,P|0,63)|0;R=lt(C|0,I|0,R|0,P|0)|0;R=ht(R|0,P|0,1)|0;R=ct(L|0,r|0,R|0,P|0)|0;r=P;D=lt(-1560830762,0,x|T|N|A|0,D|0)|0;A=P;N=ut(D|0,A|0,63)|0;T=P;A=lt(0,0,D|0,A|0)|0;A=ut(A|0,P|0,63)|0;A=lt(N|0,T|0,A|0,P|0)|0;A=ht(A|0,P|0,2)|0;A=ct(R|0,r|0,A|0,P|0)|0;r=P;F=lt(350157278,0,O|M|k|b|0,F|0)|0;b=P;k=ut(F|0,b|0,63)|0;M=P;b=lt(0,0,F|0,b|0)|0;b=ut(b|0,P|0,63)|0;b=lt(k|0,M|0,b|0,P|0)|0;b=ht(b|0,P|0,3)|0;b=ct(A|0,r|0,b|0,P|0)|0;r=P;m=lt(0,0,S|E|y|w|0,m|0)|0;m=ut(m|0,P|0,63)|0;m=ht(m|0,P|0,4)|0;m=ct(b|0,r|0,m|0,P|0)|0;r=P;u=lt(0,0,v|_|g|p|0,u|0)|0;u=ut(u|0,P|0,63)|0;u=ht(u|0,P|0,5)|0;u=ct(m|0,r|0,u|0,P|0)|0;r=P;o=lt(0,0,h|f|c|l|0,o|0)|0;o=ut(o|0,P|0,63)|0;o=ht(o|0,P|0,6)|0;o=ct(u|0,r|0,o|0,P|0)|0;r=P;i=lt(268435456,0,s|n|a|e|0,i|0)|0;e=P;a=ut(i|0,e|0,63)|0;n=P;e=lt(0,0,i|0,e|0)|0;e=ut(e|0,P|0,63)|0;e=lt(a|0,n|0,e|0,P|0)|0;e=ht(e|0,P|0,7)|0;e=ct(o|0,r|0,e|0,P|0)|0;e=ft(e|0,P|0,8)|0;d=t;return e|0}function nt(e,t,r){e=e|0;t=t|0;r=r|0;var o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,d=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0;y=ue(e|0,4,0,0)|0|0;w=e+4|0;b=ue(w|0,4,0,0)|0|0;v=e+8|0;_=ue(v|0,4,0,0)|0|0;g=e+12|0;p=ue(g|0,4,0,0)|0|0;m=e+16|0;o=ue(m|0,4,0,0)|0|0;f=e+20|0;d=ue(f|0,4,0,0)|0|0;c=e+24|0;l=ue(c|0,4,0,0)|0|0;u=e+28|0;s=ue(u|0,4,0,0)|0|0;i=e+32|0;a=ue(i|0,4,0,0)|0|0;n=e+36|0;h=ue(n|0,4,0,0)|0|0;E=0-r|0;if((r+-1&~r|r+-2&E|0)==-1){T=((ue(t+4|0,4,0,0)|0)^b)&E;R=((ue(t+8|0,4,0,0)|0)^_)&E;O=((ue(t+12|0,4,0,0)|0)^p)&E;F=((ue(t+16|0,4,0,0)|0)^o)&E;k=((ue(t+20|0,4,0,0)|0)^d)&E;M=((ue(t+24|0,4,0,0)|0)^l)&E;A=((ue(t+28|0,4,0,0)|0)^s)&E;S=((ue(t+32|0,4,0,0)|0)^a)&E;r=((ue(t+36|0,4,0,0)|0)^h)&E;le(e|0,((ue(t|0,4,0,0)|0)^y)&E^y|0,4,0);le(w|0,T^b|0,4,0);le(v|0,R^_|0,4,0);le(g|0,O^p|0,4,0);le(m|0,F^o|0,4,0);le(f|0,k^d|0,4,0);le(c|0,M^l|0,4,0);le(u|0,A^s|0,4,0);le(i|0,S^a|0,4,0);le(n|0,r^h|0,4,0);return}else{ge(168,48,177,232)}}function at(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0;l=d;d=d+48|0;r=l;if((t|0)<=0){d=l;return}n=e+8|0;h=e;c=ue(h|0,4,0,0)|0|0;h=ue(h+4|0,4,0,0)|0|0;o=0;do{v=e+40|0;_=e+80|0;g=e+120|0;f=e+160|0;m=(ue(v+4|0,4,0,0)|0)^h^(ue(_+4|0,4,0,0)|0)^(ue(g+4|0,4,0,0)|0)^(ue(f+4|0,4,0,0)|0);i=r;le(i|0,(ue(v|0,4,0,0)|0)^c^(ue(_|0,4,0,0)|0)^(ue(g|0,4,0,0)|0)^(ue(f|0,4,0,0)|0)|0,4,0);le(i+4|0,m|0,4,0);m=n;i=e+48|0;f=e+88|0;g=e+128|0;_=e+168|0;v=(ue(i+4|0,4,0,0)|0)^(ue(m+4|0,4,0,0)|0)^(ue(f+4|0,4,0,0)|0)^(ue(g+4|0,4,0,0)|0)^(ue(_+4|0,4,0,0)|0);a=r+8|0;s=a;le(s|0,(ue(i|0,4,0,0)|0)^(ue(m|0,4,0,0)|0)^(ue(f|0,4,0,0)|0)^(ue(g|0,4,0,0)|0)^(ue(_|0,4,0,0)|0)|0,4,0);le(s+4|0,v|0,4,0);v=e+16|0;s=e+56|0;_=e+96|0;g=e+136|0;f=e+176|0;m=(ue(s+4|0,4,0,0)|0)^(ue(v+4|0,4,0,0)|0)^(ue(_+4|0,4,0,0)|0)^(ue(g+4|0,4,0,0)|0)^(ue(f+4|0,4,0,0)|0);i=r+16|0;u=i;le(u|0,(ue(s|0,4,0,0)|0)^(ue(v|0,4,0,0)|0)^(ue(_|0,4,0,0)|0)^(ue(g|0,4,0,0)|0)^(ue(f|0,4,0,0)|0)|0,4,0);le(u+4|0,m|0,4,0);m=e+24|0;u=e+64|0;f=e+104|0;g=e+144|0;_=e+184|0;v=(ue(u+4|0,4,0,0)|0)^(ue(m+4|0,4,0,0)|0)^(ue(f+4|0,4,0,0)|0)^(ue(g+4|0,4,0,0)|0)^(ue(_+4|0,4,0,0)|0);s=r+24|0;b=s;le(b|0,(ue(u|0,4,0,0)|0)^(ue(m|0,4,0,0)|0)^(ue(f|0,4,0,0)|0)^(ue(g|0,4,0,0)|0)^(ue(_|0,4,0,0)|0)|0,4,0);le(b+4|0,v|0,4,0);v=e+32|0;b=e+72|0;_=e+112|0;g=e+152|0;f=e+192|0;m=(ue(b+4|0,4,0,0)|0)^(ue(v+4|0,4,0,0)|0)^(ue(_+4|0,4,0,0)|0)^(ue(g+4|0,4,0,0)|0)^(ue(f+4|0,4,0,0)|0);u=r+32|0;p=u;le(p|0,(ue(b|0,4,0,0)|0)^(ue(v|0,4,0,0)|0)^(ue(_|0,4,0,0)|0)^(ue(g|0,4,0,0)|0)^(ue(f|0,4,0,0)|0)|0,4,0);le(p+4|0,m|0,4,0);m=0;while(1){b=r+(((m+4|0)%5|0)<<3)|0;g=ue(b|0,4,0,0)|0|0;b=ue(b+4|0,4,0,0)|0|0;f=m+1|0;_=r+(((f|0)==5?0:f)<<3)|0;w=ue(_|0,4,0,0)|0|0;_=ue(_+4|0,4,0,0)|0|0;p=ht(w|0,_|0,1)|0;v=P;_=ft(w|0,_|0,63)|0;g=(p|_)^g;b=(v|P)^b;v=e+(m<<3)|0;le(v|0,g^c|0,4,0);le(v+4|0,b^h|0,4,0);v=e+(m+5<<3)|0;_=v;p=b^(ue(_+4|0,4,0,0)|0);le(v|0,g^(ue(_|0,4,0,0)|0)|0,4,0);le(v+4|0,p|0,4,0);p=e+(m+10<<3)|0;v=p;_=b^(ue(v+4|0,4,0,0)|0);le(p|0,g^(ue(v|0,4,0,0)|0)|0,4,0);le(p+4|0,_|0,4,0);_=e+(m+15<<3)|0;p=_;v=b^(ue(p+4|0,4,0,0)|0);le(_|0,g^(ue(p|0,4,0,0)|0)|0,4,0);le(_+4|0,v|0,4,0);v=e+(m+20<<3)|0;_=v;b=b^(ue(_+4|0,4,0,0)|0);le(v|0,g^(ue(_|0,4,0,0)|0)|0,4,0);le(v+4|0,b|0,4,0);if((f|0)==5){break}h=e+(f<<3)|0;c=ue(h|0,4,0,0)|0|0;h=ue(h+4|0,4,0,0)|0|0;m=f}f=n;h=ue(f|0,4,0,0)|0|0;f=ue(f+4|0,4,0,0)|0|0;c=0;do{b=e+((ue(32568+(c<<2)|0,4,0,0)|0)<<3)|0;_=b;p=h;h=ue(_|0,4,0,0)|0|0;g=f;f=ue(_+4|0,4,0,0)|0|0;_=ue(32472+(c<<2)|0,4,0,0)|0|0;v=ht(p|0,g|0,_|0)|0;w=P;_=ft(p|0,g|0,64-_|0)|0;le(b|0,_|v|0,4,0);le(b+4|0,P|w|0,4,0);c=c+1|0}while((c|0)!=24);m=r;le(m|0,h|0,4,0);le(m+4|0,f|0,4,0);m=0;p=0;while(1){f=r+0|0;h=e+(m*5<<3)+0|0;c=f+40|0;do{le(f|0,ue(h|0,4,0,0)|0|0,4,0);f=f+4|0;h=h+4|0}while((f|0)<(c|0));h=a;_=ue(h|0,4,0,0)|0|0;h=ue(h+4|0,4,0,0)|0|0;b=i;v=ue(b|0,4,0,0)|0|0;b=ue(b+4|0,4,0,0)|0|0;g=e+(p<<3)|0;f=g;w=(ue(f+4|0,4,0,0)|0)^b&~h;le(g|0,(ue(f|0,4,0,0)|0)^v&~_|0,4,0);le(g+4|0,w|0,4,0);w=s;g=ue(w|0,4,0,0)|0|0;w=ue(w+4|0,4,0,0)|0|0;f=e+(p+1<<3)|0;c=f;b=(ue(c+4|0,4,0,0)|0)^w&~b;le(f|0,(ue(c|0,4,0,0)|0)^g&~v|0,4,0);le(f+4|0,b|0,4,0);b=u;f=ue(b|0,4,0,0)|0|0;b=ue(b+4|0,4,0,0)|0|0;v=e+(p+2<<3)|0;c=v;w=(ue(c+4|0,4,0,0)|0)^b&~w;le(v|0,(ue(c|0,4,0,0)|0)^f&~g|0,4,0);le(v+4|0,w|0,4,0);w=r;v=ue(w|0,4,0,0)|0|0;w=ue(w+4|0,4,0,0)|0|0;g=e+(p+3<<3)|0;c=g;b=(ue(c+4|0,4,0,0)|0)^w&~b;le(g|0,(ue(c|0,4,0,0)|0)^v&~f|0,4,0);le(g+4|0,b|0,4,0);b=e+(p+4<<3)|0;g=b;w=(ue(g+4|0,4,0,0)|0)^h&~w;le(b|0,(ue(g|0,4,0,0)|0)^_&~v|0,4,0);le(b+4|0,w|0,4,0);m=m+1|0;if((m|0)==5){break}else{p=p+5|0}}h=32280+(o<<3)|0;w=e;c=(ue(w|0,4,0,0)|0)^(ue(h|0,4,0,0)|0);h=(ue(w+4|0,4,0,0)|0)^(ue(h+4|0,4,0,0)|0);w=e;le(w|0,c|0,4,0);le(w+4|0,h|0,4,0);o=o+1|0}while((o|0)!=(t|0));d=l;return}function it(e,t,r,o){e=e|0;t=t|0;r=r|0;o=o|0;var n=0,a=0,i=0,s=0,u=0,l=0,c=0,f=0,h=0,m=0;n=d;d=d+352|0;i=n;a=n+200|0;if((o|0)==200){u=136}else{u=200-(o<<1)|0}s=(u|0)/8|0;dt(i|0,0,200)|0;e:do{if((u|0)<=(t|0)){if((u|0)<=7){while(1){at(i,24);t=t-u|0;e=e+u|0;if((t|0)<(u|0)){break e}}}do{l=0;do{h=e+(l<<3)|0;f=i+(l<<3)|0;m=f;c=(ue(m+4|0,4,0,0)|0)^(ue(h+4|0,4,0,0)|0);le(f|0,(ue(m|0,4,0,0)|0)^(ue(h|0,4,0,0)|0)|0,4,0);le(f+4|0,c|0,4,0);l=l+1|0}while((l|0)<(s|0));at(i,24);t=t-u|0;e=e+u|0}while((t|0)>=(u|0))}}while(0);pt(a|0,e|0,t|0)|0;m=t+1|0;le(a+t>>0|0,1|0,1,0);dt(a+m|0,0,u-m|0)|0;m=a+(u+-1)|0;le(m>>0|0,ue(m>>0|0,1,0,1)|0|0|128|0,1,0);if((u|0)<=7){at(i,24);pt(r|0,i|0,o|0)|0;d=n;return 0}u=0;do{f=a+(u<<3)|0;h=i+(u<<3)|0;c=h;m=(ue(c+4|0,4,0,0)|0)^(ue(f+4|0,4,0,0)|0);le(h|0,(ue(c|0,4,0,0)|0)^(ue(f|0,4,0,0)|0)|0,4,0);le(h+4|0,m|0,4,0);u=u+1|0}while((u|0)<(s|0));at(i,24);pt(r|0,i|0,o|0)|0;d=n;return 0}function st(){}function ut(e,t,r){e=e|0;t=t|0;r=r|0;if((r|0)<32){P=t>>r;return e>>>r|(t&(1<<r)-1)<<32-r}P=(t|0)<0?-1:0;return t>>r-32|0}function lt(e,t,r,o){e=e|0;t=t|0;r=r|0;o=o|0;t=t-o-(r>>>0>e>>>0|0)>>>0;return(P=t,e-r>>>0|0)|0}function ct(e,t,r,o){e=e|0;t=t|0;r=r|0;o=o|0;r=e+r>>>0;return(P=t+o+(r>>>0<e>>>0|0)>>>0,r|0)|0}function dt(e,t,r){e=e|0;t=t|0;r=r|0;var o=0,n=0,a=0,i=0;o=e+r|0;if((r|0)>=20){t=t&255;i=e&3;a=t|t<<8|t<<16|t<<24;n=o&~3;if(i){i=e+4-i|0;while((e|0)<(i|0)){le(e|0,t|0,1,0)|0;e=e+1|0}}while((e|0)<(n|0)){le(e|0,a|0,4,0)|0;e=e+4|0}}while((e|0)<(o|0)){le(e|0,t|0,1,0)|0;e=e+1|0}return e-r|0}function ft(e,t,r){e=e|0;t=t|0;r=r|0;if((r|0)<32){P=t>>>r;return e>>>r|(t&(1<<r)-1)<<32-r}P=0;return t>>>r-32|0}function ht(e,t,r){e=e|0;t=t|0;r=r|0;if((r|0)<32){P=t<<r|(e&(1<<r)-1<<32-r)>>>32-r;return e<<r}P=e<<r-32;return 0}function mt(e){e=e|0;var t=0;t=e;while(ue(t|0,1,0,0)|0){t=t+1|0}return t-e|0}function pt(e,t,r){e=e|0;t=t|0;r=r|0;var o=0;if((r|0)>=4096)return me(e|0,t|0,r|0)|0;o=e|0;if((e&3)==(t&3)){while(e&3){if((r|0)==0)return o|0;le(e|0,ue(t|0,1,0,0)|0,1,0)|0;e=e+1|0;t=t+1|0;r=r-1|0}while((r|0)>=4){le(e|0,ue(t|0,4,0,0)|0,4,0)|0;e=e+4|0;t=t+4|0;r=r-4|0}}while((r|0)>0){le(e|0,ue(t|0,1,0,0)|0,1,0)|0;e=e+1|0;t=t+1|0;r=r-1|0}return o|0}function gt(e){e=e|0;var t=0;t=ue(g+(e>>>24)|0,1,0,0)|0;if((t|0)<8)return t|0;t=ue(g+(e>>16&255)|0,1,0,0)|0;if((t|0)<8)return t+8|0;t=ue(g+(e>>8&255)|0,1,0,0)|0;if((t|0)<8)return t+16|0;return(ue(g+(e&255)|0,1,0,0)|0)+24|0}function _t(e){e=e|0;var t=0;t=ue(p+(e&255)|0,1,0,0)|0;if((t|0)<8)return t|0;t=ue(p+(e>>8&255)|0,1,0,0)|0;if((t|0)<8)return t+8|0;t=ue(p+(e>>16&255)|0,1,0,0)|0;if((t|0)<8)return t+16|0;return(ue(p+(e>>>24)|0,1,0,0)|0)+24|0}function vt(e,t){e=e|0;t=t|0;var r=0,o=0,n=0,a=0;a=e&65535;o=t&65535;r=re(o,a)|0;n=e>>>16;o=(r>>>16)+(re(o,n)|0)|0;t=t>>>16;e=re(t,a)|0;return(P=(o>>>16)+(re(t,n)|0)+(((o&65535)+e|0)>>>16)|0,o+e<<16|r&65535|0)|0}function bt(e,t,r,o){e=e|0;t=t|0;r=r|0;o=o|0;var n=0,a=0,i=0,s=0,u=0,l=0;l=t>>31|((t|0)<0?-1:0)<<1;u=((t|0)<0?-1:0)>>31|((t|0)<0?-1:0)<<1;a=o>>31|((o|0)<0?-1:0)<<1;n=((o|0)<0?-1:0)>>31|((o|0)<0?-1:0)<<1;s=lt(l^e,u^t,l,u)|0;i=P;t=a^l;e=n^u;e=lt((At(s,i,lt(a^r,n^o,a,n)|0,P,0)|0)^t,P^e,t,e)|0;return e|0}function wt(e,t,r,o){e=e|0;t=t|0;r=r|0;o=o|0;var n=0,a=0,i=0,s=0,u=0,l=0;n=d;d=d+8|0;s=n|0;i=t>>31|((t|0)<0?-1:0)<<1;a=((t|0)<0?-1:0)>>31|((t|0)<0?-1:0)<<1;l=o>>31|((o|0)<0?-1:0)<<1;u=((o|0)<0?-1:0)>>31|((o|0)<0?-1:0)<<1;t=lt(i^e,a^t,i,a)|0;e=P;At(t,e,lt(l^r,u^o,l,u)|0,P,s)|0;e=lt((ue(s|0,4,0,0)|0)^i,(ue(s+4|0,4,0,0)|0)^a,i,a)|0;t=P;d=n;return(P=t,e)|0}function yt(e,t,r,o){e=e|0;t=t|0;r=r|0;o=o|0;var n=0,a=0;n=e;a=r;e=vt(n,a)|0;r=P;return(P=(re(t,a)|0)+(re(o,n)|0)+r|r&0,e|0|0)|0}function Et(e,t,r,o){e=e|0;t=t|0;r=r|0;o=o|0;e=At(e,t,r,o,0)|0;return e|0}function St(e,t,r,o){e=e|0;t=t|0;r=r|0;o=o|0;var n=0,a=0;a=d;d=d+8|0;n=a|0;At(e,t,r,o,n)|0;d=a;return(P=ue(n+4|0,4,0,0)|0|0,ue(n|0,4,0,0)|0|0)|0}function At(e,t,r,o,n){e=e|0;t=t|0;r=r|0;o=o|0;n=n|0;var a=0,i=0,s=0,u=0,l=0,c=0,d=0,f=0,h=0,m=0;i=e;u=t;s=u;c=r;a=o;l=a;if((s|0)==0){a=(n|0)!=0;if((l|0)==0){if(a){le(n|0,(i>>>0)%(c>>>0)|0,4,0);le(n+4|0,0|0,4,0)}l=0;d=(i>>>0)/(c>>>0)>>>0;return(P=l,d)|0}else{if(!a){c=0;d=0;return(P=c,d)|0}le(n|0,e|0|0,4,0);le(n+4|0,t&0|0,4,0);c=0;d=0;return(P=c,d)|0}}d=(l|0)==0;do{if((c|0)!=0){if(!d){l=(gt(l|0)|0)-(gt(s|0)|0)|0;if(l>>>0<=31){d=l+1|0;c=31-l|0;e=l-31>>31;u=d;t=i>>>(d>>>0)&e|s<<c;e=s>>>(d>>>0)&e;l=0;c=i<<c;break}if((n|0)==0){c=0;d=0;return(P=c,d)|0}le(n|0,e|0|0,4,0);le(n+4|0,u|t&0|0,4,0);c=0;d=0;return(P=c,d)|0}l=c-1|0;if((l&c|0)!=0){c=(gt(c|0)|0)+33-(gt(s|0)|0)|0;m=64-c|0;d=32-c|0;f=d>>31;h=c-32|0;e=h>>31;u=c;t=d-1>>31&s>>>(h>>>0)|(s<<d|i>>>(c>>>0))&e;e=e&s>>>(c>>>0);l=i<<m&f;c=(s<<m|i>>>(h>>>0))&f|i<<d&c-33>>31;break}if((n|0)!=0){le(n|0,l&i|0,4,0);le(n+4|0,0|0,4,0)}if((c|0)==1){h=u|t&0;m=e|0|0;return(P=h,m)|0}else{m=_t(c|0)|0;h=s>>>(m>>>0)|0;m=s<<32-m|i>>>(m>>>0)|0;return(P=h,m)|0}}else{if(d){if((n|0)!=0){le(n|0,(s>>>0)%(c>>>0)|0,4,0);le(n+4|0,0|0,4,0)}h=0;m=(s>>>0)/(c>>>0)>>>0;return(P=h,m)|0}if((i|0)==0){if((n|0)!=0){le(n|0,0|0,4,0);le(n+4|0,(s>>>0)%(l>>>0)|0,4,0)}h=0;m=(s>>>0)/(l>>>0)>>>0;return(P=h,m)|0}c=l-1|0;if((c&l|0)==0){if((n|0)!=0){le(n|0,e|0|0,4,0);le(n+4|0,c&s|t&0|0,4,0)}h=0;m=s>>>((_t(l|0)|0)>>>0);return(P=h,m)|0}l=(gt(l|0)|0)-(gt(s|0)|0)|0;if(l>>>0<=30){e=l+1|0;c=31-l|0;u=e;t=s<<c|i>>>(e>>>0);e=s>>>(e>>>0);l=0;c=i<<c;break}if((n|0)==0){h=0;m=0;return(P=h,m)|0}le(n|0,e|0|0,4,0);le(n+4|0,u|t&0|0,4,0);h=0;m=0;return(P=h,m)|0}}while(0);if((u|0)==0){a=c;o=0;s=0}else{i=r|0|0;a=a|o&0;o=ct(i,a,-1,-1)|0;r=P;s=0;do{d=c;c=l>>>31|c<<1;l=s|l<<1;d=t<<1|d>>>31|0;f=t>>>31|e<<1|0;lt(o,r,d,f)|0;m=P;h=m>>31|((m|0)<0?-1:0)<<1;s=h&1;t=lt(d,f,h&i,(((m|0)<0?-1:0)>>31|((m|0)<0?-1:0)<<1)&a)|0;e=P;u=u-1|0}while((u|0)!=0);a=c;o=0}i=0;if((n|0)!=0){le(n|0,t|0,4,0);le(n+4|0,e|0,4,0)}h=(l|0)>>>31|(a|i)<<1|(i<<1|l>>>31)&0|o;m=(l<<1|0>>>31)&-2|s;return(P=h,m)|0}return{_strlen:mt,_ge_mul8:Ze,_keccak:it,_ge_scalarmult:Xe,_ge_fromfe_frombytes_vartime:$e,_sc_mulsub:rt,_sc_reduce32:Qe,_bitshift64Lshr:ft,_bitshift64Shl:ht,_sc_add:et,_bitshift64Ashr:ut,_memset:dt,_i64Add:ct,_memcpy:pt,_ge_double_scalarmult_base_vartime:Ne,_ge_p3_tobytes:Ue,_ge_double_scalarmult_precomp_vartime:Ke,_i64Subtract:lt,_ge_scalarmult_base:Ve,_ge_p1p1_to_p3:Te,_ge_p1p1_to_p2:Ie,_ge_dsm_precomp:Oe,_ge_frombytes_vartime:Ce,_ge_tobytes:We,_sc_0:Je,_sc_sub:tt,_sc_reduce:Ge,_ge_p3_to_cached:Re,_sc_check:ot,_ge_add:ke,runPostSets:st,stackAlloc:ve,stackSave:be,stackRestore:we,setThrew:ye,setTempRet0:Ae,getTempRet0:Me}}({Math:Math,Int8Array:Int8Array,Int16Array:Int16Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array},{abort:abort,assert:assert,asmPrintInt:asmPrintInt,asmPrintFloat:asmPrintFloat,min:Math_min,SAFE_HEAP_LOAD:SAFE_HEAP_LOAD,SAFE_HEAP_STORE:SAFE_HEAP_STORE,SAFE_FT_MASK:SAFE_FT_MASK,_free:_free,___setErrNo:___setErrNo,_malloc:_malloc,_emscripten_memcpy_big:_emscripten_memcpy_big,_fflush:_fflush,___assert_fail:___assert_fail,STACKTOP:STACKTOP,STACK_MAX:STACK_MAX,tempDoublePtr:tempDoublePtr,ABORT:ABORT,cttz_i8:cttz_i8,ctlz_i8:ctlz_i8,NaN:NaN,Infinity:1/0},buffer),_strlen=Module["_strlen"]=asm["_strlen"],_ge_mul8=Module["_ge_mul8"]=asm["_ge_mul8"],_keccak=Module["_keccak"]=asm["_keccak"],_ge_scalarmult=Module["_ge_scalarmult"]=asm["_ge_scalarmult"],_ge_fromfe_frombytes_vartime=Module["_ge_fromfe_frombytes_vartime"]=asm["_ge_fromfe_frombytes_vartime"],_sc_mulsub=Module["_sc_mulsub"]=asm["_sc_mulsub"],_sc_reduce32=Module["_sc_reduce32"]=asm["_sc_reduce32"],_bitshift64Lshr=Module["_bitshift64Lshr"]=asm["_bitshift64Lshr"],_bitshift64Shl=Module["_bitshift64Shl"]=asm["_bitshift64Shl"],_sc_add=Module["_sc_add"]=asm["_sc_add"],_bitshift64Ashr=Module["_bitshift64Ashr"]=asm["_bitshift64Ashr"],_memset=Module["_memset"]=asm["_memset"],_i64Add=Module["_i64Add"]=asm["_i64Add"],_memcpy=Module["_memcpy"]=asm["_memcpy"],_ge_double_scalarmult_base_vartime=Module["_ge_double_scalarmult_base_vartime"]=asm["_ge_double_scalarmult_base_vartime"],_ge_p3_tobytes=Module["_ge_p3_tobytes"]=asm["_ge_p3_tobytes"],_ge_double_scalarmult_precomp_vartime=Module["_ge_double_scalarmult_precomp_vartime"]=asm["_ge_double_scalarmult_precomp_vartime"],_i64Subtract=Module["_i64Subtract"]=asm["_i64Subtract"],_ge_scalarmult_base=Module["_ge_scalarmult_base"]=asm["_ge_scalarmult_base"],_ge_p1p1_to_p3=Module["_ge_p1p1_to_p3"]=asm["_ge_p1p1_to_p3"],_ge_p1p1_to_p2=Module["_ge_p1p1_to_p2"]=asm["_ge_p1p1_to_p2"],_ge_dsm_precomp=Module["_ge_dsm_precomp"]=asm["_ge_dsm_precomp"],_ge_frombytes_vartime=Module["_ge_frombytes_vartime"]=asm["_ge_frombytes_vartime"],_ge_tobytes=Module["_ge_tobytes"]=asm["_ge_tobytes"],_sc_0=Module["_sc_0"]=asm["_sc_0"],_sc_sub=Module["_sc_sub"]=asm["_sc_sub"],_sc_reduce=Module["_sc_reduce"]=asm["_sc_reduce"],_ge_p3_to_cached=Module["_ge_p3_to_cached"]=asm["_ge_p3_to_cached"],_sc_check=Module["_sc_check"]=asm["_sc_check"],_ge_add=Module["_ge_add"]=asm["_ge_add"],runPostSets=Module["runPostSets"]=asm["runPostSets"];Runtime.stackAlloc=asm["stackAlloc"],Runtime.stackSave=asm["stackSave"],Runtime.stackRestore=asm["stackRestore"],Runtime.setTempRet0=asm["setTempRet0"],Runtime.getTempRet0=asm["getTempRet0"];var i64Math=function(){var e={math:{}};e.math.Long=function(e,t){this.low_=0|e,this.high_=0|t},e.math.Long.IntCache_={},e.math.Long.fromInt=function(t){if(-128<=t&&t<128){var r=e.math.Long.IntCache_[t];if(r)return r}var o=new e.math.Long(0|t,t<0?-1:0);return-128<=t&&t<128&&(e.math.Long.IntCache_[t]=o),o},e.math.Long.fromNumber=function(t){return isNaN(t)||!isFinite(t)?e.math.Long.ZERO:t<=-e.math.Long.TWO_PWR_63_DBL_?e.math.Long.MIN_VALUE:t+1>=e.math.Long.TWO_PWR_63_DBL_?e.math.Long.MAX_VALUE:t<0?e.math.Long.fromNumber(-t).negate():new e.math.Long(t%e.math.Long.TWO_PWR_32_DBL_|0,t/e.math.Long.TWO_PWR_32_DBL_|0)},e.math.Long.fromBits=function(t,r){return new e.math.Long(t,r)},e.math.Long.fromString=function(t,r){if(0==t.length)throw Error("number format error: empty string");var o=r||10;if(o<2||36<o)throw Error("radix out of range: "+o);if("-"==t.charAt(0))return e.math.Long.fromString(t.substring(1),o).negate();if(t.indexOf("-")>=0)throw Error('number format error: interior "-" character: '+t);for(var n=e.math.Long.fromNumber(Math.pow(o,8)),a=e.math.Long.ZERO,i=0;i<t.length;i+=8){var s=Math.min(8,t.length-i),u=parseInt(t.substring(i,i+s),o);if(s<8){var l=e.math.Long.fromNumber(Math.pow(o,s));a=a.multiply(l).add(e.math.Long.fromNumber(u))}else a=a.multiply(n),a=a.add(e.math.Long.fromNumber(u))}return a},e.math.Long.TWO_PWR_16_DBL_=65536,e.math.Long.TWO_PWR_24_DBL_=1<<24,e.math.Long.TWO_PWR_32_DBL_=e.math.Long.TWO_PWR_16_DBL_*e.math.Long.TWO_PWR_16_DBL_,e.math.Long.TWO_PWR_31_DBL_=e.math.Long.TWO_PWR_32_DBL_/2,e.math.Long.TWO_PWR_48_DBL_=e.math.Long.TWO_PWR_32_DBL_*e.math.Long.TWO_PWR_16_DBL_,e.math.Long.TWO_PWR_64_DBL_=e.math.Long.TWO_PWR_32_DBL_*e.math.Long.TWO_PWR_32_DBL_,e.math.Long.TWO_PWR_63_DBL_=e.math.Long.TWO_PWR_64_DBL_/2,e.math.Long.ZERO=e.math.Long.fromInt(0),e.math.Long.ONE=e.math.Long.fromInt(1),e.math.Long.NEG_ONE=e.math.Long.fromInt(-1),e.math.Long.MAX_VALUE=e.math.Long.fromBits(-1,2147483647),e.math.Long.MIN_VALUE=e.math.Long.fromBits(0,-2147483648),e.math.Long.TWO_PWR_24_=e.math.Long.fromInt(1<<24),e.math.Long.prototype.toInt=function(){return this.low_},e.math.Long.prototype.toNumber=function(){return this.high_*e.math.Long.TWO_PWR_32_DBL_+this.getLowBitsUnsigned()},e.math.Long.prototype.toString=function(t){var r=t||10;if(r<2||36<r)throw Error("radix out of range: "+r);if(this.isZero())return"0";if(this.isNegative()){if(this.equals(e.math.Long.MIN_VALUE)){var o=e.math.Long.fromNumber(r),n=this.div(o),a=n.multiply(o).subtract(this);return n.toString(r)+a.toInt().toString(r)}return"-"+this.negate().toString(r)}var i=e.math.Long.fromNumber(Math.pow(r,6)),s=(a=this,"");while(1){var u=a.div(i),l=a.subtract(u.multiply(i)).toInt(),c=l.toString(r);if(a=u,a.isZero())return c+s;while(c.length<6)c="0"+c;s=""+c+s}},e.math.Long.prototype.getHighBits=function(){return this.high_},e.math.Long.prototype.getLowBits=function(){return this.low_},e.math.Long.prototype.getLowBitsUnsigned=function(){return this.low_>=0?this.low_:e.math.Long.TWO_PWR_32_DBL_+this.low_},e.math.Long.prototype.getNumBitsAbs=function(){if(this.isNegative())return this.equals(e.math.Long.MIN_VALUE)?64:this.negate().getNumBitsAbs();for(var t=0!=this.high_?this.high_:this.low_,r=31;r>0;r--)if(0!=(t&1<<r))break;return 0!=this.high_?r+33:r+1},e.math.Long.prototype.isZero=function(){return 0==this.high_&&0==this.low_},e.math.Long.prototype.isNegative=function(){return this.high_<0},e.math.Long.prototype.isOdd=function(){return 1==(1&this.low_)},e.math.Long.prototype.equals=function(e){return this.high_==e.high_&&this.low_==e.low_},e.math.Long.prototype.notEquals=function(e){return this.high_!=e.high_||this.low_!=e.low_},e.math.Long.prototype.lessThan=function(e){return this.compare(e)<0},e.math.Long.prototype.lessThanOrEqual=function(e){return this.compare(e)<=0},e.math.Long.prototype.greaterThan=function(e){return this.compare(e)>0},e.math.Long.prototype.greaterThanOrEqual=function(e){return this.compare(e)>=0},e.math.Long.prototype.compare=function(e){if(this.equals(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.subtract(e).isNegative()?-1:1},e.math.Long.prototype.negate=function(){return this.equals(e.math.Long.MIN_VALUE)?e.math.Long.MIN_VALUE:this.not().add(e.math.Long.ONE)},e.math.Long.prototype.add=function(t){var r=this.high_>>>16,o=65535&this.high_,n=this.low_>>>16,a=65535&this.low_,i=t.high_>>>16,s=65535&t.high_,u=t.low_>>>16,l=65535&t.low_,c=0,d=0,f=0,h=0;return h+=a+l,f+=h>>>16,h&=65535,f+=n+u,d+=f>>>16,f&=65535,d+=o+s,c+=d>>>16,d&=65535,c+=r+i,c&=65535,e.math.Long.fromBits(f<<16|h,c<<16|d)},e.math.Long.prototype.subtract=function(e){return this.add(e.negate())},e.math.Long.prototype.multiply=function(t){if(this.isZero())return e.math.Long.ZERO;if(t.isZero())return e.math.Long.ZERO;if(this.equals(e.math.Long.MIN_VALUE))return t.isOdd()?e.math.Long.MIN_VALUE:e.math.Long.ZERO;if(t.equals(e.math.Long.MIN_VALUE))return this.isOdd()?e.math.Long.MIN_VALUE:e.math.Long.ZERO;if(this.isNegative())return t.isNegative()?this.negate().multiply(t.negate()):this.negate().multiply(t).negate();if(t.isNegative())return this.multiply(t.negate()).negate();if(this.lessThan(e.math.Long.TWO_PWR_24_)&&t.lessThan(e.math.Long.TWO_PWR_24_))return e.math.Long.fromNumber(this.toNumber()*t.toNumber());var r=this.high_>>>16,o=65535&this.high_,n=this.low_>>>16,a=65535&this.low_,i=t.high_>>>16,s=65535&t.high_,u=t.low_>>>16,l=65535&t.low_,c=0,d=0,f=0,h=0;return h+=a*l,f+=h>>>16,h&=65535,f+=n*l,d+=f>>>16,f&=65535,f+=a*u,d+=f>>>16,f&=65535,d+=o*l,c+=d>>>16,d&=65535,d+=n*u,c+=d>>>16,d&=65535,d+=a*s,c+=d>>>16,d&=65535,c+=r*l+o*u+n*s+a*i,c&=65535,e.math.Long.fromBits(f<<16|h,c<<16|d)},e.math.Long.prototype.div=function(t){if(t.isZero())throw Error("division by zero");if(this.isZero())return e.math.Long.ZERO;if(this.equals(e.math.Long.MIN_VALUE)){if(t.equals(e.math.Long.ONE)||t.equals(e.math.Long.NEG_ONE))return e.math.Long.MIN_VALUE;if(t.equals(e.math.Long.MIN_VALUE))return e.math.Long.ONE;var r=this.shiftRight(1),o=r.div(t).shiftLeft(1);if(o.equals(e.math.Long.ZERO))return t.isNegative()?e.math.Long.ONE:e.math.Long.NEG_ONE;var n=this.subtract(t.multiply(o)),a=o.add(n.div(t));return a}if(t.equals(e.math.Long.MIN_VALUE))return e.math.Long.ZERO;if(this.isNegative())return t.isNegative()?this.negate().div(t.negate()):this.negate().div(t).negate();if(t.isNegative())return this.div(t.negate()).negate();var i=e.math.Long.ZERO;n=this;while(n.greaterThanOrEqual(t)){o=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));var s=Math.ceil(Math.log(o)/Math.LN2),u=s<=48?1:Math.pow(2,s-48),l=e.math.Long.fromNumber(o),c=l.multiply(t);while(c.isNegative()||c.greaterThan(n))o-=u,l=e.math.Long.fromNumber(o),c=l.multiply(t);l.isZero()&&(l=e.math.Long.ONE),i=i.add(l),n=n.subtract(c)}return i},e.math.Long.prototype.modulo=function(e){return this.subtract(this.div(e).multiply(e))},e.math.Long.prototype.not=function(){return e.math.Long.fromBits(~this.low_,~this.high_)},e.math.Long.prototype.and=function(t){return e.math.Long.fromBits(this.low_&t.low_,this.high_&t.high_)},e.math.Long.prototype.or=function(t){return e.math.Long.fromBits(this.low_|t.low_,this.high_|t.high_)},e.math.Long.prototype.xor=function(t){return e.math.Long.fromBits(this.low_^t.low_,this.high_^t.high_)},e.math.Long.prototype.shiftLeft=function(t){if(t&=63,0==t)return this;var r=this.low_;if(t<32){var o=this.high_;return e.math.Long.fromBits(r<<t,o<<t|r>>>32-t)}return e.math.Long.fromBits(0,r<<t-32)},e.math.Long.prototype.shiftRight=function(t){if(t&=63,0==t)return this;var r=this.high_;if(t<32){var o=this.low_;return e.math.Long.fromBits(o>>>t|r<<32-t,r>>t)}return e.math.Long.fromBits(r>>t-32,r>=0?0:-1)},e.math.Long.prototype.shiftRightUnsigned=function(t){if(t&=63,0==t)return this;var r=this.high_;if(t<32){var o=this.low_;return e.math.Long.fromBits(o>>>t|r<<32-t,r>>>t)}return 32==t?e.math.Long.fromBits(r,0):e.math.Long.fromBits(r>>>t-32,0)};var t,r={appName:"Modern Browser"},o=0xdeadbeefcafe,n=15715070==(16777215&o);function a(e,t,r){null!=e&&("number"==typeof e?this.fromNumber(e,t,r):null==t&&"string"!=typeof e?this.fromString(e,256):this.fromString(e,t))}function i(){return new a(null)}function s(e,t,r,o,n,a){while(--a>=0){var i=t*this[e++]+r[o]+n;n=Math.floor(i/67108864),r[o++]=67108863&i}return n}function u(e,t,r,o,n,a){var i=32767&t,s=t>>15;while(--a>=0){var u=32767&this[e],l=this[e++]>>15,c=s*u+l*i;u=i*u+((32767&c)<<15)+r[o]+(1073741823&n),n=(u>>>30)+(c>>>15)+s*l+(n>>>30),r[o++]=1073741823&u}return n}function l(e,t,r,o,n,a){var i=16383&t,s=t>>14;while(--a>=0){var u=16383&this[e],l=this[e++]>>14,c=s*u+l*i;u=i*u+((16383&c)<<14)+r[o]+n,n=(u>>28)+(c>>14)+s*l,r[o++]=268435455&u}return n}n&&"Microsoft Internet Explorer"==r.appName?(a.prototype.am=u,t=30):n&&"Netscape"!=r.appName?(a.prototype.am=s,t=26):(a.prototype.am=l,t=28),a.prototype.DB=t,a.prototype.DM=(1<<t)-1,a.prototype.DV=1<<t;var c=52;a.prototype.FV=Math.pow(2,c),a.prototype.F1=c-t,a.prototype.F2=2*t-c;var d,f,h="0123456789abcdefghijklmnopqrstuvwxyz",m=new Array;for(d="0".charCodeAt(0),f=0;f<=9;++f)m[d++]=f;for(d="a".charCodeAt(0),f=10;f<36;++f)m[d++]=f;for(d="A".charCodeAt(0),f=10;f<36;++f)m[d++]=f;function p(e){return h.charAt(e)}function g(e,t){var r=m[e.charCodeAt(t)];return null==r?-1:r}function _(e){for(var t=this.t-1;t>=0;--t)e[t]=this[t];e.t=this.t,e.s=this.s}function v(e){this.t=1,this.s=e<0?-1:0,e>0?this[0]=e:e<-1?this[0]=e+DV:this.t=0}function b(e){var t=i();return t.fromInt(e),t}function w(e,t){var r;if(16==t)r=4;else if(8==t)r=3;else if(256==t)r=8;else if(2==t)r=1;else if(32==t)r=5;else{if(4!=t)return void this.fromRadix(e,t);r=2}this.t=0,this.s=0;var o=e.length,n=!1,i=0;while(--o>=0){var s=8==r?255&e[o]:g(e,o);s<0?"-"==e.charAt(o)&&(n=!0):(n=!1,0==i?this[this.t++]=s:i+r>this.DB?(this[this.t-1]|=(s&(1<<this.DB-i)-1)<<i,this[this.t++]=s>>this.DB-i):this[this.t-1]|=s<<i,i+=r,i>=this.DB&&(i-=this.DB))}8==r&&0!=(128&e[0])&&(this.s=-1,i>0&&(this[this.t-1]|=(1<<this.DB-i)-1<<i)),this.clamp(),n&&a.ZERO.subTo(this,this)}function y(){var e=this.s&this.DM;while(this.t>0&&this[this.t-1]==e)--this.t}function E(e){if(this.s<0)return"-"+this.negate().toString(e);var t;if(16==e)t=4;else if(8==e)t=3;else if(2==e)t=1;else if(32==e)t=5;else{if(4!=e)return this.toRadix(e);t=2}var r,o=(1<<t)-1,n=!1,a="",i=this.t,s=this.DB-i*this.DB%t;if(i-- >0){s<this.DB&&(r=this[i]>>s)>0&&(n=!0,a=p(r));while(i>=0)s<t?(r=(this[i]&(1<<s)-1)<<t-s,r|=this[--i]>>(s+=this.DB-t)):(r=this[i]>>(s-=t)&o,s<=0&&(s+=this.DB,--i)),r>0&&(n=!0),n&&(a+=p(r))}return n?a:"0"}function S(){var e=i();return a.ZERO.subTo(this,e),e}function A(){return this.s<0?this.negate():this}function M(e){var t=this.s-e.s;if(0!=t)return t;var r=this.t;if(t=r-e.t,0!=t)return this.s<0?-t:t;while(--r>=0)if(0!=(t=this[r]-e[r]))return t;return 0}function k(e){var t,r=1;return 0!=(t=e>>>16)&&(e=t,r+=16),0!=(t=e>>8)&&(e=t,r+=8),0!=(t=e>>4)&&(e=t,r+=4),0!=(t=e>>2)&&(e=t,r+=2),0!=(t=e>>1)&&(e=t,r+=1),r}function F(){return this.t<=0?0:this.DB*(this.t-1)+k(this[this.t-1]^this.s&this.DM)}function O(e,t){var r;for(r=this.t-1;r>=0;--r)t[r+e]=this[r];for(r=e-1;r>=0;--r)t[r]=0;t.t=this.t+e,t.s=this.s}function R(e,t){for(var r=e;r<this.t;++r)t[r-e]=this[r];t.t=Math.max(this.t-e,0),t.s=this.s}function T(e,t){var r,o=e%this.DB,n=this.DB-o,a=(1<<n)-1,i=Math.floor(e/this.DB),s=this.s<<o&this.DM;for(r=this.t-1;r>=0;--r)t[r+i+1]=this[r]>>n|s,s=(this[r]&a)<<o;for(r=i-1;r>=0;--r)t[r]=0;t[i]=s,t.t=this.t+i+1,t.s=this.s,t.clamp()}function N(e,t){t.s=this.s;var r=Math.floor(e/this.DB);if(r>=this.t)t.t=0;else{var o=e%this.DB,n=this.DB-o,a=(1<<o)-1;t[0]=this[r]>>o;for(var i=r+1;i<this.t;++i)t[i-r-1]|=(this[i]&a)<<n,t[i-r]=this[i]>>o;o>0&&(t[this.t-r-1]|=(this.s&a)<<n),t.t=this.t-r,t.clamp()}}function P(e,t){var r=0,o=0,n=Math.min(e.t,this.t);while(r<n)o+=this[r]-e[r],t[r++]=o&this.DM,o>>=this.DB;if(e.t<this.t){o-=e.s;while(r<this.t)o+=this[r],t[r++]=o&this.DM,o>>=this.DB;o+=this.s}else{o+=this.s;while(r<e.t)o-=e[r],t[r++]=o&this.DM,o>>=this.DB;o-=e.s}t.s=o<0?-1:0,o<-1?t[r++]=this.DV+o:o>0&&(t[r++]=o),t.t=r,t.clamp()}function D(e,t){var r=this.abs(),o=e.abs(),n=r.t;t.t=n+o.t;while(--n>=0)t[n]=0;for(n=0;n<o.t;++n)t[n+r.t]=r.am(0,o[n],t,n,0,r.t);t.s=0,t.clamp(),this.s!=e.s&&a.ZERO.subTo(t,t)}function x(e){var t=this.abs(),r=e.t=2*t.t;while(--r>=0)e[r]=0;for(r=0;r<t.t-1;++r){var o=t.am(r,t[r],e,2*r,0,1);(e[r+t.t]+=t.am(r+1,2*t[r],e,2*r+1,o,t.t-r-1))>=t.DV&&(e[r+t.t]-=t.DV,e[r+t.t+1]=1)}e.t>0&&(e[e.t-1]+=t.am(r,t[r],e,2*r,0,1)),e.s=0,e.clamp()}function L(e,t,r){var o=e.abs();if(!(o.t<=0)){var n=this.abs();if(n.t<o.t)return null!=t&&t.fromInt(0),void(null!=r&&this.copyTo(r));null==r&&(r=i());var s=i(),u=this.s,l=e.s,c=this.DB-k(o[o.t-1]);c>0?(o.lShiftTo(c,s),n.lShiftTo(c,r)):(o.copyTo(s),n.copyTo(r));var d=s.t,f=s[d-1];if(0!=f){var h=f*(1<<this.F1)+(d>1?s[d-2]>>this.F2:0),m=this.FV/h,p=(1<<this.F1)/h,g=1<<this.F2,_=r.t,v=_-d,b=null==t?i():t;s.dlShiftTo(v,b),r.compareTo(b)>=0&&(r[r.t++]=1,r.subTo(b,r)),a.ONE.dlShiftTo(d,b),b.subTo(s,s);while(s.t<d)s[s.t++]=0;while(--v>=0){var w=r[--_]==f?this.DM:Math.floor(r[_]*m+(r[_-1]+g)*p);if((r[_]+=s.am(0,w,r,v,0,d))<w){s.dlShiftTo(v,b),r.subTo(b,r);while(r[_]<--w)r.subTo(b,r)}}null!=t&&(r.drShiftTo(d,t),u!=l&&a.ZERO.subTo(t,t)),r.t=d,r.clamp(),c>0&&r.rShiftTo(c,r),u<0&&a.ZERO.subTo(r,r)}}}function I(e){var t=i();return this.abs().divRemTo(e,null,t),this.s<0&&t.compareTo(a.ZERO)>0&&e.subTo(t,t),t}function C(e){this.m=e}function z(e){return e.s<0||e.compareTo(this.m)>=0?e.mod(this.m):e}function B(e){return e}function j(e){e.divRemTo(this.m,null,e)}function U(e,t,r){e.multiplyTo(t,r),this.reduce(r)}function H(e,t){e.squareTo(t),this.reduce(t)}function q(){if(this.t<1)return 0;var e=this[0];if(0==(1&e))return 0;var t=3&e;return t=t*(2-(15&e)*t)&15,t=t*(2-(255&e)*t)&255,t=t*(2-((65535&e)*t&65535))&65535,t=t*(2-e*t%this.DV)%this.DV,t>0?this.DV-t:-t}function V(e){this.m=e,this.mp=e.invDigit(),this.mpl=32767&this.mp,this.mph=this.mp>>15,this.um=(1<<e.DB-15)-1,this.mt2=2*e.t}function Y(e){var t=i();return e.abs().dlShiftTo(this.m.t,t),t.divRemTo(this.m,null,t),e.s<0&&t.compareTo(a.ZERO)>0&&this.m.subTo(t,t),t}function W(e){var t=i();return e.copyTo(t),this.reduce(t),t}function G(e){while(e.t<=this.mt2)e[e.t++]=0;for(var t=0;t<this.m.t;++t){var r=32767&e[t],o=r*this.mpl+((r*this.mph+(e[t]>>15)*this.mpl&this.um)<<15)&e.DM;r=t+this.m.t,e[r]+=this.m.am(0,o,e,t,0,this.m.t);while(e[r]>=e.DV)e[r]-=e.DV,e[++r]++}e.clamp(),e.drShiftTo(this.m.t,e),e.compareTo(this.m)>=0&&e.subTo(this.m,e)}function X(e,t){e.squareTo(t),this.reduce(t)}function K(e,t,r){e.multiplyTo(t,r),this.reduce(r)}function Z(){return 0==(this.t>0?1&this[0]:this.s)}function $(e,t){if(e>4294967295||e<1)return a.ONE;var r=i(),o=i(),n=t.convert(this),s=k(e)-1;n.copyTo(r);while(--s>=0)if(t.sqrTo(r,o),(e&1<<s)>0)t.mulTo(o,n,r);else{var u=r;r=o,o=u}return t.revert(r)}function J(e,t){var r;return r=e<256||t.isEven()?new C(t):new V(t),this.exp(e,r)}function Q(e,t){this.fromInt(0),null==t&&(t=10);for(var r=this.chunkSize(t),o=Math.pow(t,r),n=!1,i=0,s=0,u=0;u<e.length;++u){var l=g(e,u);l<0?"-"==e.charAt(u)&&0==this.signum()&&(n=!0):(s=t*s+l,++i>=r&&(this.dMultiply(o),this.dAddOffset(s,0),i=0,s=0))}i>0&&(this.dMultiply(Math.pow(t,i)),this.dAddOffset(s,0)),n&&a.ZERO.subTo(this,this)}function ee(e){return Math.floor(Math.LN2*this.DB/Math.log(e))}function te(){return this.s<0?-1:this.t<=0||1==this.t&&this[0]<=0?0:1}function re(e){this[this.t]=this.am(0,e-1,this,0,0,this.t),++this.t,this.clamp()}function oe(e,t){if(0!=e){while(this.t<=t)this[this.t++]=0;this[t]+=e;while(this[t]>=this.DV)this[t]-=this.DV,++t>=this.t&&(this[this.t++]=0),++this[t]}}function ne(e){if(null==e&&(e=10),0==this.signum()||e<2||e>36)return"0";var t=this.chunkSize(e),r=Math.pow(e,t),o=b(r),n=i(),a=i(),s="";this.divRemTo(o,n,a);while(n.signum()>0)s=(r+a.intValue()).toString(e).substr(1)+s,n.divRemTo(o,n,a);return a.intValue().toString(e)+s}function ae(){if(this.s<0){if(1==this.t)return this[0]-this.DV;if(0==this.t)return-1}else{if(1==this.t)return this[0];if(0==this.t)return 0}return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0]}function ie(e,t){var r=0,o=0,n=Math.min(e.t,this.t);while(r<n)o+=this[r]+e[r],t[r++]=o&this.DM,o>>=this.DB;if(e.t<this.t){o+=e.s;while(r<this.t)o+=this[r],t[r++]=o&this.DM,o>>=this.DB;o+=this.s}else{o+=this.s;while(r<e.t)o+=e[r],t[r++]=o&this.DM,o>>=this.DB;o+=e.s}t.s=o<0?-1:0,o>0?t[r++]=o:o<-1&&(t[r++]=this.DV+o),t.t=r,t.clamp()}C.prototype.convert=z,C.prototype.revert=B,C.prototype.reduce=j,C.prototype.mulTo=U,C.prototype.sqrTo=H,V.prototype.convert=Y,V.prototype.revert=W,V.prototype.reduce=G,V.prototype.mulTo=K,V.prototype.sqrTo=X,a.prototype.copyTo=_,a.prototype.fromInt=v,a.prototype.fromString=w,a.prototype.clamp=y,a.prototype.dlShiftTo=O,a.prototype.drShiftTo=R,a.prototype.lShiftTo=T,a.prototype.rShiftTo=N,a.prototype.subTo=P,a.prototype.multiplyTo=D,a.prototype.squareTo=x,a.prototype.divRemTo=L,a.prototype.invDigit=q,a.prototype.isEven=Z,a.prototype.exp=$,a.prototype.toString=E,a.prototype.negate=S,a.prototype.abs=A,a.prototype.compareTo=M,a.prototype.bitLength=F,a.prototype.mod=I,a.prototype.modPowInt=J,a.ZERO=b(0),a.ONE=b(1),a.prototype.fromRadix=Q,a.prototype.chunkSize=ee,a.prototype.signum=te,a.prototype.dMultiply=re,a.prototype.dAddOffset=oe,a.prototype.toRadix=ne,a.prototype.intValue=ae,a.prototype.addTo=ie;var se={abs:function(t,r){var o,n=new e.math.Long(t,r);o=n.isNegative()?n.negate():n,HEAP32[tempDoublePtr>>2]=o.low_,HEAP32[tempDoublePtr+4>>2]=o.high_},ensureTemps:function(){se.ensuredTemps||(se.ensuredTemps=!0,se.two32=new a,se.two32.fromString("4294967296",10),se.two64=new a,se.two64.fromString("18446744073709551616",10),se.temp1=new a,se.temp2=new a)},lh2bignum:function(e,t){var r=new a;r.fromString(t.toString(),10);var o=new a;r.multiplyTo(se.two32,o);var n=new a;n.fromString(e.toString(),10);var i=new a;return n.addTo(o,i),i},stringify:function(t,r,o){var n=new e.math.Long(t,r).toString();if(o&&"-"==n[0]){se.ensureTemps();var i=new a;i.fromString(n,10),n=new a,se.two64.addTo(i,n),n=n.toString(10)}return n},fromString:function(t,r,o,n,i){se.ensureTemps();var s=new a;s.fromString(t,r);var u=new a;u.fromString(o,10);var l=new a;if(l.fromString(n,10),i&&s.compareTo(a.ZERO)<0){var c=new a;s.addTo(se.two64,c),s=c}var d=!1;s.compareTo(u)<0?(s=u,d=!0):s.compareTo(l)>0&&(s=l,d=!0);var f=e.math.Long.fromString(s.toString());if(HEAP32[tempDoublePtr>>2]=f.low_,HEAP32[tempDoublePtr+4>>2]=f.high_,d)throw"range error"}};return se}(),initialStackTop;if(memoryInitializer)if(Module["memoryInitializerPrefixURL"]&&(memoryInitializer=Module["memoryInitializerPrefixURL"]+memoryInitializer),ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=Module["readBinary"](memoryInitializer);HEAPU8.set(data,STATIC_BASE)}else addRunDependency("memory initializer"),Browser.asyncLoad(memoryInitializer,(function(e){HEAPU8.set(e,STATIC_BASE),removeRunDependency("memory initializer")}),(function(e){throw"could not load memory initializer "+memoryInitializer}));function ExitStatus(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}ExitStatus.prototype=new Error,ExitStatus.prototype.constructor=ExitStatus;var preloadStartTime=null,calledMain=!1;function run(e){function t(){Module["calledRun"]||(Module["calledRun"]=!0,ABORT||(ensureInitRuntime(),preMain(),ENVIRONMENT_IS_WEB&&null!==preloadStartTime&&Module.printErr("pre-main prep time: "+(Date.now()-preloadStartTime)+" ms"),Module["_main"]&&shouldRunNow&&Module["callMain"](e),postRun()))}e=e||Module["arguments"],null===preloadStartTime&&(preloadStartTime=Date.now()),runDependencies>0?Module.printErr("run() called, but dependencies remain, so not running"):(preRun(),runDependencies>0||Module["calledRun"]||(Module["setStatus"]?(Module["setStatus"]("Running..."),setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1),t()}),1)):t()))}function exit(e){if(!Module["noExitRuntime"])throw ABORT=!0,EXITSTATUS=e,STACKTOP=initialStackTop,exitRuntime(),ENVIRONMENT_IS_NODE?(process["stdout"]["once"]("drain",(function(){process["exit"](e)})),console.log(" "),setTimeout((function(){process["exit"](e)}),500)):ENVIRONMENT_IS_SHELL&&"function"===typeof quit&&quit(e),new ExitStatus(e)}function abort(e){e&&(Module.print(e),Module.printErr(e)),ABORT=!0,EXITSTATUS=1;var t="\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";throw"abort() at "+stackTrace()+t}if(dependenciesFulfilled=function e(){!Module["calledRun"]&&shouldRunNow&&run(),Module["calledRun"]||(dependenciesFulfilled=e)},Module["callMain"]=Module.callMain=function(e){assert(0==runDependencies,"cannot call main when async dependencies remain! (listen on __ATMAIN__)"),assert(0==__ATPRERUN__.length,"cannot call main when preRun functions remain to be called"),e=e||[],ensureInitRuntime();var t=e.length+1;function r(){for(var e=0;e<3;e++)o.push(0)}var o=[allocate(intArrayFromString(Module["thisProgram"]),"i8",ALLOC_NORMAL)];r();for(var n=0;n<t-1;n+=1)o.push(allocate(intArrayFromString(e[n]),"i8",ALLOC_NORMAL)),r();o.push(0),o=allocate(o,"i32",ALLOC_NORMAL),initialStackTop=STACKTOP;try{var a=Module["_main"](t,o,0);exit(a)}catch(i){if(i instanceof ExitStatus)return;if("SimulateInfiniteLoop"==i)return void(Module["noExitRuntime"]=!0);throw i&&"object"===typeof i&&i.stack&&Module.printErr("exception thrown: "+[i,i.stack]),i}finally{calledMain=!0}},Module["run"]=Module.run=run,Module["exit"]=Module.exit=exit,Module["abort"]=Module.abort=abort,Module["preInit"]){"function"==typeof Module["preInit"]&&(Module["preInit"]=[Module["preInit"]]);while(Module["preInit"].length>0)Module["preInit"].pop()()}var shouldRunNow=!0;Module["noInitialRun"]&&(shouldRunNow=!1),run()}).call(this,__webpack_require__("eef6"),"/",__webpack_require__("fd40").Buffer)},10:function(e,t){},11:function(e,t){},1422:function(e,t,r){const o=r("5c5c").BigInteger;var n=function(){for(var e={},t="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",r=[],n=0;n<t.length;n++)r.push(t.charCodeAt(n));var a=[0,2,3,5,6,7,9,10,11],i=r.length,s=8,u=11,l=new o(2).pow(64);function c(e){if(e.length%2!==0)throw"Hex string has invalid length!";for(var t=new Uint8Array(e.length/2),r=0;r<e.length/2;++r)t[r]=parseInt(e.slice(2*r,2*r+2),16);return t}function d(e){for(var t=[],r=0;r<e.length;++r)t.push(("0"+e[r].toString(16)).slice(-2));return t.join("")}function f(e){for(var t=new Uint8Array(e.length),r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return t}function h(e){for(var t=[],r=0;r<e.length;r++)t.push(String.fromCharCode(e[r]));return t.join("")}function m(e){if(e.length<1||e.length>8)throw"Invalid input length";var t=o.ZERO,r=new o(2).pow(8),n=0;switch(9-e.length){case 1:t=t.add(e[n++]);case 2:t=t.multiply(r).add(e[n++]);case 3:t=t.multiply(r).add(e[n++]);case 4:t=t.multiply(r).add(e[n++]);case 5:t=t.multiply(r).add(e[n++]);case 6:t=t.multiply(r).add(e[n++]);case 7:t=t.multiply(r).add(e[n++]);case 8:t=t.multiply(r).add(e[n++]);break;default:throw"Impossible condition"}return t}function p(e,t){var r=new Uint8Array(t);if(t<1||t>8)throw"Invalid input length";for(var n=new o(2).pow(8),a=t-1;a>=0;a--)r[a]=e.remainder(n).toJSValue(),e=e.divide(n);return r}return e.encode_block=function(e,t,o){if(e.length<1||e.length>u)throw"Invalid block length: "+e.length;var n=m(e),s=a[e.length]-1;while(1===n.compare(0)){var l=n.divRem(i),c=l[1];n=l[0],t[o+s]=r[c.toJSValue()],s--}return t},e.encode=function(t){var o=c(t);if(0===o.length)return"";var n,i=Math.floor(o.length/s),l=o.length%s,d=i*u+a[l],f=new Uint8Array(d);for(n=0;n<d;++n)f[n]=r[0];for(n=0;n<i;n++)f=e.encode_block(o.subarray(n*s,n*s+s),f,n*u);return l>0&&(f=e.encode_block(o.subarray(i*s,i*s+l),f,i*u)),h(f)},e.decode_block=function(e,t,n){if(e.length<1||e.length>u)throw"Invalid block length: "+e.length;var c=a.indexOf(e.length);if(c<=0)throw"Invalid block size";for(var d=new o(0),f=new o(1),h=e.length-1;h>=0;h--){var m=r.indexOf(e[h]);if(m<0)throw"Invalid symbol";var g=f.multiply(m).add(d);if(1===g.compare(l))throw"Overflow";d=g,f=f.multiply(i)}if(c<s&&new o(2).pow(8*c).compare(d)<=0)throw"Overflow 2";return t.set(p(d,c),n),t},e.decode=function(t){if(t=f(t),0===t.length)return"";var r=Math.floor(t.length/u),o=t.length%u,n=a.indexOf(o);if(n<0)throw"Invalid encoded length";for(var i=r*s+n,l=new Uint8Array(i),c=0;c<r;c++)l=e.decode_block(t.subarray(c*u,c*u+u),l,c*s);return o>0&&(l=e.decode_block(t.subarray(r*u,r*u+o),l,r*s)),d(l)},e}();t.cnBase58=n},1507:function(e,t,r){(function(t){(function(r,o){"use strict";var n="undefined"!=typeof e;n&&(r=t,r.JS_SHA3_TEST&&(r.navigator={userAgent:"Chrome"}));for(var a="0123456789abcdef".split(""),i=[31,7936,2031616,520093696],s=[1,256,65536,16777216],u=[6,1536,393216,100663296],l=[0,8,16,24],c=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],d=[224,256,384,512],f=[128,256],h=["hex","buffer","array"],m=function(e,t,r){return function(o){return new M(e,t,e).update(o)[r]()}},p=function(e,t,r){return function(o,n){return new M(e,t,n).update(o)[r]()}},g=function(e,t){var r=m(e,t,"hex");r.create=function(){return new M(e,t,e)},r.update=function(e){return r.create().update(e)};for(var o=0;o<h.length;++o){var n=h[o];r[n]=m(e,t,n)}return r},_=function(e,t){var r=p(e,t,"hex");r.create=function(r){return new M(e,t,r)},r.update=function(e,t){return r.create(t).update(e)};for(var o=0;o<h.length;++o){var n=h[o];r[n]=p(e,t,n)}return r},v=[{name:"keccak",padding:s,bits:d,createMethod:g},{name:"sha3",padding:u,bits:d,createMethod:g},{name:"shake",padding:i,bits:f,createMethod:_}],b={},w=0;w<v.length;++w)for(var y=v[w],E=y.bits,S=(g=y.createMethod,0);S<E.length;++S){var A=y.createMethod(E[S],y.padding);b[y.name+"_"+E[S]]=A}function M(e,t,r){this.blocks=[],this.s=[],this.padding=t,this.outputBits=r,this.reset=!0,this.block=0,this.start=0,this.blockCount=1600-(e<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=r>>5,this.extraBytes=(31&r)>>3;for(var o=0;o<50;++o)this.s[o]=0}M.prototype.update=function(e){var t="string"!=typeof e;t&&e.constructor==r.ArrayBuffer&&(e=new Uint8Array(e));var o,n,a=e.length,i=this.blocks,s=this.byteCount,u=this.blockCount,c=0,d=this.s;while(c<a){if(this.reset)for(this.reset=!1,i[0]=this.block,o=1;o<u+1;++o)i[o]=0;if(t)for(o=this.start;c<a&&o<s;++c)i[o>>2]|=e[c]<<l[3&o++];else for(o=this.start;c<a&&o<s;++c)n=e.charCodeAt(c),n<128?i[o>>2]|=n<<l[3&o++]:n<2048?(i[o>>2]|=(192|n>>6)<<l[3&o++],i[o>>2]|=(128|63&n)<<l[3&o++]):n<55296||n>=57344?(i[o>>2]|=(224|n>>12)<<l[3&o++],i[o>>2]|=(128|n>>6&63)<<l[3&o++],i[o>>2]|=(128|63&n)<<l[3&o++]):(n=65536+((1023&n)<<10|1023&e.charCodeAt(++c)),i[o>>2]|=(240|n>>18)<<l[3&o++],i[o>>2]|=(128|n>>12&63)<<l[3&o++],i[o>>2]|=(128|n>>6&63)<<l[3&o++],i[o>>2]|=(128|63&n)<<l[3&o++]);if(this.lastByteIndex=o,o>=s){for(this.start=o-s,this.block=i[u],o=0;o<u;++o)d[o]^=i[o];k(d),this.reset=!0}else this.start=o}return this},M.prototype.finalize=function(){var e=this.blocks,t=this.lastByteIndex,r=this.blockCount,o=this.s;if(e[t>>2]|=this.padding[3&t],this.lastByteIndex==this.byteCount)for(e[0]=e[r],t=1;t<r+1;++t)e[t]=0;for(e[r-1]|=2147483648,t=0;t<r;++t)o[t]^=e[t];k(o)},M.prototype.toString=M.prototype.hex=function(){this.finalize();var e,t=this.blockCount,r=this.s,o=this.outputBlocks,n=this.extraBytes,i=0,s=0,u="";while(s<o){for(i=0;i<t&&s<o;++i,++s)e=r[i],u+=a[e>>4&15]+a[15&e]+a[e>>12&15]+a[e>>8&15]+a[e>>20&15]+a[e>>16&15]+a[e>>28&15]+a[e>>24&15];s%t==0&&k(r)}return n&&(e=r[i],n>0&&(u+=a[e>>4&15]+a[15&e]),n>1&&(u+=a[e>>12&15]+a[e>>8&15]),n>2&&(u+=a[e>>20&15]+a[e>>16&15])),u},M.prototype.buffer=function(){this.finalize();var e,t=this.blockCount,r=this.s,o=this.outputBlocks,n=this.extraBytes,a=0,i=0,s=this.outputBits>>3;e=n?new ArrayBuffer(o+1<<2):new ArrayBuffer(s);var u=new Uint32Array(e);while(i<o){for(a=0;a<t&&i<o;++a,++i)u[i]=r[a];i%t==0&&k(r)}return n&&(u[a]=r[a],e=e.slice(0,s)),e},M.prototype.digest=M.prototype.array=function(){this.finalize();var e,t,r=this.blockCount,o=this.s,n=this.outputBlocks,a=this.extraBytes,i=0,s=0,u=[];while(s<n){for(i=0;i<r&&s<n;++i,++s)e=s<<2,t=o[i],u[e]=255&t,u[e+1]=t>>8&255,u[e+2]=t>>16&255,u[e+3]=t>>24&255;s%r==0&&k(o)}return a&&(e=s<<2,t=o[i],a>0&&(u[e]=255&t),a>1&&(u[e+1]=t>>8&255),a>2&&(u[e+2]=t>>16&255)),u};var k=function(e){var t,r,o,n,a,i,s,u,l,d,f,h,m,p,g,_,v,b,w,y,E,S,A,M,k,F,O,R,T,N,P,D,x,L,I,C,z,B,j,U,H,q,V,Y,W,G,X,K,Z,$,J,Q,ee,te,re,oe,ne,ae,ie,se,ue,le,ce;for(o=0;o<48;o+=2)n=e[0]^e[10]^e[20]^e[30]^e[40],a=e[1]^e[11]^e[21]^e[31]^e[41],i=e[2]^e[12]^e[22]^e[32]^e[42],s=e[3]^e[13]^e[23]^e[33]^e[43],u=e[4]^e[14]^e[24]^e[34]^e[44],l=e[5]^e[15]^e[25]^e[35]^e[45],d=e[6]^e[16]^e[26]^e[36]^e[46],f=e[7]^e[17]^e[27]^e[37]^e[47],h=e[8]^e[18]^e[28]^e[38]^e[48],m=e[9]^e[19]^e[29]^e[39]^e[49],t=h^(i<<1|s>>>31),r=m^(s<<1|i>>>31),e[0]^=t,e[1]^=r,e[10]^=t,e[11]^=r,e[20]^=t,e[21]^=r,e[30]^=t,e[31]^=r,e[40]^=t,e[41]^=r,t=n^(u<<1|l>>>31),r=a^(l<<1|u>>>31),e[2]^=t,e[3]^=r,e[12]^=t,e[13]^=r,e[22]^=t,e[23]^=r,e[32]^=t,e[33]^=r,e[42]^=t,e[43]^=r,t=i^(d<<1|f>>>31),r=s^(f<<1|d>>>31),e[4]^=t,e[5]^=r,e[14]^=t,e[15]^=r,e[24]^=t,e[25]^=r,e[34]^=t,e[35]^=r,e[44]^=t,e[45]^=r,t=u^(h<<1|m>>>31),r=l^(m<<1|h>>>31),e[6]^=t,e[7]^=r,e[16]^=t,e[17]^=r,e[26]^=t,e[27]^=r,e[36]^=t,e[37]^=r,e[46]^=t,e[47]^=r,t=d^(n<<1|a>>>31),r=f^(a<<1|n>>>31),e[8]^=t,e[9]^=r,e[18]^=t,e[19]^=r,e[28]^=t,e[29]^=r,e[38]^=t,e[39]^=r,e[48]^=t,e[49]^=r,p=e[0],g=e[1],G=e[11]<<4|e[10]>>>28,X=e[10]<<4|e[11]>>>28,R=e[20]<<3|e[21]>>>29,T=e[21]<<3|e[20]>>>29,se=e[31]<<9|e[30]>>>23,ue=e[30]<<9|e[31]>>>23,q=e[40]<<18|e[41]>>>14,V=e[41]<<18|e[40]>>>14,L=e[2]<<1|e[3]>>>31,I=e[3]<<1|e[2]>>>31,_=e[13]<<12|e[12]>>>20,v=e[12]<<12|e[13]>>>20,K=e[22]<<10|e[23]>>>22,Z=e[23]<<10|e[22]>>>22,N=e[33]<<13|e[32]>>>19,P=e[32]<<13|e[33]>>>19,le=e[42]<<2|e[43]>>>30,ce=e[43]<<2|e[42]>>>30,te=e[5]<<30|e[4]>>>2,re=e[4]<<30|e[5]>>>2,C=e[14]<<6|e[15]>>>26,z=e[15]<<6|e[14]>>>26,b=e[25]<<11|e[24]>>>21,w=e[24]<<11|e[25]>>>21,$=e[34]<<15|e[35]>>>17,J=e[35]<<15|e[34]>>>17,D=e[45]<<29|e[44]>>>3,x=e[44]<<29|e[45]>>>3,M=e[6]<<28|e[7]>>>4,k=e[7]<<28|e[6]>>>4,oe=e[17]<<23|e[16]>>>9,ne=e[16]<<23|e[17]>>>9,B=e[26]<<25|e[27]>>>7,j=e[27]<<25|e[26]>>>7,y=e[36]<<21|e[37]>>>11,E=e[37]<<21|e[36]>>>11,Q=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,Y=e[8]<<27|e[9]>>>5,W=e[9]<<27|e[8]>>>5,F=e[18]<<20|e[19]>>>12,O=e[19]<<20|e[18]>>>12,ae=e[29]<<7|e[28]>>>25,ie=e[28]<<7|e[29]>>>25,U=e[38]<<8|e[39]>>>24,H=e[39]<<8|e[38]>>>24,S=e[48]<<14|e[49]>>>18,A=e[49]<<14|e[48]>>>18,e[0]=p^~_&b,e[1]=g^~v&w,e[10]=M^~F&R,e[11]=k^~O&T,e[20]=L^~C&B,e[21]=I^~z&j,e[30]=Y^~G&K,e[31]=W^~X&Z,e[40]=te^~oe&ae,e[41]=re^~ne&ie,e[2]=_^~b&y,e[3]=v^~w&E,e[12]=F^~R&N,e[13]=O^~T&P,e[22]=C^~B&U,e[23]=z^~j&H,e[32]=G^~K&$,e[33]=X^~Z&J,e[42]=oe^~ae&se,e[43]=ne^~ie&ue,e[4]=b^~y&S,e[5]=w^~E&A,e[14]=R^~N&D,e[15]=T^~P&x,e[24]=B^~U&q,e[25]=j^~H&V,e[34]=K^~$&Q,e[35]=Z^~J&ee,e[44]=ae^~se&le,e[45]=ie^~ue&ce,e[6]=y^~S&p,e[7]=E^~A&g,e[16]=N^~D&M,e[17]=P^~x&k,e[26]=U^~q&L,e[27]=H^~V&I,e[36]=$^~Q&Y,e[37]=J^~ee&W,e[46]=se^~le&te,e[47]=ue^~ce&re,e[8]=S^~p&_,e[9]=A^~g&v,e[18]=D^~M&F,e[19]=x^~k&O,e[28]=q^~L&C,e[29]=V^~I&z,e[38]=Q^~Y&G,e[39]=ee^~W&X,e[48]=le^~te&oe,e[49]=ce^~re&ne,e[0]^=c[o],e[1]^=c[o+1]};if(!r.JS_SHA3_TEST&&n)e.exports=b;else if(r)for(var F in b)r[F]=b[F]})(this)}).call(this,r("2409"))},2633:function(e,t,r){"use strict";r.r(t);var o=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("CreateWalletTemplate",{attrs:{coin:"xmr",create:e.createWalle}})},n=[],a=(r("6a61"),r("2e91")),i=r("cae8"),s=(r("e18c"),r("af86"),r("5618")),u=r.n(s),l=r("dc84"),c=r.n(l),d=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){var t,r,o,n,a,i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return t=c.a.NewlyCreatedWallet("english"),r=t.keys.public_addr,o=t.keys.view.sec,n=t.keys.spend.sec,a=t.mnemonicString,e.next=7,u.a.toDataURL(n);case 7:return i=e.sent,e.abrupt("return",{mnemonic:a,address:r,viewkey:o,key:n,img:i});case 9:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),f={name:"MoneroCreateWallet",components:{CreateWalletTemplate:i["a"]},methods:{createWalle:function(){return Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,d();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})))()}}},h=f,m=r("5d22"),p=Object(m["a"])(h,o,n,!1,null,null,null);t["default"]=p.exports},"3fb7":function(e,t,r){(function(e){var t;t="undefined"===typeof window||!0===window.IsElectronRendererProcess;var o,n=r("c934").crc32;1==t&&(o=r("7b04"));var a="english";function i(e,t){for(var r="",o=0;o<e.length;o++)r+=e[o].slice(0,t);var a=n.run(r),i=a%e.length;return i}function s(e,t){"use strict";t=t||a;for(var r=d[t],o=[],n=r.words.length,s=0;s<e.length;s+=8)e=e.slice(0,s)+u(e.slice(s,s+8))+e.slice(s+8);for(var l=0;l<e.length;l+=8){var c=parseInt(e.substr(l,8),16),f=c%n,h=(Math.floor(c/n)+f)%n,m=(Math.floor(Math.floor(c/n)/n)+h)%n;o=o.concat([r.words[f],r.words[h],r.words[m]])}return r.prefix_len>0&&o.push(o[i(o,r.prefix_len)]),o.join(" ")}function u(e){"use strict";if(8!==e.length)throw"Invalid input length: "+e.length;return e.slice(6,8)+e.slice(4,6)+e.slice(2,4)+e.slice(0,2)}function l(e,t){"use strict";t=t||a;var r=d[t],o="",n=r.words.length,s=e.toLowerCase().split(" "),l="";if(s.length<12)throw"You've entered too few words, please try again";if(0===r.prefix_len&&s.length%3!==0||r.prefix_len>0&&s.length%3===2)throw"You've entered too few words, please try again";if(r.prefix_len>0&&s.length%3===0)throw"You seem to be missing the last word in your private key, please try again";r.prefix_len>0&&(l=s.pop());for(var c=0;c<s.length;c+=3){var f,h,m;if(0===r.prefix_len?(f=r.words.indexOf(s[c]),h=r.words.indexOf(s[c+1]),m=r.words.indexOf(s[c+2])):(f=r.trunc_words.indexOf(s[c].slice(0,r.prefix_len)),h=r.trunc_words.indexOf(s[c+1].slice(0,r.prefix_len)),m=r.trunc_words.indexOf(s[c+2].slice(0,r.prefix_len))),-1===f||-1===h||-1===m)throw"invalid word in mnemonic";var p=f+n*((n-f+h)%n)+n*n*((n-h+m)%n);if(p%n!=f)throw"Something went wrong when decoding your private key, please try again";o+=u(("0000000"+p.toString(16)).slice(-8))}if(r.prefix_len>0){var g=i(s,r.prefix_len),_=s[g];if(_.slice(0,r.prefix_len)!==l.slice(0,r.prefix_len))throw"Your private key could not be verified, please try again"}return o}function c(e){"use strict";if(e%32!==0)throw"Something weird went wrong: Invalid number of bits - "+e;if(0==t){var r=new Uint32Array(e/32),n=0;function a(){for(var t=0;t<e/32;++t)if(0!==r[t])return!1;return!0}do{if("undefined"!==typeof window&&window.crypto&&window.crypto.getRandomValues)window.crypto.getRandomValues(r);else{if("undefined"===typeof window||"object"!==typeof window.msCrypto||"function"!==typeof window.msCrypto.getRandomValues)throw"Unfortunately MyMonero only runs on browsers that support the JavaScript Crypto API";window.msCrypto.getRandomValues(r)}++n}while(n<5&&a());if(a())throw"Something went wrong and we could not securely generate random data for your account";for(var i="",s=0;s<e/32;++s)i+=("0000000"+r[s].toString(16)).slice(-8);return i}{const t=o.randomBytes(e/8),r=t.toString("hex");return r}}e.mn_default_wordset=a,e.mn_get_checksum_index=i,e.mn_encode=s,e.mn_swap_endian_4byte=u,e.mn_decode=l,e.mn_random=c;var d={electrum:{prefix_len:0,words:["like","just","love","know","never","want","time","out","there","make","look","eye","down","only","think","heart","back","then","into","about","more","away","still","them","take","thing","even","through","long","always","world","too","friend","tell","try","hand","thought","over","here","other","need","smile","again","much","cry","been","night","ever","little","said","end","some","those","around","mind","people","girl","leave","dream","left","turn","myself","give","nothing","really","off","before","something","find","walk","wish","good","once","place","ask","stop","keep","watch","seem","everything","wait","got","yet","made","remember","start","alone","run","hope","maybe","believe","body","hate","after","close","talk","stand","own","each","hurt","help","home","god","soul","new","many","two","inside","should","true","first","fear","mean","better","play","another","gone","change","use","wonder","someone","hair","cold","open","best","any","behind","happen","water","dark","laugh","stay","forever","name","work","show","sky","break","came","deep","door","put","black","together","upon","happy","such","great","white","matter","fill","past","please","burn","cause","enough","touch","moment","soon","voice","scream","anything","stare","sound","red","everyone","hide","kiss","truth","death","beautiful","mine","blood","broken","very","pass","next","forget","tree","wrong","air","mother","understand","lip","hit","wall","memory","sleep","free","high","realize","school","might","skin","sweet","perfect","blue","kill","breath","dance","against","fly","between","grow","strong","under","listen","bring","sometimes","speak","pull","person","become","family","begin","ground","real","small","father","sure","feet","rest","young","finally","land","across","today","different","guy","line","fire","reason","reach","second","slowly","write","eat","smell","mouth","step","learn","three","floor","promise","breathe","darkness","push","earth","guess","save","song","above","along","both","color","house","almost","sorry","anymore","brother","okay","dear","game","fade","already","apart","warm","beauty","heard","notice","question","shine","began","piece","whole","shadow","secret","street","within","finger","point","morning","whisper","child","moon","green","story","glass","kid","silence","since","soft","yourself","empty","shall","angel","answer","baby","bright","dad","path","worry","hour","drop","follow","power","war","half","flow","heaven","act","chance","fact","least","tired","children","near","quite","afraid","rise","sea","taste","window","cover","nice","trust","lot","sad","cool","force","peace","return","blind","easy","ready","roll","rose","drive","held","music","beneath","hang","mom","paint","emotion","quiet","clear","cloud","few","pretty","bird","outside","paper","picture","front","rock","simple","anyone","meant","reality","road","sense","waste","bit","leaf","thank","happiness","meet","men","smoke","truly","decide","self","age","book","form","alive","carry","escape","damn","instead","able","ice","minute","throw","catch","leg","ring","course","goodbye","lead","poem","sick","corner","desire","known","problem","remind","shoulder","suppose","toward","wave","drink","jump","woman","pretend","sister","week","human","joy","crack","grey","pray","surprise","dry","knee","less","search","bleed","caught","clean","embrace","future","king","son","sorrow","chest","hug","remain","sat","worth","blow","daddy","final","parent","tight","also","create","lonely","safe","cross","dress","evil","silent","bone","fate","perhaps","anger","class","scar","snow","tiny","tonight","continue","control","dog","edge","mirror","month","suddenly","comfort","given","loud","quickly","gaze","plan","rush","stone","town","battle","ignore","spirit","stood","stupid","yours","brown","build","dust","hey","kept","pay","phone","twist","although","ball","beyond","hidden","nose","taken","fail","float","pure","somehow","wash","wrap","angry","cheek","creature","forgotten","heat","rip","single","space","special","weak","whatever","yell","anyway","blame","job","choose","country","curse","drift","echo","figure","grew","laughter","neck","suffer","worse","yeah","disappear","foot","forward","knife","mess","somewhere","stomach","storm","beg","idea","lift","offer","breeze","field","five","often","simply","stuck","win","allow","confuse","enjoy","except","flower","seek","strength","calm","grin","gun","heavy","hill","large","ocean","shoe","sigh","straight","summer","tongue","accept","crazy","everyday","exist","grass","mistake","sent","shut","surround","table","ache","brain","destroy","heal","nature","shout","sign","stain","choice","doubt","glance","glow","mountain","queen","stranger","throat","tomorrow","city","either","fish","flame","rather","shape","spin","spread","ash","distance","finish","image","imagine","important","nobody","shatter","warmth","became","feed","flesh","funny","lust","shirt","trouble","yellow","attention","bare","bite","money","protect","amaze","appear","born","choke","completely","daughter","fresh","friendship","gentle","probably","six","deserve","expect","grab","middle","nightmare","river","thousand","weight","worst","wound","barely","bottle","cream","regret","relationship","stick","test","crush","endless","fault","itself","rule","spill","art","circle","join","kick","mask","master","passion","quick","raise","smooth","unless","wander","actually","broke","chair","deal","favorite","gift","note","number","sweat","box","chill","clothes","lady","mark","park","poor","sadness","tie","animal","belong","brush","consume","dawn","forest","innocent","pen","pride","stream","thick","clay","complete","count","draw","faith","press","silver","struggle","surface","taught","teach","wet","bless","chase","climb","enter","letter","melt","metal","movie","stretch","swing","vision","wife","beside","crash","forgot","guide","haunt","joke","knock","plant","pour","prove","reveal","steal","stuff","trip","wood","wrist","bother","bottom","crawl","crowd","fix","forgive","frown","grace","loose","lucky","party","release","surely","survive","teacher","gently","grip","speed","suicide","travel","treat","vein","written","cage","chain","conversation","date","enemy","however","interest","million","page","pink","proud","sway","themselves","winter","church","cruel","cup","demon","experience","freedom","pair","pop","purpose","respect","shoot","softly","state","strange","bar","birth","curl","dirt","excuse","lord","lovely","monster","order","pack","pants","pool","scene","seven","shame","slide","ugly","among","blade","blonde","closet","creek","deny","drug","eternity","gain","grade","handle","key","linger","pale","prepare","swallow","swim","tremble","wheel","won","cast","cigarette","claim","college","direction","dirty","gather","ghost","hundred","loss","lung","orange","present","swear","swirl","twice","wild","bitter","blanket","doctor","everywhere","flash","grown","knowledge","numb","pressure","radio","repeat","ruin","spend","unknown","buy","clock","devil","early","false","fantasy","pound","precious","refuse","sheet","teeth","welcome","add","ahead","block","bury","caress","content","depth","despite","distant","marry","purple","threw","whenever","bomb","dull","easily","grasp","hospital","innocence","normal","receive","reply","rhyme","shade","someday","sword","toe","visit","asleep","bought","center","consider","flat","hero","history","ink","insane","muscle","mystery","pocket","reflection","shove","silently","smart","soldier","spot","stress","train","type","view","whether","bus","energy","explain","holy","hunger","inch","magic","mix","noise","nowhere","prayer","presence","shock","snap","spider","study","thunder","trail","admit","agree","bag","bang","bound","butterfly","cute","exactly","explode","familiar","fold","further","pierce","reflect","scent","selfish","sharp","sink","spring","stumble","universe","weep","women","wonderful","action","ancient","attempt","avoid","birthday","branch","chocolate","core","depress","drunk","especially","focus","fruit","honest","match","palm","perfectly","pillow","pity","poison","roar","shift","slightly","thump","truck","tune","twenty","unable","wipe","wrote","coat","constant","dinner","drove","egg","eternal","flight","flood","frame","freak","gasp","glad","hollow","motion","peer","plastic","root","screen","season","sting","strike","team","unlike","victim","volume","warn","weird","attack","await","awake","built","charm","crave","despair","fought","grant","grief","horse","limit","message","ripple","sanity","scatter","serve","split","string","trick","annoy","blur","boat","brave","clearly","cling","connect","fist","forth","imagination","iron","jock","judge","lesson","milk","misery","nail","naked","ourselves","poet","possible","princess","sail","size","snake","society","stroke","torture","toss","trace","wise","bloom","bullet","cell","check","cost","darling","during","footstep","fragile","hallway","hardly","horizon","invisible","journey","midnight","mud","nod","pause","relax","shiver","sudden","value","youth","abuse","admire","blink","breast","bruise","constantly","couple","creep","curve","difference","dumb","emptiness","gotta","honor","plain","planet","recall","rub","ship","slam","soar","somebody","tightly","weather","adore","approach","bond","bread","burst","candle","coffee","cousin","crime","desert","flutter","frozen","grand","heel","hello","language","level","movement","pleasure","powerful","random","rhythm","settle","silly","slap","sort","spoken","steel","threaten","tumble","upset","aside","awkward","bee","blank","board","button","card","carefully","complain","crap","deeply","discover","drag","dread","effort","entire","fairy","giant","gotten","greet","illusion","jeans","leap","liquid","march","mend","nervous","nine","replace","rope","spine","stole","terror","accident","apple","balance","boom","childhood","collect","demand","depression","eventually","faint","glare","goal","group","honey","kitchen","laid","limb","machine","mere","mold","murder","nerve","painful","poetry","prince","rabbit","shelter","shore","shower","soothe","stair","steady","sunlight","tangle","tease","treasure","uncle","begun","bliss","canvas","cheer","claw","clutch","commit","crimson","crystal","delight","doll","existence","express","fog","football","gay","goose","guard","hatred","illuminate","mass","math","mourn","rich","rough","skip","stir","student","style","support","thorn","tough","yard","yearn","yesterday","advice","appreciate","autumn","bank","beam","bowl","capture","carve","collapse","confusion","creation","dove","feather","girlfriend","glory","government","harsh","hop","inner","loser","moonlight","neighbor","neither","peach","pig","praise","screw","shield","shimmer","sneak","stab","subject","throughout","thrown","tower","twirl","wow","army","arrive","bathroom","bump","cease","cookie","couch","courage","dim","guilt","howl","hum","husband","insult","led","lunch","mock","mostly","natural","nearly","needle","nerd","peaceful","perfection","pile","price","remove","roam","sanctuary","serious","shiny","shook","sob","stolen","tap","vain","void","warrior","wrinkle","affection","apologize","blossom","bounce","bridge","cheap","crumble","decision","descend","desperately","dig","dot","flip","frighten","heartbeat","huge","lazy","lick","odd","opinion","process","puzzle","quietly","retreat","score","sentence","separate","situation","skill","soak","square","stray","taint","task","tide","underneath","veil","whistle","anywhere","bedroom","bid","bloody","burden","careful","compare","concern","curtain","decay","defeat","describe","double","dreamer","driver","dwell","evening","flare","flicker","grandma","guitar","harm","horrible","hungry","indeed","lace","melody","monkey","nation","object","obviously","rainbow","salt","scratch","shown","shy","stage","stun","third","tickle","useless","weakness","worship","worthless","afternoon","beard","boyfriend","bubble","busy","certain","chin","concrete","desk","diamond","doom","drawn","due","felicity","freeze","frost","garden","glide","harmony","hopefully","hunt","jealous","lightning","mama","mercy","peel","physical","position","pulse","punch","quit","rant","respond","salty","sane","satisfy","savior","sheep","slept","social","sport","tuck","utter","valley","wolf","aim","alas","alter","arrow","awaken","beaten","belief","brand","ceiling","cheese","clue","confidence","connection","daily","disguise","eager","erase","essence","everytime","expression","fan","flag","flirt","foul","fur","giggle","glorious","ignorance","law","lifeless","measure","mighty","muse","north","opposite","paradise","patience","patient","pencil","petal","plate","ponder","possibly","practice","slice","spell","stock","strife","strip","suffocate","suit","tender","tool","trade","velvet","verse","waist","witch","aunt","bench","bold","cap","certainly","click","companion","creator","dart","delicate","determine","dish","dragon","drama","drum","dude","everybody","feast","forehead","former","fright","fully","gas","hook","hurl","invite","juice","manage","moral","possess","raw","rebel","royal","scale","scary","several","slight","stubborn","swell","talent","tea","terrible","thread","torment","trickle","usually","vast","violence","weave","acid","agony","ashamed","awe","belly","blend","blush","character","cheat","common","company","coward","creak","danger","deadly","defense","define","depend","desperate","destination","dew","duck","dusty","embarrass","engine","example","explore","foe","freely","frustrate","generation","glove","guilty","health","hurry","idiot","impossible","inhale","jaw","kingdom","mention","mist","moan","mumble","mutter","observe","ode","pathetic","pattern","pie","prefer","puff","rape","rare","revenge","rude","scrape","spiral","squeeze","strain","sunset","suspend","sympathy","thigh","throne","total","unseen","weapon","weary"]},english:{prefix_len:3,words:["abbey","abducts","ability","ablaze","abnormal","abort","abrasive","absorb","abyss","academy","aces","aching","acidic","acoustic","acquire","across","actress","acumen","adapt","addicted","adept","adhesive","adjust","adopt","adrenalin","adult","adventure","aerial","afar","affair","afield","afloat","afoot","afraid","after","against","agenda","aggravate","agile","aglow","agnostic","agony","agreed","ahead","aided","ailments","aimless","airport","aisle","ajar","akin","alarms","album","alchemy","alerts","algebra","alkaline","alley","almost","aloof","alpine","already","also","altitude","alumni","always","amaze","ambush","amended","amidst","ammo","amnesty","among","amply","amused","anchor","android","anecdote","angled","ankle","annoyed","answers","antics","anvil","anxiety","anybody","apart","apex","aphid","aplomb","apology","apply","apricot","aptitude","aquarium","arbitrary","archer","ardent","arena","argue","arises","army","around","arrow","arsenic","artistic","ascend","ashtray","aside","asked","asleep","aspire","assorted","asylum","athlete","atlas","atom","atrium","attire","auburn","auctions","audio","august","aunt","austere","autumn","avatar","avidly","avoid","awakened","awesome","awful","awkward","awning","awoken","axes","axis","axle","aztec","azure","baby","bacon","badge","baffles","bagpipe","bailed","bakery","balding","bamboo","banjo","baptism","basin","batch","bawled","bays","because","beer","befit","begun","behind","being","below","bemused","benches","berries","bested","betting","bevel","beware","beyond","bias","bicycle","bids","bifocals","biggest","bikini","bimonthly","binocular","biology","biplane","birth","biscuit","bite","biweekly","blender","blip","bluntly","boat","bobsled","bodies","bogeys","boil","boldly","bomb","border","boss","both","bounced","bovine","bowling","boxes","boyfriend","broken","brunt","bubble","buckets","budget","buffet","bugs","building","bulb","bumper","bunch","business","butter","buying","buzzer","bygones","byline","bypass","cabin","cactus","cadets","cafe","cage","cajun","cake","calamity","camp","candy","casket","catch","cause","cavernous","cease","cedar","ceiling","cell","cement","cent","certain","chlorine","chrome","cider","cigar","cinema","circle","cistern","citadel","civilian","claim","click","clue","coal","cobra","cocoa","code","coexist","coffee","cogs","cohesive","coils","colony","comb","cool","copy","corrode","costume","cottage","cousin","cowl","criminal","cube","cucumber","cuddled","cuffs","cuisine","cunning","cupcake","custom","cycling","cylinder","cynical","dabbing","dads","daft","dagger","daily","damp","dangerous","dapper","darted","dash","dating","dauntless","dawn","daytime","dazed","debut","decay","dedicated","deepest","deftly","degrees","dehydrate","deity","dejected","delayed","demonstrate","dented","deodorant","depth","desk","devoid","dewdrop","dexterity","dialect","dice","diet","different","digit","dilute","dime","dinner","diode","diplomat","directed","distance","ditch","divers","dizzy","doctor","dodge","does","dogs","doing","dolphin","domestic","donuts","doorway","dormant","dosage","dotted","double","dove","down","dozen","dreams","drinks","drowning","drunk","drying","dual","dubbed","duckling","dude","duets","duke","dullness","dummy","dunes","duplex","duration","dusted","duties","dwarf","dwelt","dwindling","dying","dynamite","dyslexic","each","eagle","earth","easy","eating","eavesdrop","eccentric","echo","eclipse","economics","ecstatic","eden","edgy","edited","educated","eels","efficient","eggs","egotistic","eight","either","eject","elapse","elbow","eldest","eleven","elite","elope","else","eluded","emails","ember","emerge","emit","emotion","empty","emulate","energy","enforce","enhanced","enigma","enjoy","enlist","enmity","enough","enraged","ensign","entrance","envy","epoxy","equip","erase","erected","erosion","error","eskimos","espionage","essential","estate","etched","eternal","ethics","etiquette","evaluate","evenings","evicted","evolved","examine","excess","exhale","exit","exotic","exquisite","extra","exult","fabrics","factual","fading","fainted","faked","fall","family","fancy","farming","fatal","faulty","fawns","faxed","fazed","feast","february","federal","feel","feline","females","fences","ferry","festival","fetches","fever","fewest","fiat","fibula","fictional","fidget","fierce","fifteen","fight","films","firm","fishing","fitting","five","fixate","fizzle","fleet","flippant","flying","foamy","focus","foes","foggy","foiled","folding","fonts","foolish","fossil","fountain","fowls","foxes","foyer","framed","friendly","frown","fruit","frying","fudge","fuel","fugitive","fully","fuming","fungal","furnished","fuselage","future","fuzzy","gables","gadget","gags","gained","galaxy","gambit","gang","gasp","gather","gauze","gave","gawk","gaze","gearbox","gecko","geek","gels","gemstone","general","geometry","germs","gesture","getting","geyser","ghetto","ghost","giant","giddy","gifts","gigantic","gills","gimmick","ginger","girth","giving","glass","gleeful","glide","gnaw","gnome","goat","goblet","godfather","goes","goggles","going","goldfish","gone","goodbye","gopher","gorilla","gossip","gotten","gourmet","governing","gown","greater","grunt","guarded","guest","guide","gulp","gumball","guru","gusts","gutter","guys","gymnast","gypsy","gyrate","habitat","hacksaw","haggled","hairy","hamburger","happens","hashing","hatchet","haunted","having","hawk","haystack","hazard","hectare","hedgehog","heels","hefty","height","hemlock","hence","heron","hesitate","hexagon","hickory","hiding","highway","hijack","hiker","hills","himself","hinder","hippo","hire","history","hitched","hive","hoax","hobby","hockey","hoisting","hold","honked","hookup","hope","hornet","hospital","hotel","hounded","hover","howls","hubcaps","huddle","huge","hull","humid","hunter","hurried","husband","huts","hybrid","hydrogen","hyper","iceberg","icing","icon","identity","idiom","idled","idols","igloo","ignore","iguana","illness","imagine","imbalance","imitate","impel","inactive","inbound","incur","industrial","inexact","inflamed","ingested","initiate","injury","inkling","inline","inmate","innocent","inorganic","input","inquest","inroads","insult","intended","inundate","invoke","inwardly","ionic","irate","iris","irony","irritate","island","isolated","issued","italics","itches","items","itinerary","itself","ivory","jabbed","jackets","jaded","jagged","jailed","jamming","january","jargon","jaunt","javelin","jaws","jazz","jeans","jeers","jellyfish","jeopardy","jerseys","jester","jetting","jewels","jigsaw","jingle","jittery","jive","jobs","jockey","jogger","joining","joking","jolted","jostle","journal","joyous","jubilee","judge","juggled","juicy","jukebox","july","jump","junk","jury","justice","juvenile","kangaroo","karate","keep","kennel","kept","kernels","kettle","keyboard","kickoff","kidneys","king","kiosk","kisses","kitchens","kiwi","knapsack","knee","knife","knowledge","knuckle","koala","laboratory","ladder","lagoon","lair","lakes","lamb","language","laptop","large","last","later","launching","lava","lawsuit","layout","lazy","lectures","ledge","leech","left","legion","leisure","lemon","lending","leopard","lesson","lettuce","lexicon","liar","library","licks","lids","lied","lifestyle","light","likewise","lilac","limits","linen","lion","lipstick","liquid","listen","lively","loaded","lobster","locker","lodge","lofty","logic","loincloth","long","looking","lopped","lordship","losing","lottery","loudly","love","lower","loyal","lucky","luggage","lukewarm","lullaby","lumber","lunar","lurk","lush","luxury","lymph","lynx","lyrics","macro","madness","magically","mailed","major","makeup","malady","mammal","maps","masterful","match","maul","maverick","maximum","mayor","maze","meant","mechanic","medicate","meeting","megabyte","melting","memoir","menu","merger","mesh","metro","mews","mice","midst","mighty","mime","mirror","misery","mittens","mixture","moat","mobile","mocked","mohawk","moisture","molten","moment","money","moon","mops","morsel","mostly","motherly","mouth","movement","mowing","much","muddy","muffin","mugged","mullet","mumble","mundane","muppet","mural","musical","muzzle","myriad","mystery","myth","nabbing","nagged","nail","names","nanny","napkin","narrate","nasty","natural","nautical","navy","nearby","necklace","needed","negative","neither","neon","nephew","nerves","nestle","network","neutral","never","newt","nexus","nibs","niche","niece","nifty","nightly","nimbly","nineteen","nirvana","nitrogen","nobody","nocturnal","nodes","noises","nomad","noodles","northern","nostril","noted","nouns","novelty","nowhere","nozzle","nuance","nucleus","nudged","nugget","nuisance","null","number","nuns","nurse","nutshell","nylon","oaks","oars","oasis","oatmeal","obedient","object","obliged","obnoxious","observant","obtains","obvious","occur","ocean","october","odds","odometer","offend","often","oilfield","ointment","okay","older","olive","olympics","omega","omission","omnibus","onboard","oncoming","oneself","ongoing","onion","online","onslaught","onto","onward","oozed","opacity","opened","opposite","optical","opus","orange","orbit","orchid","orders","organs","origin","ornament","orphans","oscar","ostrich","otherwise","otter","ouch","ought","ounce","ourselves","oust","outbreak","oval","oven","owed","owls","owner","oxidant","oxygen","oyster","ozone","pact","paddles","pager","pairing","palace","pamphlet","pancakes","paper","paradise","pastry","patio","pause","pavements","pawnshop","payment","peaches","pebbles","peculiar","pedantic","peeled","pegs","pelican","pencil","people","pepper","perfect","pests","petals","phase","pheasants","phone","phrases","physics","piano","picked","pierce","pigment","piloted","pimple","pinched","pioneer","pipeline","pirate","pistons","pitched","pivot","pixels","pizza","playful","pledge","pliers","plotting","plus","plywood","poaching","pockets","podcast","poetry","point","poker","polar","ponies","pool","popular","portents","possible","potato","pouch","poverty","powder","pram","present","pride","problems","pruned","prying","psychic","public","puck","puddle","puffin","pulp","pumpkins","punch","puppy","purged","push","putty","puzzled","pylons","pyramid","python","queen","quick","quote","rabbits","racetrack","radar","rafts","rage","railway","raking","rally","ramped","randomly","rapid","rarest","rash","rated","ravine","rays","razor","react","rebel","recipe","reduce","reef","refer","regular","reheat","reinvest","rejoices","rekindle","relic","remedy","renting","reorder","repent","request","reruns","rest","return","reunion","revamp","rewind","rhino","rhythm","ribbon","richly","ridges","rift","rigid","rims","ringing","riots","ripped","rising","ritual","river","roared","robot","rockets","rodent","rogue","roles","romance","roomy","roped","roster","rotate","rounded","rover","rowboat","royal","ruby","rudely","ruffled","rugged","ruined","ruling","rumble","runway","rural","rustled","ruthless","sabotage","sack","sadness","safety","saga","sailor","sake","salads","sample","sanity","sapling","sarcasm","sash","satin","saucepan","saved","sawmill","saxophone","sayings","scamper","scenic","school","science","scoop","scrub","scuba","seasons","second","sedan","seeded","segments","seismic","selfish","semifinal","sensible","september","sequence","serving","session","setup","seventh","sewage","shackles","shelter","shipped","shocking","shrugged","shuffled","shyness","siblings","sickness","sidekick","sieve","sifting","sighting","silk","simplest","sincerely","sipped","siren","situated","sixteen","sizes","skater","skew","skirting","skulls","skydive","slackens","sleepless","slid","slower","slug","smash","smelting","smidgen","smog","smuggled","snake","sneeze","sniff","snout","snug","soapy","sober","soccer","soda","software","soggy","soil","solved","somewhere","sonic","soothe","soprano","sorry","southern","sovereign","sowed","soya","space","speedy","sphere","spiders","splendid","spout","sprig","spud","spying","square","stacking","stellar","stick","stockpile","strained","stunning","stylishly","subtly","succeed","suddenly","suede","suffice","sugar","suitcase","sulking","summon","sunken","superior","surfer","sushi","suture","swagger","swept","swiftly","sword","swung","syllabus","symptoms","syndrome","syringe","system","taboo","tacit","tadpoles","tagged","tail","taken","talent","tamper","tanks","tapestry","tarnished","tasked","tattoo","taunts","tavern","tawny","taxi","teardrop","technical","tedious","teeming","tell","template","tender","tepid","tequila","terminal","testing","tether","textbook","thaw","theatrics","thirsty","thorn","threaten","thumbs","thwart","ticket","tidy","tiers","tiger","tilt","timber","tinted","tipsy","tirade","tissue","titans","toaster","tobacco","today","toenail","toffee","together","toilet","token","tolerant","tomorrow","tonic","toolbox","topic","torch","tossed","total","touchy","towel","toxic","toyed","trash","trendy","tribal","trolling","truth","trying","tsunami","tubes","tucks","tudor","tuesday","tufts","tugs","tuition","tulips","tumbling","tunnel","turnip","tusks","tutor","tuxedo","twang","tweezers","twice","twofold","tycoon","typist","tyrant","ugly","ulcers","ultimate","umbrella","umpire","unafraid","unbending","uncle","under","uneven","unfit","ungainly","unhappy","union","unjustly","unknown","unlikely","unmask","unnoticed","unopened","unplugs","unquoted","unrest","unsafe","until","unusual","unveil","unwind","unzip","upbeat","upcoming","update","upgrade","uphill","upkeep","upload","upon","upper","upright","upstairs","uptight","upwards","urban","urchins","urgent","usage","useful","usher","using","usual","utensils","utility","utmost","utopia","uttered","vacation","vague","vain","value","vampire","vane","vapidly","vary","vastness","vats","vaults","vector","veered","vegan","vehicle","vein","velvet","venomous","verification","vessel","veteran","vexed","vials","vibrate","victim","video","viewpoint","vigilant","viking","village","vinegar","violin","vipers","virtual","visited","vitals","vivid","vixen","vocal","vogue","voice","volcano","vortex","voted","voucher","vowels","voyage","vulture","wade","waffle","wagtail","waist","waking","wallets","wanted","warped","washing","water","waveform","waxing","wayside","weavers","website","wedge","weekday","weird","welders","went","wept","were","western","wetsuit","whale","when","whipped","whole","wickets","width","wield","wife","wiggle","wildly","winter","wipeout","wiring","wise","withdrawn","wives","wizard","wobbly","woes","woken","wolf","womanly","wonders","woozy","worry","wounded","woven","wrap","wrist","wrong","yacht","yahoo","yanks","yard","yawning","yearbook","yellow","yesterday","yeti","yields","yodel","yoga","younger","yoyo","zapped","zeal","zebra","zero","zesty","zigzags","zinger","zippers","zodiac","zombie","zones","zoom"]},spanish:{prefix_len:4,words:["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito"]},portuguese:{prefix_len:3,words:["abaular","abdominal","abeto","abissinio","abjeto","ablucao","abnegar","abotoar","abrutalhar","absurdo","abutre","acautelar","accessorios","acetona","achocolatado","acirrar","acne","acovardar","acrostico","actinomicete","acustico","adaptavel","adeus","adivinho","adjunto","admoestar","adnominal","adotivo","adquirir","adriatico","adsorcao","adutora","advogar","aerossol","afazeres","afetuoso","afixo","afluir","afortunar","afrouxar","aftosa","afunilar","agentes","agito","aglutinar","aiatola","aimore","aino","aipo","airoso","ajeitar","ajoelhar","ajudante","ajuste","alazao","albumina","alcunha","alegria","alexandre","alforriar","alguns","alhures","alivio","almoxarife","alotropico","alpiste","alquimista","alsaciano","altura","aluviao","alvura","amazonico","ambulatorio","ametodico","amizades","amniotico","amovivel","amurada","anatomico","ancorar","anexo","anfora","aniversario","anjo","anotar","ansioso","anturio","anuviar","anverso","anzol","aonde","apaziguar","apito","aplicavel","apoteotico","aprimorar","aprumo","apto","apuros","aquoso","arauto","arbusto","arduo","aresta","arfar","arguto","aritmetico","arlequim","armisticio","aromatizar","arpoar","arquivo","arrumar","arsenio","arturiano","aruaque","arvores","asbesto","ascorbico","aspirina","asqueroso","assustar","astuto","atazanar","ativo","atletismo","atmosferico","atormentar","atroz","aturdir","audivel","auferir","augusto","aula","aumento","aurora","autuar","avatar","avexar","avizinhar","avolumar","avulso","axiomatico","azerbaijano","azimute","azoto","azulejo","bacteriologista","badulaque","baforada","baixote","bajular","balzaquiana","bambuzal","banzo","baoba","baqueta","barulho","bastonete","batuta","bauxita","bavaro","bazuca","bcrepuscular","beato","beduino","begonia","behaviorista","beisebol","belzebu","bemol","benzido","beocio","bequer","berro","besuntar","betume","bexiga","bezerro","biatlon","biboca","bicuspide","bidirecional","bienio","bifurcar","bigorna","bijuteria","bimotor","binormal","bioxido","bipolarizacao","biquini","birutice","bisturi","bituca","biunivoco","bivalve","bizarro","blasfemo","blenorreia","blindar","bloqueio","blusao","boazuda","bofete","bojudo","bolso","bombordo","bonzo","botina","boquiaberto","bostoniano","botulismo","bourbon","bovino","boximane","bravura","brevidade","britar","broxar","bruno","bruxuleio","bubonico","bucolico","buda","budista","bueiro","buffer","bugre","bujao","bumerangue","burundines","busto","butique","buzios","caatinga","cabuqui","cacunda","cafuzo","cajueiro","camurca","canudo","caquizeiro","carvoeiro","casulo","catuaba","cauterizar","cebolinha","cedula","ceifeiro","celulose","cerzir","cesto","cetro","ceus","cevar","chavena","cheroqui","chita","chovido","chuvoso","ciatico","cibernetico","cicuta","cidreira","cientistas","cifrar","cigarro","cilio","cimo","cinzento","cioso","cipriota","cirurgico","cisto","citrico","ciumento","civismo","clavicula","clero","clitoris","cluster","coaxial","cobrir","cocota","codorniz","coexistir","cogumelo","coito","colusao","compaixao","comutativo","contentamento","convulsivo","coordenativa","coquetel","correto","corvo","costureiro","cotovia","covil","cozinheiro","cretino","cristo","crivo","crotalo","cruzes","cubo","cucuia","cueiro","cuidar","cujo","cultural","cunilingua","cupula","curvo","custoso","cutucar","czarismo","dablio","dacota","dados","daguerreotipo","daiquiri","daltonismo","damista","dantesco","daquilo","darwinista","dasein","dativo","deao","debutantes","decurso","deduzir","defunto","degustar","dejeto","deltoide","demover","denunciar","deputado","deque","dervixe","desvirtuar","deturpar","deuteronomio","devoto","dextrose","dezoito","diatribe","dicotomico","didatico","dietista","difuso","digressao","diluvio","diminuto","dinheiro","dinossauro","dioxido","diplomatico","dique","dirimivel","disturbio","diurno","divulgar","dizivel","doar","dobro","docura","dodoi","doer","dogue","doloso","domo","donzela","doping","dorsal","dossie","dote","doutro","doze","dravidico","dreno","driver","dropes","druso","dubnio","ducto","dueto","dulija","dundum","duodeno","duquesa","durou","duvidoso","duzia","ebano","ebrio","eburneo","echarpe","eclusa","ecossistema","ectoplasma","ecumenismo","eczema","eden","editorial","edredom","edulcorar","efetuar","efigie","efluvio","egiptologo","egresso","egua","einsteiniano","eira","eivar","eixos","ejetar","elastomero","eldorado","elixir","elmo","eloquente","elucidativo","emaranhar","embutir","emerito","emfa","emitir","emotivo","empuxo","emulsao","enamorar","encurvar","enduro","enevoar","enfurnar","enguico","enho","enigmista","enlutar","enormidade","enpreendimento","enquanto","enriquecer","enrugar","entusiastico","enunciar","envolvimento","enxuto","enzimatico","eolico","epiteto","epoxi","epura","equivoco","erario","erbio","ereto","erguido","erisipela","ermo","erotizar","erros","erupcao","ervilha","esburacar","escutar","esfuziante","esguio","esloveno","esmurrar","esoterismo","esperanca","espirito","espurio","essencialmente","esturricar","esvoacar","etario","eterno","etiquetar","etnologo","etos","etrusco","euclidiano","euforico","eugenico","eunuco","europio","eustaquio","eutanasia","evasivo","eventualidade","evitavel","evoluir","exaustor","excursionista","exercito","exfoliado","exito","exotico","expurgo","exsudar","extrusora","exumar","fabuloso","facultativo","fado","fagulha","faixas","fajuto","faltoso","famoso","fanzine","fapesp","faquir","fartura","fastio","faturista","fausto","favorito","faxineira","fazer","fealdade","febril","fecundo","fedorento","feerico","feixe","felicidade","felipe","feltro","femur","fenotipo","fervura","festivo","feto","feudo","fevereiro","fezinha","fiasco","fibra","ficticio","fiduciario","fiesp","fifa","figurino","fijiano","filtro","finura","fiorde","fiquei","firula","fissurar","fitoteca","fivela","fixo","flavio","flexor","flibusteiro","flotilha","fluxograma","fobos","foco","fofura","foguista","foie","foliculo","fominha","fonte","forum","fosso","fotossintese","foxtrote","fraudulento","frevo","frivolo","frouxo","frutose","fuba","fucsia","fugitivo","fuinha","fujao","fulustreco","fumo","funileiro","furunculo","fustigar","futurologo","fuxico","fuzue","gabriel","gado","gaelico","gafieira","gaguejo","gaivota","gajo","galvanoplastico","gamo","ganso","garrucha","gastronomo","gatuno","gaussiano","gaviao","gaxeta","gazeteiro","gear","geiser","geminiano","generoso","genuino","geossinclinal","gerundio","gestual","getulista","gibi","gigolo","gilete","ginseng","giroscopio","glaucio","glacial","gleba","glifo","glote","glutonia","gnostico","goela","gogo","goitaca","golpista","gomo","gonzo","gorro","gostou","goticula","gourmet","governo","gozo","graxo","grevista","grito","grotesco","gruta","guaxinim","gude","gueto","guizo","guloso","gume","guru","gustativo","gustavo","gutural","habitue","haitiano","halterofilista","hamburguer","hanseniase","happening","harpista","hastear","haveres","hebreu","hectometro","hedonista","hegira","helena","helminto","hemorroidas","henrique","heptassilabo","hertziano","hesitar","heterossexual","heuristico","hexagono","hiato","hibrido","hidrostatico","hieroglifo","hifenizar","higienizar","hilario","himen","hino","hippie","hirsuto","historiografia","hitlerista","hodometro","hoje","holograma","homus","honroso","hoquei","horto","hostilizar","hotentote","huguenote","humilde","huno","hurra","hutu","iaia","ialorixa","iambico","iansa","iaque","iara","iatista","iberico","ibis","icar","iceberg","icosagono","idade","ideologo","idiotice","idoso","iemenita","iene","igarape","iglu","ignorar","igreja","iguaria","iidiche","ilativo","iletrado","ilharga","ilimitado","ilogismo","ilustrissimo","imaturo","imbuzeiro","imerso","imitavel","imovel","imputar","imutavel","inaveriguavel","incutir","induzir","inextricavel","infusao","ingua","inhame","iniquo","injusto","inning","inoxidavel","inquisitorial","insustentavel","intumescimento","inutilizavel","invulneravel","inzoneiro","iodo","iogurte","ioio","ionosfera","ioruba","iota","ipsilon","irascivel","iris","irlandes","irmaos","iroques","irrupcao","isca","isento","islandes","isotopo","isqueiro","israelita","isso","isto","iterbio","itinerario","itrio","iuane","iugoslavo","jabuticabeira","jacutinga","jade","jagunco","jainista","jaleco","jambo","jantarada","japones","jaqueta","jarro","jasmim","jato","jaula","javel","jazz","jegue","jeitoso","jejum","jenipapo","jeova","jequitiba","jersei","jesus","jetom","jiboia","jihad","jilo","jingle","jipe","jocoso","joelho","joguete","joio","jojoba","jorro","jota","joule","joviano","jubiloso","judoca","jugular","juizo","jujuba","juliano","jumento","junto","jururu","justo","juta","juventude","labutar","laguna","laico","lajota","lanterninha","lapso","laquear","lastro","lauto","lavrar","laxativo","lazer","leasing","lebre","lecionar","ledo","leguminoso","leitura","lele","lemure","lento","leonardo","leopardo","lepton","leque","leste","letreiro","leucocito","levitico","lexicologo","lhama","lhufas","liame","licoroso","lidocaina","liliputiano","limusine","linotipo","lipoproteina","liquidos","lirismo","lisura","liturgico","livros","lixo","lobulo","locutor","lodo","logro","lojista","lombriga","lontra","loop","loquaz","lorota","losango","lotus","louvor","luar","lubrificavel","lucros","lugubre","luis","luminoso","luneta","lustroso","luto","luvas","luxuriante","luzeiro","maduro","maestro","mafioso","magro","maiuscula","majoritario","malvisto","mamute","manutencao","mapoteca","maquinista","marzipa","masturbar","matuto","mausoleu","mavioso","maxixe","mazurca","meandro","mecha","medusa","mefistofelico","megera","meirinho","melro","memorizar","menu","mequetrefe","mertiolate","mestria","metroviario","mexilhao","mezanino","miau","microssegundo","midia","migratorio","mimosa","minuto","miosotis","mirtilo","misturar","mitzvah","miudos","mixuruca","mnemonico","moagem","mobilizar","modulo","moer","mofo","mogno","moita","molusco","monumento","moqueca","morubixaba","mostruario","motriz","mouse","movivel","mozarela","muarra","muculmano","mudo","mugir","muitos","mumunha","munir","muon","muquira","murros","musselina","nacoes","nado","naftalina","nago","naipe","naja","nalgum","namoro","nanquim","napolitano","naquilo","nascimento","nautilo","navios","nazista","nebuloso","nectarina","nefrologo","negus","nelore","nenufar","nepotismo","nervura","neste","netuno","neutron","nevoeiro","newtoniano","nexo","nhenhenhem","nhoque","nigeriano","niilista","ninho","niobio","niponico","niquelar","nirvana","nisto","nitroglicerina","nivoso","nobreza","nocivo","noel","nogueira","noivo","nojo","nominativo","nonuplo","noruegues","nostalgico","noturno","nouveau","nuanca","nublar","nucleotideo","nudista","nulo","numismatico","nunquinha","nupcias","nutritivo","nuvens","oasis","obcecar","obeso","obituario","objetos","oblongo","obnoxio","obrigatorio","obstruir","obtuso","obus","obvio","ocaso","occipital","oceanografo","ocioso","oclusivo","ocorrer","ocre","octogono","odalisca","odisseia","odorifico","oersted","oeste","ofertar","ofidio","oftalmologo","ogiva","ogum","oigale","oitavo","oitocentos","ojeriza","olaria","oleoso","olfato","olhos","oliveira","olmo","olor","olvidavel","ombudsman","omeleteira","omitir","omoplata","onanismo","ondular","oneroso","onomatopeico","ontologico","onus","onze","opalescente","opcional","operistico","opio","oposto","oprobrio","optometrista","opusculo","oratorio","orbital","orcar","orfao","orixa","orla","ornitologo","orquidea","ortorrombico","orvalho","osculo","osmotico","ossudo","ostrogodo","otario","otite","ouro","ousar","outubro","ouvir","ovario","overnight","oviparo","ovni","ovoviviparo","ovulo","oxala","oxente","oxiuro","oxossi","ozonizar","paciente","pactuar","padronizar","paete","pagodeiro","paixao","pajem","paludismo","pampas","panturrilha","papudo","paquistanes","pastoso","patua","paulo","pauzinhos","pavoroso","paxa","pazes","peao","pecuniario","pedunculo","pegaso","peixinho","pejorativo","pelvis","penuria","pequno","petunia","pezada","piauiense","pictorico","pierro","pigmeu","pijama","pilulas","pimpolho","pintura","piorar","pipocar","piqueteiro","pirulito","pistoleiro","pituitaria","pivotar","pixote","pizzaria","plistoceno","plotar","pluviometrico","pneumonico","poco","podridao","poetisa","pogrom","pois","polvorosa","pomposo","ponderado","pontudo","populoso","poquer","porvir","posudo","potro","pouso","povoar","prazo","prezar","privilegios","proximo","prussiano","pseudopode","psoriase","pterossauros","ptialina","ptolemaico","pudor","pueril","pufe","pugilista","puir","pujante","pulverizar","pumba","punk","purulento","pustula","putsch","puxe","quatrocentos","quetzal","quixotesco","quotizavel","rabujice","racista","radonio","rafia","ragu","rajado","ralo","rampeiro","ranzinza","raptor","raquitismo","raro","rasurar","ratoeira","ravioli","razoavel","reavivar","rebuscar","recusavel","reduzivel","reexposicao","refutavel","regurgitar","reivindicavel","rejuvenescimento","relva","remuneravel","renunciar","reorientar","repuxo","requisito","resumo","returno","reutilizar","revolvido","rezonear","riacho","ribossomo","ricota","ridiculo","rifle","rigoroso","rijo","rimel","rins","rios","riqueza","riquixa","rissole","ritualistico","rivalizar","rixa","robusto","rococo","rodoviario","roer","rogo","rojao","rolo","rompimento","ronronar","roqueiro","rorqual","rosto","rotundo","rouxinol","roxo","royal","ruas","rucula","rudimentos","ruela","rufo","rugoso","ruivo","rule","rumoroso","runico","ruptura","rural","rustico","rutilar","saariano","sabujo","sacudir","sadomasoquista","safra","sagui","sais","samurai","santuario","sapo","saquear","sartriano","saturno","saude","sauva","saveiro","saxofonista","sazonal","scherzo","script","seara","seborreia","secura","seduzir","sefardim","seguro","seja","selvas","sempre","senzala","sepultura","sequoia","sestercio","setuplo","seus","seviciar","sezonismo","shalom","siames","sibilante","sicrano","sidra","sifilitico","signos","silvo","simultaneo","sinusite","sionista","sirio","sisudo","situar","sivan","slide","slogan","soar","sobrio","socratico","sodomizar","soerguer","software","sogro","soja","solver","somente","sonso","sopro","soquete","sorveteiro","sossego","soturno","sousafone","sovinice","sozinho","suavizar","subverter","sucursal","sudoriparo","sufragio","sugestoes","suite","sujo","sultao","sumula","suntuoso","suor","supurar","suruba","susto","suturar","suvenir","tabuleta","taco","tadjique","tafeta","tagarelice","taitiano","talvez","tampouco","tanzaniano","taoista","tapume","taquion","tarugo","tascar","tatuar","tautologico","tavola","taxionomista","tchecoslovaco","teatrologo","tectonismo","tedioso","teflon","tegumento","teixo","telurio","temporas","tenue","teosofico","tepido","tequila","terrorista","testosterona","tetrico","teutonico","teve","texugo","tiara","tibia","tiete","tifoide","tigresa","tijolo","tilintar","timpano","tintureiro","tiquete","tiroteio","tisico","titulos","tive","toar","toboga","tofu","togoles","toicinho","tolueno","tomografo","tontura","toponimo","toquio","torvelinho","tostar","toto","touro","toxina","trazer","trezentos","trivialidade","trovoar","truta","tuaregue","tubular","tucano","tudo","tufo","tuiste","tulipa","tumultuoso","tunisino","tupiniquim","turvo","tutu","ucraniano","udenista","ufanista","ufologo","ugaritico","uiste","uivo","ulceroso","ulema","ultravioleta","umbilical","umero","umido","umlaut","unanimidade","unesco","ungulado","unheiro","univoco","untuoso","urano","urbano","urdir","uretra","urgente","urinol","urna","urologo","urro","ursulina","urtiga","urupe","usavel","usbeque","usei","usineiro","usurpar","utero","utilizar","utopico","uvular","uxoricidio","vacuo","vadio","vaguear","vaivem","valvula","vampiro","vantajoso","vaporoso","vaquinha","varziano","vasto","vaticinio","vaudeville","vazio","veado","vedico","veemente","vegetativo","veio","veja","veludo","venusiano","verdade","verve","vestuario","vetusto","vexatorio","vezes","viavel","vibratorio","victor","vicunha","vidros","vietnamita","vigoroso","vilipendiar","vime","vintem","violoncelo","viquingue","virus","visualizar","vituperio","viuvo","vivo","vizir","voar","vociferar","vodu","vogar","voile","volver","vomito","vontade","vortice","vosso","voto","vovozinha","voyeuse","vozes","vulva","vupt","western","xadrez","xale","xampu","xango","xarope","xaual","xavante","xaxim","xenonio","xepa","xerox","xicara","xifopago","xiita","xilogravura","xinxim","xistoso","xixi","xodo","xogum","xucro","zabumba","zagueiro","zambiano","zanzar","zarpar","zebu","zefiro","zeloso","zenite","zumbi"]},japanese:{prefix_len:4,words:["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ"]}};e.mn_words=d,function(){"use strict";for(var e in d)if(d.hasOwnProperty(e)){if(0===d[e].prefix_len)continue;d[e].trunc_words=[];for(var t=0;t<d[e].words.length;++t)d[e].trunc_words.push(d[e].words[t].slice(0,d[e].prefix_len))}}()})(t)},"4bf8":function(e,t,r){"use strict";r.r(t),r.d(t,"export_table_to_excel",(function(){return f})),r.d(t,"export_json_to_excel",(function(){return h}));r("b4fb"),r("fe59"),r("2eeb"),r("b722"),r("3e54"),r("e18c"),r("1c2e"),r("8256"),r("ab6e"),r("927c"),r("3c51"),r("db0a"),r("1cc1"),r("ab0f"),r("fc6e"),r("f30b"),r("cfd1"),r("d104"),r("f74a"),r("3598"),r("b497"),r("2909"),r("a7ef"),r("b523"),r("e671"),r("4140"),r("83db"),r("829d"),r("939f"),r("1bb1"),r("c3ba"),r("08ba");var o=r("4c09"),n=r("d72d"),a=r("3f81"),i=r.n(a);function s(e){for(var t=[],r=e.querySelectorAll("tr"),o=[],n=0;n<r.length;++n){for(var a=[],i=r[n],s=i.querySelectorAll("td"),u=0;u<s.length;++u){var l=s[u],c=l.getAttribute("colspan"),d=l.getAttribute("rowspan"),f=l.innerText;if(""!==f&&f==+f&&(f=+f),o.forEach((function(e){if(n>=e.s.r&&n<=e.e.r&&a.length>=e.s.c&&a.length<=e.e.c)for(var t=0;t<=e.e.c-e.s.c;++t)a.push(null)})),(d||c)&&(d=d||1,c=c||1,o.push({s:{r:n,c:a.length},e:{r:n+d-1,c:a.length+c-1}})),a.push(""!==f?f:null),c)for(var h=0;h<c-1;++h)a.push(null)}t.push(a)}return[t,o]}function u(e,t){t&&(e+=1462);var r=Date.parse(e);return(r-new Date(Date.UTC(1899,11,30)))/864e5}function l(e,t){for(var r={},o={s:{c:1e7,r:1e7},e:{c:0,r:0}},n=0;n!=e.length;++n)for(var a=0;a!=e[n].length;++a){o.s.r>n&&(o.s.r=n),o.s.c>a&&(o.s.c=a),o.e.r<n&&(o.e.r=n),o.e.c<a&&(o.e.c=a);var s={v:e[n][a]};if(null!=s.v){var l=i.a.utils.encode_cell({c:a,r:n});"number"===typeof s.v?s.t="n":"boolean"===typeof s.v?s.t="b":s.v instanceof Date?(s.t="n",s.z=i.a.SSF._table[14],s.v=u(s.v)):s.t="s",r[l]=s}}return o.s.c<1e7&&(r["!ref"]=i.a.utils.encode_range(o)),r}function c(){if(!(this instanceof c))return new c;this.SheetNames=[],this.Sheets={}}function d(e){for(var t=new ArrayBuffer(e.length),r=new Uint8Array(t),o=0;o!=e.length;++o)r[o]=255&e.charCodeAt(o);return t}function f(e){var t=document.getElementById(e),r=s(t),o=r[1],a=r[0],u="SheetJS",f=new c,h=l(a);h["!merges"]=o,f.SheetNames.push(u),f.Sheets[u]=h;var m=i.a.write(f,{bookType:"xlsx",bookSST:!1,type:"binary"});Object(n["saveAs"])(new Blob([d(m)],{type:"application/octet-stream"}),"test.xlsx")}function h(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.multiHeader,r=void 0===t?[]:t,a=e.header,s=e.data,u=e.filename,f=e.merges,h=void 0===f?[]:f,m=e.autoWidth,p=void 0===m||m,g=e.bookType,_=void 0===g?"xlsx":g;u=u||"excel-list",s=Object(o["a"])(s),s.unshift(a);for(var v=r.length-1;v>-1;v--)s.unshift(r[v]);var b="SheetJS",w=new c,y=l(s);if(h.length>0&&(y["!merges"]||(y["!merges"]=[]),h.forEach((function(e){y["!merges"].push(i.a.utils.decode_range(e))}))),p){for(var E=s.map((function(e){return e.map((function(e){return null==e?{wch:10}:e.toString().charCodeAt(0)>255?{wch:2*e.toString().length}:{wch:e.toString().length}}))})),S=E[0],A=1;A<E.length;A++)for(var M=0;M<E[A].length;M++)S[M]["wch"]<E[A][M]["wch"]&&(S[M]["wch"]=E[A][M]["wch"]);y["!cols"]=S}w.SheetNames.push(b),w.Sheets[b]=y;var k=i.a.write(w,{bookType:_,bookSST:!1,type:"binary"});Object(n["saveAs"])(new Blob([d(k)],{type:"application/octet-stream"}),"".concat(u,".").concat(_))}},"52df":function(e,t,r){const o=r("5c5c").BigInteger,n=r("1422").cnBase58,a=r("0e93"),s=r("3fb7"),u=r("f09e"),l=r("1507");var c=function(e){var t={};for(var r in e)t[r]=e[r];t.coinUnits=new o(10).pow(t.coinUnitPlaces);var d=32,f=4,h=8,m=141,p=t.addressPrefix,g=t.integratedAddressPrefix,_=new o(2).pow(64),v=2,b=1,w=1,y=2,E=255,S={PADDING:"00",PUBKEY:"01",NONCE:"02",MERGE_MINING:"03"},A={PAYMENT_ID:"00",ENCRYPTED_PAYMENT_ID:"01"},M=32,k={GE_P3:160,GE_P2:120,GE_P1P1:160,GE_CACHED:160,EC_SCALAR:32,EC_POINT:32,KEY_IMAGE:32,GE_DSMP:1280,SIGNATURE:64},F="8b655970153799af2aeadc9ff1add0ea6c7251d54154cfa92c173a0dd39c1f94",O=o("7237005577332262213973186563042994240857116359379907606001950938285454250989"),R="0100000000000000000000000000000000000000000000000000000000000000",T="0000000000000000000000000000000000000000000000000000000000000000",N=["8b655970153799af2aeadc9ff1add0ea6c7251d54154cfa92c173a0dd39c1f94","8faa448ae4b3e2bb3d4d130909f55fcd79711c1c83cdbccadd42cbe1515e8712","12a7d62c7791654a57f3e67694ed50b49a7d9e3fc1e4c7a0bde29d187e9cc71d","789ab9934b49c4f9e6785c6d57a498b3ead443f04f13df110c5427b4f214c739","771e9299d94f02ac72e38e44de568ac1dcb2edc6edb61f83ca418e1077ce3de8","73b96db43039819bdaf5680e5c32d741488884d18d93866d4074a849182a8a64","8d458e1c2f68ebebccd2fd5d379f5e58f8134df3e0e88cad3d46701063a8d412","09551edbe494418e81284455d64b35ee8ac093068a5f161fa6637559177ef404","d05a8866f4df8cee1e268b1d23a4c58c92e760309786cdac0feda1d247a9c9a7","55cdaad518bd871dd1eb7bc7023e1dc0fdf3339864f88fdd2de269fe9ee1832d","e7697e951a98cfd5712b84bbe5f34ed733e9473fcb68eda66e3788df1958c306","f92a970bae72782989bfc83adfaa92a4f49c7e95918b3bba3cdc7fe88acc8d47","1f66c2d491d75af915c8db6a6d1cb0cd4f7ddcd5e63d3ba9b83c866c39ef3a2b","3eec9884b43f58e93ef8deea260004efea2a46344fc5965b1a7dd5d18997efa7","b29f8f0ccb96977fe777d489d6be9e7ebc19c409b5103568f277611d7ea84894","56b1f51265b9559876d58d249d0c146d69a103636699874d3f90473550fe3f2c","1d7a36575e22f5d139ff9cc510fa138505576b63815a94e4b012bfd457caaada","d0ac507a864ecd0593fa67be7d23134392d00e4007e2534878d9b242e10d7620","f6c6840b9cf145bb2dccf86e940be0fc098e32e31099d56f7fe087bd5deb5094","28831a3340070eb1db87c12e05980d5f33e9ef90f83a4817c9f4a0a33227e197","87632273d629ccb7e1ed1a768fa2ebd51760f32e1c0b867a5d368d5271055c6e","5c7b29424347964d04275517c5ae14b6b5ea2798b573fc94e6e44a5321600cfb","e6945042d78bc2c3bd6ec58c511a9fe859c0ad63fde494f5039e0e8232612bd5","36d56907e2ec745db6e54f0b2e1b2300abcb422e712da588a40d3f1ebbbe02f6","34db6ee4d0608e5f783650495a3b2f5273c5134e5284e4fdf96627bb16e31e6b","8e7659fb45a3787d674ae86731faa2538ec0fdf442ab26e9c791fada089467e9","3006cf198b24f31bb4c7e6346000abc701e827cfbb5df52dcfa42e9ca9ff0802","f5fd403cb6e8be21472e377ffd805a8c6083ea4803b8485389cc3ebc215f002a","3731b260eb3f9482e45f1c3f3b9dcf834b75e6eef8c40f461ea27e8b6ed9473d","9f9dab09c3f5e42855c2de971b659328a2dbc454845f396ffc053f0bb192f8c3","5e055d25f85fdb98f273e4afe08464c003b70f1ef0677bb5e25706400be620a5","868bcf3679cb6b500b94418c0b8925f9865530303ae4e4b262591865666a4590","b3db6bd3897afbd1df3f9644ab21c8050e1f0038a52f7ca95ac0c3de7558cb7a","8119b3a059ff2cac483e69bcd41d6d27149447914288bbeaee3413e6dcc6d1eb","10fc58f35fc7fe7ae875524bb5850003005b7f978c0c65e2a965464b6d00819c","5acd94eb3c578379c1ea58a343ec4fcff962776fe35521e475a0e06d887b2db9","33daf3a214d6e0d42d2300a7b44b39290db8989b427974cd865db011055a2901","cfc6572f29afd164a494e64e6f1aeb820c3e7da355144e5124a391d06e9f95ea","d5312a4b0ef615a331f6352c2ed21dac9e7c36398b939aec901c257f6cbc9e8e","551d67fefc7b5b9f9fdbf6af57c96c8a74d7e45a002078a7b5ba45c6fde93e33","d50ac7bd5ca593c656928f38428017fc7ba502854c43d8414950e96ecb405dc3","0773e18ea1be44fe1a97e239573cfae3e4e95ef9aa9faabeac1274d3ad261604","e9af0e7ca89330d2b8615d1b4137ca617e21297f2f0ded8e31b7d2ead8714660","7b124583097f1029a0c74191fe7378c9105acc706695ed1493bb76034226a57b","ec40057b995476650b3db98e9db75738a8cd2f94d863b906150c56aac19caa6b","01d9ff729efd39d83784c0fe59c4ae81a67034cb53c943fb818b9d8ae7fc33e5","00dfb3c696328c76424519a7befe8e0f6c76f947b52767916d24823f735baf2e","461b799b4d9ceea8d580dcb76d11150d535e1639d16003c3fb7e9d1fd13083a8","ee03039479e5228fdc551cbde7079d3412ea186a517ccc63e46e9fcce4fe3a6c","a8cfb543524e7f02b9f045acd543c21c373b4c9b98ac20cec417a6ddb5744e94","932b794bf89c6edaf5d0650c7c4bad9242b25626e37ead5aa75ec8c64e09dd4f","16b10c779ce5cfef59c7710d2e68441ea6facb68e9b5f7d533ae0bb78e28bf57","0f77c76743e7396f9910139f4937d837ae54e21038ac5c0b3fd6ef171a28a7e4","d7e574b7b952f293e80dde905eb509373f3f6cd109a02208b3c1e924080a20ca","45666f8c381e3da675563ff8ba23f83bfac30c34abdde6e5c0975ef9fd700cb9","b24612e454607eb1aba447f816d1a4551ef95fa7247fb7c1f503020a7177f0dd","7e208861856da42c8bb46a7567f8121362d9fb2496f131a4aa9017cf366cdfce","5b646bff6ad1100165037a055601ea02358c0f41050f9dfe3c95dccbd3087be0","746d1dccfed2f0ff1e13c51e2d50d5324375fbd5bf7ca82a8931828d801d43ab","cb98110d4a6bb97d22feadbc6c0d8930c5f8fc508b2fc5b35328d26b88db19ae","60b626a033b55f27d7676c4095eababc7a2c7ede2624b472e97f64f96b8cfc0e","e5b52bc927468df71893eb8197ef820cf76cb0aaf6e8e4fe93ad62d803983104","056541ae5da9961be2b0a5e895e5c5ba153cbb62dd561a427bad0ffd41923199","f8fef05a3fa5c9f3eba41638b247b711a99f960fe73aa2f90136aeb20329b888"];function P(e,t){if(!valid_hex(t)||64!==t.length||!valid_hex(e)||64!==e.length)throw"invalid amount or mask!";var r=this.ge_double_scalarmult_base_vartime(e,F,t);return r}function D(e){if(!valid_hex(e)||64!==e.length)throw"invalid amount!";var t=this.ge_double_scalarmult_base_vartime(e,F,R);return t}function x(e){if(e.length%2!==0)return"length must be a multiple of 2!";for(var t="",r=1;r<=e.length/2;r++)t+=e.substr(0-2*r,2);return t}function L(e){for(var t="",r=1;r<=e.length;r++)t+=e.substr(0-r,1);return t}function I(e){if("string"!==typeof e&&e.toString().length>15)throw"integer should be entered as a string for precision";var t="";for(i=0;i<63;i++)t+="0";return(t+o(e).toString(16).toLowerCase()).slice(-64)}function C(e){return x(I(e))}function z(e){return o.parse(x(e),16).toString()}function B(e){if("string"!==typeof e&&e.toString().length>15)throw"integer should be entered as a string for precision";var t="";for(i=0;i<63;i++)t+="0";var r=new o(e);if(r.toString(2).length>64)throw"amount overflows uint64!";return L((t+r.toString(2)).slice(-64))}function j(e){if(e.length%2!==0)throw"Hex string has invalid length!";for(var t=new Uint8Array(e.length/2),r=0;r<e.length/2;++r)t[r]=parseInt(e.slice(2*r,2*r+2),16);return t}function U(e){for(var t=[],r=0;r<e.length;++r)t.push(("0"+e[r].toString(16)).slice(-2));return t.join("")}function H(e){for(var t="",r=0;r<e.length;r++){if("string"!==typeof e[r])throw"unexpected array element";t+=e[r]}return hash_to_scalar(t)}function q(e){for(var t="",r=0;r<e.p.rangeSigs.length;r++){for(var o=0;o<e.p.rangeSigs[r].bsig.s.length;o++)for(var n=0;n<e.p.rangeSigs[r].bsig.s[o].length;n++)t+=e.p.rangeSigs[r].bsig.s[o][n];for(t+=e.p.rangeSigs[r].bsig.ee,o=0;o<e.p.rangeSigs[r].Ci.length;o++)t+=e.p.rangeSigs[r].Ci[o]}return t}function V(e,t){while(e[e.length-1]==t)e=e.slice(0,-1);return e}function Y(e,t,r){while(e.length<t)e=r+e;return e}return this.decode_rct_ecdh=function(e,t){var r=this.hash_to_scalar(t),o=this.hash_to_scalar(r);return{mask:this.sc_sub(e.mask,r),amount:this.sc_sub(e.amount,o)}},this.encode_rct_ecdh=function(e,t){var r=this.hash_to_scalar(t),o=this.hash_to_scalar(r);return{mask:this.sc_add(e.mask,r),amount:this.sc_add(e.amount,o)}},this.valid_hex=function(e){var t=new RegExp("[0-9a-fA-F]{"+e.length+"}");return t.test(e)},this.hex_xor=function(e,t){if(!e||!t||e.length!==t.length||e.length%2!==0||t.length%2!==0)throw"Hex string(s) is/are invalid!";var r=j(e),o=j(t),n=new Uint8Array(r.length);for(i=0;i<n.length;i++)n[i]=r[i]^o[i];return U(n)},this.rand_32=function(){return s.mn_random(256)},this.rand_16=function(){return s.mn_random(128)},this.rand_8=function(){return s.mn_random(64)},this.encode_varint=function(e){e=new o(e);var t="";while(e.compare(128)>=0)t+=("0"+(127&e.lowVal()|128).toString(16)).slice(-2),e=e.divide(new o(2).pow(7));return t+=("0"+e.toJSValue().toString(16)).slice(-2),t},this.sc_reduce=function(e){var t=j(e);if(64!==t.length)throw"Invalid input length";var r=a._malloc(64);a.HEAPU8.set(t,r),a.ccall("sc_reduce","void",["number"],[r]);var o=a.HEAPU8.subarray(r,r+64);return a._free(r),U(o)},this.sc_reduce32=function(e){var t=j(e);if(32!==t.length)throw"Invalid input length";var r=a._malloc(32);a.HEAPU8.set(t,r),a.ccall("sc_reduce32","void",["number"],[r]);var o=a.HEAPU8.subarray(r,r+32);return a._free(r),U(o)},this.cn_fast_hash=function(e,t){if(e.length%2!==0||!this.valid_hex(e))throw"Input invalid";return l.keccak_256(j(e))},this.sec_key_to_pub=function(e){if(64!==e.length)throw"Invalid sec length";return U(u.ll.ge_scalarmult_base(j(e)))},this.ge_scalarmult_base=function(e){return this.sec_key_to_pub(e)},this.ge_scalarmult=function(e,t){if(64!==e.length||64!==t.length)throw"Invalid input length";return U(u.ll.ge_scalarmult(j(e),j(t)))},this.pubkeys_to_string=function(e,t){var r=this.encode_varint(p),o=r+e+t,a=this.cn_fast_hash(o);return n.encode(o+a.slice(0,2*f))},this.new__int_addr_from_addr_and_short_pid=function(e,t){let r=this.decode_address(e);if(!t||16!=t.length)throw"expected valid short_pid";var o=this.encode_varint(g),a=o+r.spend+r.view+t,i=this.cn_fast_hash(a),s=a+i.slice(0,2*f);return n.encode(s)},this.generate_keys=function(e){if(64!==e.length)throw"Invalid input length!";var t=this.sc_reduce32(e),r=this.sec_key_to_pub(t);return{sec:t,pub:r}},this.random_keypair=function(){return this.generate_keys(this.rand_32())},this.random_scalar=function(){return this.sc_reduce32(this.rand_32())},this.create_address=function(e){var t,r={};t=64!==e.length?this.cn_fast_hash(e):this.sc_reduce32(e),r.spend=this.generate_keys(t);var o=this.cn_fast_hash(t);return r.view=this.generate_keys(o),r.public_addr=this.pubkeys_to_string(r.spend.pub,r.view.pub),r},this.create_addr_prefix=function(e){var t;t=64!==e.length?this.cn_fast_hash(e):e;var r=this.generate_keys(t),o=this.encode_varint(p);return n.encode(o+r.pub).slice(0,44)},this.decode_address=function(e){var t=n.decode(e),r=this.encode_varint(p),o=this.encode_varint(g),a=t.slice(0,r.length);if(a!==r&&a!==o)throw"Invalid address prefix";t=t.slice(r.length);var i=t.slice(0,64),s=t.slice(64,128);if(a===o)var u=t.slice(128,128+2*h),l=t.slice(128+2*h,128+2*h+2*f),c=this.cn_fast_hash(a+i+s+u).slice(0,2*f);else l=t.slice(128,128+2*f),c=this.cn_fast_hash(a+i+s).slice(0,2*f);if(l!==c)throw"Invalid checksum";return u?{spend:i,view:s,intPaymentId:u}:{spend:i,view:s}},this.valid_keys=function(e,t,r,o){var n=this.sec_key_to_pub(t),a=this.sec_key_to_pub(o);return a===r&&n===e},this.hash_to_scalar=function(e){var t=this.cn_fast_hash(e),r=this.sc_reduce32(t);return r},this.generate_key_derivation=function(e,t){if(64!==e.length||64!==t.length)throw"Invalid input length";var r=this.ge_scalarmult(e,t);return this.ge_scalarmult(r,C(8))},this.derivation_to_scalar=function(e,t){var r="";if(e.length!==2*k.EC_POINT)throw"Invalid derivation length!";r+=e;var o=encode_varint(t);if(o.length>20)throw"output_index didn't fit in 64-bit varint";return r+=o,this.hash_to_scalar(r)},this.derive_secret_key=function(e,t,r){if(64!==e.length||64!==r.length)throw"Invalid input length!";var o=a._malloc(k.EC_SCALAR),n=j(this.derivation_to_scalar(e,t));a.HEAPU8.set(n,o);var i=a._malloc(M);a.HEAPU8.set(j(r),i);var s=a._malloc(k.EC_SCALAR);a.ccall("sc_add","void",["number","number","number"],[s,i,o]);var u=a.HEAPU8.subarray(s,s+k.EC_SCALAR);return a._free(o),a._free(i),a._free(s),U(u)},this.derive_public_key=function(e,t,r){if(64!==e.length||64!==r.length)throw"Invalid input length!";var o=this.derivation_to_scalar(e,t);return U(u.ll.ge_add(j(r),j(this.ge_scalarmult_base(o))))},this.hash_to_ec=function(e){if(e.length!==2*M)throw"Invalid input length";var t=a._malloc(d),r=a._malloc(k.GE_P2),o=a._malloc(k.GE_P1P1),n=a._malloc(k.GE_P3),i=j(this.cn_fast_hash(e,M));a.HEAPU8.set(i,t),a.ccall("ge_fromfe_frombytes_vartime","void",["number","number"],[r,t]),a.ccall("ge_mul8","void",["number","number"],[o,r]),a.ccall("ge_p1p1_to_p3","void",["number","number"],[n,o]);var s=a.HEAPU8.subarray(n,n+k.GE_P3);return a._free(t),a._free(r),a._free(o),a._free(n),U(s)},this.hash_to_ec_2=function(e){if(e.length!==2*M)throw"Invalid input length";var t=a._malloc(d),r=a._malloc(k.GE_P2),o=a._malloc(k.GE_P1P1),n=a._malloc(k.GE_P3),i=j(this.cn_fast_hash(e,M)),s=a._malloc(M);a.HEAPU8.set(i,t),a.ccall("ge_fromfe_frombytes_vartime","void",["number","number"],[r,t]),a.ccall("ge_mul8","void",["number","number"],[o,r]),a.ccall("ge_p1p1_to_p3","void",["number","number"],[n,o]),a.ccall("ge_p3_tobytes","void",["number","number"],[s,n]);var u=a.HEAPU8.subarray(s,s+M);return a._free(t),a._free(r),a._free(o),a._free(n),a._free(s),U(u)},this.generate_key_image_2=function(e,t){if(!e||!t||64!==e.length||64!==t.length)throw"Invalid input length";var r=a._malloc(M),o=a._malloc(M);if(a.HEAPU8.set(j(e),r),a.HEAPU8.set(j(t),o),0!==a.ccall("sc_check","number",["number"],[o]))throw"sc_check(sec) != 0";var n=a._malloc(k.GE_P3),i=a._malloc(k.GE_P2),s=j(this.hash_to_ec(e));a.HEAPU8.set(s,n);var u=a._malloc(k.KEY_IMAGE);a.ccall("ge_scalarmult","void",["number","number","number"],[i,o,n]),a.ccall("ge_tobytes","void",["number","number"],[u,i]);var l=a.HEAPU8.subarray(u,u+k.KEY_IMAGE);return a._free(r),a._free(o),a._free(n),a._free(i),a._free(u),U(l)},this.generate_key_image=function(e,t,r,o,n){if(64!==e.length)throw"Invalid tx_pub length";if(64!==t.length)throw"Invalid view_sec length";if(64!==r.length)throw"Invalid spend_pub length";if(64!==o.length)throw"Invalid spend_sec length";var a=this.generate_key_derivation(e,t),i=this.derive_public_key(a,n,r),s=this.derive_secret_key(a,n,o),u=this.generate_key_image_2(i,s);return{ephemeral_pub:i,key_image:u}},this.generate_key_image_helper_rct=function(e,t,r,o){var n=this.generate_key_derivation(t,e.view.sec);if(!n)throw"Failed to generate key image";var a=o?sc_sub(o,hash_to_scalar(derivation_to_scalar(n,r))):R,i=this.derive_public_key(n,r,e.spend.pub);if(!i)throw"Failed to generate key image";var s=this.derive_secret_key(n,r,e.spend.sec),u=this.generate_key_image_2(i,s);return{in_ephemeral:{pub:i,sec:s,mask:a},image:u}},this.ge_neg=function(e){if(64!==e.length)throw"expected 64 char hex string";return e.slice(0,62)+((parseInt(e.slice(62,63),16)+8)%16).toString(16)+e.slice(63,64)},this.ge_add=function(e,t){if(64!==e.length||64!==t.length)throw"Invalid input length!";return U(u.ll.ge_add(j(e),j(t)))},this.ge_sub=function(e,t){return point2n=ge_neg(t),ge_add(e,point2n)},this.sc_add=function(e,t){if(64!==e.length||64!==t.length)throw"Invalid input length!";var r=a._malloc(k.EC_SCALAR),o=a._malloc(k.EC_SCALAR);a.HEAPU8.set(j(e),r),a.HEAPU8.set(j(t),o);var n=a._malloc(k.EC_SCALAR);a.ccall("sc_add","void",["number","number","number"],[n,r,o]);var i=a.HEAPU8.subarray(n,n+k.EC_SCALAR);return a._free(r),a._free(o),a._free(n),U(i)},this.sc_sub=function(e,t){if(64!==e.length||64!==t.length)throw"Invalid input length!";var r=a._malloc(k.EC_SCALAR),o=a._malloc(k.EC_SCALAR);a.HEAPU8.set(j(e),r),a.HEAPU8.set(j(t),o);var n=a._malloc(k.EC_SCALAR);a.ccall("sc_sub","void",["number","number","number"],[n,r,o]);var i=a.HEAPU8.subarray(n,n+k.EC_SCALAR);return a._free(r),a._free(o),a._free(n),U(i)},this.sc_mul=function(e,t){if(64!==e.length||64!==t.length)throw"Invalid input length!";return C(o(z(e)).multiply(o(z(t))).remainder(O).toString())},this.sc_mulsub=function(e,t,r){if(r.length!==2*M||e.length!==2*M||t.length!==2*M||!this.valid_hex(r)||!this.valid_hex(e)||!this.valid_hex(t))throw"bad scalar";var o=a._malloc(M);a.HEAPU8.set(j(t),o);var n=a._malloc(M);a.HEAPU8.set(j(e),n);var i=a._malloc(M);a.HEAPU8.set(j(r),i);var s=a._malloc(M);return a.ccall("sc_mulsub","void",["number","number","number","number"],[s,n,o,i]),res=a.HEAPU8.subarray(s,s+M),a._free(i),a._free(o),a._free(n),a._free(s),U(res)},this.ge_double_scalarmult_base_vartime=function(e,t,r){if(64!==e.length||64!==t.length||64!==r.length)throw"Invalid input length!";return U(u.ll.ge_double_scalarmult_base_vartime(j(e),j(t),j(r)))},this.ge_double_scalarmult_postcomp_vartime=function(e,t,r,o){if(64!==r.length||64!==t.length||64!==e.length||64!==o.length)throw"Invalid input length!";var n=this.hash_to_ec_2(t);return U(u.ll.ge_double_scalarmult_postcomp_vartime(j(e),j(n),j(r),j(o)))},this.genBorromean=function(e,t,r,o,n){if(e.length!==n)throw"wrong xv length "+e.length;if(t.length!==o)throw"wrong pm size "+t.length;for(var a=0;a<t.length;a++)if(t[a].length!==n)throw"wrong pm["+a+"] length "+t[a].length;if(r.length!==n)throw"wrong iv length "+r.length;for(a=0;a<r.length;a++)if(r[a]>=o)throw"bad indices value at: "+a+": "+r[a];var i,s={s:[],ee:""},u=[];for(a=0;a<o;a++)s.s[a]=[],u[a]=[];var l=[];for(a=0;a<n;a++){i=parseInt(r[a]),l[a]=random_scalar(),u[i][a]=ge_scalarmult_base(l[a]);for(var c=i+1;c<o;c++){s.s[c][a]=random_scalar();var d=hash_to_scalar(u[c-1][a]);u[c][a]=ge_double_scalarmult_base_vartime(d,t[c][a],s.s[c][a])}}var f="";for(a=0;a<n;a++)f+=u[o-1][a];s.ee=hash_to_scalar(f);for(a=0;a<n;a++){var h=s.ee;for(c=0;c<r[a];c++){s.s[c][a]=random_scalar();var m=ge_double_scalarmult_base_vartime(h,t[c][a],s.s[c][a]);h=hash_to_scalar(m)}s.s[c][a]=sc_mulsub(e[a],h,l[a])}return s},this.proveRange=function(e,t,r,o,n){for(var a,i=2,s=R,u=T,l=B(t),c={Ci:[]},d=[],f=[],h=0;h<i;h++)f[h]=[];for(h=0;h<r;h++){d[h]=random_scalar(),a=l[h],f[a][h]=ge_scalarmult_base(d[h]);while(a>0)a--,f[a][h]=ge_add(f[a+1][h],N[h]);a=l[h];while(a<i-1)a++,f[a][h]=ge_sub(f[a-1][h],N[h]);u=sc_add(u,d[h])}for(h=0;h<r;h++)c.Ci[h]=f[0][h],s=ge_add(s,f[0][h]);return c.bsig=this.genBorromean(d,f,l,i,r),e.C=s,e.mask=u,c},this.MLSAG_Gen=function(e,t,r,o,n){var a=t.length;if(n>=a)throw"index out of range";var i=t[0].length;if(2!==i)throw"wrong row count";for(var s=0;s<a;s++)if(t[s].length!==i)throw"pk is not rectangular";if(r.length!==i)throw"bad xx size";var u="",l=[],c={ss:[],cc:null};for(s=0;s<a;s++)c.ss[s]=[];var d=[];d[0]=e,l[0]=random_scalar(),d[1]=t[n][0],d[2]=ge_scalarmult_base(l[0]),d[3]=generate_key_image_2(t[n][0],l[0]),l[1]=random_scalar(),d[4]=t[n][1],d[5]=ge_scalarmult_base(l[1]),u=H(d),s=(n+1)%a,0===s&&(c.cc=u);while(s!=n)c.ss[s][0]=random_scalar(),c.ss[s][1]=random_scalar(),
//!secret index (pubkey section)
d[1]=t[s][0],d[2]=ge_double_scalarmult_base_vartime(u,t[s][0],c.ss[s][0]),d[3]=ge_double_scalarmult_postcomp_vartime(c.ss[s][0],t[s][0],u,o),
//!secret index (commitment section)
d[4]=t[s][1],d[5]=ge_double_scalarmult_base_vartime(u,t[s][1],c.ss[s][1]),u=H(d),s=(s+1)%a,0===s&&(c.cc=u);for(s=0;s<i;s++)c.ss[n][s]=sc_mulsub(u,r[s],l[s]);return c},this.proveRctMG=function(e,t,r,o,n,a,i){var s=t.length;if(s<3)throw"cols must be > 2 (mixin)";for(var u=[],l=[],c=0;c<s;c++)l[c]=[],l[c][0]=t[c].dest,l[c][1]=ge_sub(t[c].mask,a);return u[0]=r.x,u[1]=sc_sub(r.a,n),this.MLSAG_Gen(e,l,u,o,i)},this.get_pre_mlsag_hash=function(e){var t="";t+=e.message,t+=this.cn_fast_hash(this.serialize_rct_base(e));var r=q(e);return t+=this.cn_fast_hash(r),this.cn_fast_hash(t)},this.genRct=function(e,t,r,o,n,a,i,s,u){if(n.length!==i.length)throw"different number of amounts/amount_keys";for(var l=0;l<a.length;l++)if(a[l].length<=s[l])throw"bad mixRing/index size";if(a.length!==t.length)throw"mismatched mixRing/inSk";if(o.length!==t.length)throw"mismatched inAmounts/inSk";if(s.length!==t.length)throw"mismatched indices/inSk";rv={type:1===t.length?w:y,message:e,outPk:[],p:{rangeSigs:[],MGs:[]},ecdhInfo:[],txnFee:u.toString(),pseudoOuts:[]};var c=T,d={C:null,mask:null},f=64;for(l=0;l<n.length;l++){var h=(new Date).getTime();rv.p.rangeSigs[l]=this.proveRange(d,n[l],f,0,0);var m=(new Date).getTime()-h;console.log("Time take for range proof "+l+": "+m),rv.outPk[l]=d.C,c=sc_add(c,d.mask),rv.ecdhInfo[l]=this.encode_rct_ecdh({mask:d.mask,amount:C(n[l])},i[l])}if(2===rv.type){var p=[],g=T;for(l=0;l<o.length-1;l++)p[l]=random_scalar(),g=sc_add(g,p[l]),rv.pseudoOuts[l]=P(C(o[l]),p[l]);p[l]=sc_sub(c,g),rv.pseudoOuts[l]=P(C(o[l]),p[l]);var _=this.get_pre_mlsag_hash(rv);for(l=0;l<o.length;l++)rv.p.MGs.push(this.proveRctMG(_,a[l],t[l],r[l],p[l],rv.pseudoOuts[l],s[l]))}else{var v=R;for(l=0;l<rv.outPk.length;l++)v=ge_add(v,rv.outPk[l]);v=ge_add(v,ge_scalarmult(F,C(rv.txnFee)));_=this.get_pre_mlsag_hash(rv);rv.p.MGs.push(this.proveRctMG(_,a[0],t[0],r[0],c,v,s[0]))}return rv},this.add_pub_key_to_extra=function(e,t){if(64!==t.length)throw"Invalid pubkey length";return e+=S.PUBKEY+t,e},this.add_nonce_to_extra=function(e,t){if(t.length%2!==0)throw"Invalid extra nonce";if(t.length/2>E)throw"Extra nonce must be at most "+E+" bytes";return e+=S.NONCE,e+=("0"+(t.length/2).toString(16)).slice(-2),e+=t,e},this.get_payment_id_nonce=function(e,t){if(64!==e.length&&16!==e.length)throw"Invalid payment id";var r="";return r+=t?A.ENCRYPTED_PAYMENT_ID:A.PAYMENT_ID,r+=e,r},this.abs_to_rel_offsets=function(e){if(0===e.length)return e;for(var t=e.length-1;t>=1;--t)e[t]=new o(e[t]).subtract(e[t-1]).toString();return e},this.get_tx_prefix_hash=function(e){var t=this.serialize_tx(e,!0);return this.cn_fast_hash(t)},this.get_tx_hash=function(e){return"string"===typeof e?this.cn_fast_hash(e):this.cn_fast_hash(this.serialize_tx(e))},this.serialize_tx=function(e,t){void 0===t&&(t=!1);var r,o,n="";for(n+=this.encode_varint(e.version),n+=this.encode_varint(e.unlock_time),n+=this.encode_varint(e.vin.length),r=0;r<e.vin.length;r++){var a=e.vin[r];switch(a.type){case"input_to_key":for(n+="02",n+=this.encode_varint(a.amount),n+=this.encode_varint(a.key_offsets.length),o=0;o<a.key_offsets.length;o++)n+=this.encode_varint(a.key_offsets[o]);n+=a.k_image;break;default:throw"Unhandled vin type: "+a.type}}for(n+=this.encode_varint(e.vout.length),r=0;r<e.vout.length;r++){var i=e.vout[r];switch(n+=this.encode_varint(i.amount),i.target.type){case"txout_to_key":n+="02",n+=i.target.key;break;default:throw"Unhandled txout target type: "+i.target.type}}if(!this.valid_hex(e.extra))throw"Tx extra has invalid hex";if(n+=this.encode_varint(e.extra.length/2),n+=e.extra,!t){if(e.vin.length!==e.signatures.length)throw"Signatures length != vin length";for(r=0;r<e.vin.length;r++)for(o=0;o<e.signatures[r].length;o++)n+=e.signatures[r][o]}return n},this.serialize_rct_tx_with_hash=function(e){var t="",r="";r+=this.serialize_tx(e,!0),t+=this.cn_fast_hash(r);var o=this.serialize_rct_base(e.rct_signatures);t+=this.cn_fast_hash(o),r+=o;for(var n=q(e.rct_signatures),a=0;a<e.rct_signatures.p.MGs.length;a++){for(var i=0;i<e.rct_signatures.p.MGs[a].ss.length;i++)n+=e.rct_signatures.p.MGs[a].ss[i][0],n+=e.rct_signatures.p.MGs[a].ss[i][1];n+=e.rct_signatures.p.MGs[a].cc}t+=this.cn_fast_hash(n),r+=n;var s=this.cn_fast_hash(t);return{raw:r,hash:s}},this.serialize_rct_base=function(e){var t="";if(t+=this.encode_varint(e.type),t+=this.encode_varint(e.txnFee),2===e.type)for(var r=0;r<e.pseudoOuts.length;r++)t+=e.pseudoOuts[r];if(e.ecdhInfo.length!==e.outPk.length)throw"mismatched outPk/ecdhInfo!";for(r=0;r<e.ecdhInfo.length;r++)t+=e.ecdhInfo[r].mask,t+=e.ecdhInfo[r].amount;for(r=0;r<e.outPk.length;r++)t+=e.outPk[r];return t},this.generate_ring_signature=function(e,t,r,o,n){if(t.length!==2*k.KEY_IMAGE)throw"invalid key image length";if(o.length!==2*M)throw"Invalid secret key length";if(e.length!==2*d||!this.valid_hex(e))throw"Invalid prefix hash";if(n>=r.length||n<0)throw"real_index is invalid";var i=a.cwrap("ge_tobytes","void",["number","number"]),s=a.cwrap("ge_p3_tobytes","void",["number","number"]),u=a.cwrap("ge_scalarmult_base","void",["number","number"]),l=a.cwrap("ge_scalarmult","void",["number","number","number"]),c=a.cwrap("sc_add","void",["number","number","number"]),f=a.cwrap("sc_sub","void",["number","number","number"]),h=a.cwrap("sc_mulsub","void",["number","number","number","number"]),m=a.cwrap("sc_0","void",["number"]),p=a.cwrap("ge_double_scalarmult_base_vartime","void",["number","number","number","number"]),g=a.cwrap("ge_double_scalarmult_precomp_vartime","void",["number","number","number","number","number"]),_=a.cwrap("ge_frombytes_vartime","number",["number","number"]),v=a.cwrap("ge_dsm_precomp","void",["number","number"]),b=2*k.EC_POINT*r.length,w=a._malloc(b),y=k.SIGNATURE*r.length,E=a._malloc(y);function S(e){return w+k.EC_POINT*(2*e)}function A(e){return w+k.EC_POINT*(2*e+1)}function F(e){return E+k.EC_SCALAR*(2*e)}function O(e){return E+k.EC_SCALAR*(2*e+1)}var R,T=a._malloc(k.KEY_IMAGE);a.HEAPU8.set(j(t),T);var N=a._malloc(k.GE_P3),P=a._malloc(k.GE_DSMP),D=a._malloc(k.EC_SCALAR),x=a._malloc(k.EC_SCALAR),L=a._malloc(k.EC_SCALAR),I=a._malloc(k.GE_P2),C=a._malloc(k.GE_P3),z=a._malloc(M),B=a._malloc(M);if(a.HEAPU8.set(j(o),B),0!=_(N,T))throw"failed to call ge_frombytes_vartime";for(v(P,N),m(D),R=0;R<r.length;R++)if(R===n){var H=this.random_scalar();a.HEAPU8.set(j(H),x),u(C,x),s(S(R),C);var q=this.hash_to_ec(r[R]);a.HEAPU8.set(j(q),C),l(I,x,C),i(A(R),I)}else{if(a.HEAPU8.set(j(this.random_scalar()),F(R)),a.HEAPU8.set(j(this.random_scalar()),O(R)),a.HEAPU8.set(j(r[R]),z),0!==a.ccall("ge_frombytes_vartime","void",["number","number"],[C,z]))throw"Failed to call ge_frombytes_vartime";p(I,F(R),C,O(R)),i(S(R),I);q=this.hash_to_ec(r[R]);a.HEAPU8.set(j(q),C),g(I,O(R),C,F(R),P),i(A(R),I),c(D,D,F(R))}var V=a.HEAPU8.subarray(w,w+b),Y=this.hash_to_scalar(e+U(V));a.HEAPU8.set(j(Y),L),f(F(n),L,D),h(O(n),F(n),B,x);for(var W=U(a.HEAPU8.subarray(E,E+y)),G=[],X=0;X<r.length;X++)G.push(W.slice(2*k.SIGNATURE*X,2*k.SIGNATURE*(X+1)));return a._free(T),a._free(N),a._free(P),a._free(D),a._free(x),a._free(L),a._free(I),a._free(C),a._free(w),a._free(E),a._free(z),a._free(B),G},this.construct_tx=function(e,t,r,n,a,i,s,u,l){var c=this.random_keypair();console.log(c);var d="";if(a){if(i&&a.length!==2*h)throw"payment ID must be "+h+" bytes to be encrypted!";if(console.log("Adding payment id: "+a),i){var f=this.cn_fast_hash(this.generate_key_derivation(s,c.sec)+m.toString(16)).slice(0,2*h);console.log("Txkeys:",c,"Payment ID key:",f),a=this.hex_xor(a,f)}var p=this.get_payment_id_nonce(a,i);console.log("Extra nonce: "+p),d=this.add_nonce_to_extra(d,p)}var g={unlock_time:u,version:l?v:b,extra:d,vin:[],vout:[]};l?g.rct_signatures={}:g.signatures=[],g.extra=this.add_pub_key_to_extra(g.extra,c.pub);var _,w,y=[],E=o.ZERO;for(console.log("Sources: "),_=0;_<t.length;_++){if(console.log(_+": "+this.formatMoneyFull(t[_].amount)),t[_].real_out>=t[_].outputs.length)throw"real index >= outputs.length";E=E.add(t[_].amount);var S=this.generate_key_image_helper_rct(e,t[_].real_out_tx_key,t[_].real_out_in_tx,t[_].mask);if(y.push(S.in_ephemeral),S.in_ephemeral.pub!==t[_].outputs[t[_].real_out].key)throw"in_ephemeral.pub != source.real_out.key";var A={type:"input_to_key"};for(A.amount=t[_].amount,A.k_image=S.image,A.key_offsets=[],w=0;w<t[_].outputs.length;++w)A.key_offsets.push(t[_].outputs[w].index);A.key_offsets=this.abs_to_rel_offsets(A.key_offsets),g.vin.push(A)}var M=o.ZERO,k=0,F=[];for(_=0;_<r.length;++_){if(new o(r[_].amount).compare(0)<0)throw"dst.amount < 0";r[_].keys=this.decode_address(r[_].address);var O=this.generate_key_derivation(r[_].keys.view,c.sec);l&&F.push(this.derivation_to_scalar(O,k));var T=this.derive_public_key(O,k,r[_].keys.spend),N={amount:r[_].amount.toString()};N.target={type:"txout_to_key",key:T},g.vout.push(N),++k,M=M.add(r[_].amount)}if(M.add(n).compare(E)>0)throw"outputs money ("+this.formatMoneyFull(M)+") + fee ("+this.formatMoneyFull(n)+") > inputs money ("+this.formatMoneyFull(E)+")";if(l){var P=n,D=[],x=[],L=[],I=[],C=[];for(_=0;_<g.vin.length;_++){for(D.push(g.vin[_].k_image),x.push({x:y[_].sec,a:y[_].mask}),L.push(g.vin[_].amount),y[_].mask!==R&&(g.vin[_].amount="0"),I[_]=[],w=0;w<t[_].outputs.length;w++)I[_].push({dest:t[_].outputs[w].key,mask:t[_].outputs[w].commit});C.push(t[_].real_out)}var z=[];for(_=0;_<g.vout.length;_++)z.push(g.vout[_].amount),g.vout[_].amount="0";var B=this.get_tx_prefix_hash(g);g.rct_signatures=genRct(B,x,D,L,z,I,F,C,P)}else for(_=0;_<t.length;++_){var j=[];for(w=0;w<t[_].outputs.length;++w)j.push(t[_].outputs[w].key);var U=this.generate_ring_signature(this.get_tx_prefix_hash(g),g.vin[_].k_image,j,y[_].sec,t[_].real_out);g.signatures.push(U)}return console.log(g),g},this.create_transaction=function(e,t,r,n,a,i,s,u,l,d,f,h){var m,p;if(f=f||0,a=a||[],0===r.length)throw"Destinations empty";if(a.length!==n.length&&0!==i)throw"Wrong number of mix outs provided ("+n.length+" outputs, "+a.length+" mix outs)";for(m=0;m<a.length;m++)if((a[m].outputs||[]).length<i)throw"Not enough outputs to mix with";var g={view:{pub:e.view,sec:t.view},spend:{pub:e.spend,sec:t.spend}};if(!this.valid_keys(g.view.pub,g.view.sec,g.spend.pub,g.spend.sec))throw"Invalid secret keys!";var v=o.ZERO;for(m=0;m<r.length;++m)if(v=v.add(r[m].amount),-1!==v.compare(_))throw"Output overflow!";var b=o.ZERO,w=[];for(console.log("Selected transfers: ",n),m=0;m<n.length;++m){if(b=b.add(n[m].amount),-1!==b.compare(_))throw"Input overflow!";var y={outputs:[]};if(y.amount=new o(n[m].amount).toString(),0!==a.length){a[m].outputs.sort((function(e,t){return new o(e.global_index).compare(t.global_index)})),p=0;while(y.outputs.length<i&&p<a[m].outputs.length){var E=a[m].outputs[p];if(E.global_index!==n[m].global_index){var S={};if(S.index=E.global_index.toString(),S.key=E.public_key,h)if(E.rct)S.commit=E.rct.slice(0,64);else{if(n[m].rct)throw"mix rct outs missing commit";S.commit=D(C(y.amount))}y.outputs.push(S),p++}else console.log("got mixin the same as output, skipping"),p++}}var A={};A.index=new o(n[m].global_index||0).toString(),A.key=n[m].public_key,h&&(n[m].rct?A.commit=n[m].rct.slice(0,64):A.commit=D(C(y.amount)));var M=y.outputs.length;for(p=0;p<y.outputs.length;p++)if(new o(A.index).compare(y.outputs[p].index)<0){M=p;break}y.outputs.splice(M,0,A),y.real_out_tx_key=n[m].tx_pub_key,y.real_out=M,y.real_out_in_tx=n[m].index,h&&(n[m].rct?y.mask=n[m].rct.slice(64,128):y.mask=null),w.push(y)}console.log("sources: ",w);var k={amount:o.ZERO},F=v.compare(b);if(F<0){if(k.amount=b.subtract(v),0!==k.amount.compare(s))throw"early fee calculation != later"}else if(F>0)throw"Need more money than found! (have: "+c.formatMoney(b)+" need: "+c.formatMoney(v)+")";return this.construct_tx(g,w,r,s,u,l,d,f,h)},this.estimateRctSize=function(e,t,r){var o=0;return o+=6306*r,o+=(4*(t+1)+32+8)*e,o+=64*(t+1)*e+64*e,o+=74,o},this.printDsts=function(e){for(var t=0;t<e.length;t++)console.log(e[t].address+": "+this.formatMoneyFull(e[t].amount))},this.formatMoneyFull=function(e){e=e.toString();var r,o="-"===e[0]?"-":"";return"-"===o&&(e=e.slice(1)),r=e.length>=t.coinUnitPlaces?e.substr(e.length-t.coinUnitPlaces,t.coinUnitPlaces):Y(e,t.coinUnitPlaces,"0"),o+(e.substr(0,e.length-t.coinUnitPlaces)||"0")+"."+r},this.formatMoneyFullSymbol=function(e){return this.formatMoneyFull(e)+" "+t.coinSymbol},this.formatMoney=function(e){var t=V(this.formatMoneyFull(e),"0");return"."===t[t.length-1]?t.slice(0,t.length-1):t},this.formatMoneySymbol=function(e){return this.formatMoney(e)+" "+t.coinSymbol},this.parseMoney=function(e){if(!e)return o.ZERO;var r="-"===e[0];r&&(e=e.slice(1));var n=e.indexOf(".");return-1==n?r?o.multiply(e,t.coinUnits).negate():o.multiply(e,t.coinUnits):(n+t.coinUnitPlaces+1<e.length&&(e=e.substr(0,n+t.coinUnitPlaces+1)),r?new o(e.substr(0,n)).exp10(t.coinUnitPlaces).add(new o(e.substr(n+1)).exp10(n+t.coinUnitPlaces-e.length+1)).negate:new o(e.substr(0,n)).exp10(t.coinUnitPlaces).add(new o(e.substr(n+1)).exp10(n+t.coinUnitPlaces-e.length+1)))},this.decompose_amount_into_digits=function(e){e=e.toString();var t=[];while(e.length>0){if("0"!==e[0]){var r=e[0];while(r.length<e.length)r+="0";t.push(new o(r))}e=e.slice(1)}return t},this.decompose_tx_destinations=function(e,t){var r=[];if(t)for(var o=0;o<e.length;o++)r.push({address:e[o].address,amount:e[o].amount});else for(o=0;o<e.length;o++)for(var n=this.decompose_amount_into_digits(e[o].amount),a=0;a<n.length;a++)n[a].compare(0)>0&&r.push({address:e[o].address,amount:n[a]});return r.sort((function(e,t){return e["amount"]-t["amount"]}))},this.is_tx_unlocked=function(e,r){if(!t.maxBlockNumber)throw"Max block number is not set in config!";if(e<t.maxBlockNumber)return r>=e;var o=Math.round((new Date).getTime()/1e3);return o>=e},this.tx_locked_reason=function(e,r){if(e<t.maxBlockNumber){var o=e-r;if(o<=0)return"Transaction is unlocked";var n=moment().add(o*t.avgBlockTime,"seconds");return"Will be unlocked in "+o+" blocks, ~"+n.fromNow(!0)+", "+n.calendar()}var a=Math.round((new Date).getTime()/1e3),i=e-a;if(i<=0)return"Transaction is unlocked";var s=moment(1e3*e);return"Will be unlocked "+s.fromNow()+", "+s.calendar()},this};t.cnUtil=c},"5c5c":function(e,t,r){(function(e){"use strict";var t={};function r(e,o,n){if(n!==t)return e instanceof r?e:"undefined"===typeof e?a:r.parse(e);e=e||[];while(e.length&&!e[e.length-1])--e.length;this._d=e,this._s=e.length?o||1:0}r._construct=function(e,o){return new r(e,o,t)};var o=1e7,n=7;r.base=o,r.base_log10=n;var a=new r([],0,t);r.ZERO=a;var i=new r([1],1,t);r.ONE=i;var s=new r(i._d,-1,t);r.M_ONE=s,r._0=a,r._1=i,r.small=[a,i,new r([2],1,t),new r([3],1,t),new r([4],1,t),new r([5],1,t),new r([6],1,t),new r([7],1,t),new r([8],1,t),new r([9],1,t),new r([10],1,t),new r([11],1,t),new r([12],1,t),new r([13],1,t),new r([14],1,t),new r([15],1,t),new r([16],1,t),new r([17],1,t),new r([18],1,t),new r([19],1,t),new r([20],1,t),new r([21],1,t),new r([22],1,t),new r([23],1,t),new r([24],1,t),new r([25],1,t),new r([26],1,t),new r([27],1,t),new r([28],1,t),new r([29],1,t),new r([30],1,t),new r([31],1,t),new r([32],1,t),new r([33],1,t),new r([34],1,t),new r([35],1,t),new r([36],1,t)],r.digits="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),r.prototype.toString=function(e){if(e=+e||10,e<2||e>36)throw new Error("illegal radix "+e+".");if(0===this._s)return"0";if(10===e){var t=this._s<0?"-":"";t+=this._d[this._d.length-1].toString();for(var o=this._d.length-2;o>=0;o--){var a=this._d[o].toString();while(a.length<n)a="0"+a;t+=a}return t}var i=r.digits;e=r.small[e];var s,u=this._s,l=this.abs(),c=[];while(0!==l._s){var d=l.divRem(e);l=d[0],s=d[1],c.push(i[s.valueOf()])}return(u<0?"-":"")+c.reverse().join("")},r.radixRegex=[/^$/,/^$/,/^[01]*$/,/^[012]*$/,/^[0-3]*$/,/^[0-4]*$/,/^[0-5]*$/,/^[0-6]*$/,/^[0-7]*$/,/^[0-8]*$/,/^[0-9]*$/,/^[0-9aA]*$/,/^[0-9abAB]*$/,/^[0-9abcABC]*$/,/^[0-9a-dA-D]*$/,/^[0-9a-eA-E]*$/,/^[0-9a-fA-F]*$/,/^[0-9a-gA-G]*$/,/^[0-9a-hA-H]*$/,/^[0-9a-iA-I]*$/,/^[0-9a-jA-J]*$/,/^[0-9a-kA-K]*$/,/^[0-9a-lA-L]*$/,/^[0-9a-mA-M]*$/,/^[0-9a-nA-N]*$/,/^[0-9a-oA-O]*$/,/^[0-9a-pA-P]*$/,/^[0-9a-qA-Q]*$/,/^[0-9a-rA-R]*$/,/^[0-9a-sA-S]*$/,/^[0-9a-tA-T]*$/,/^[0-9a-uA-U]*$/,/^[0-9a-vA-V]*$/,/^[0-9a-wA-W]*$/,/^[0-9a-xA-X]*$/,/^[0-9a-yA-Y]*$/,/^[0-9a-zA-Z]*$/],r.parse=function(e,o){function i(e){return e=e.replace(/\s*[*xX]\s*10\s*(\^|\*\*)\s*/,"e"),e.replace(/^([+\-])?(\d+)\.?(\d*)[eE]([+\-]?\d+)$/,(function(e,t,r,o,n){n=+n;var a=n<0,i=r.length+n;e=(a?r:o).length,n=(n=Math.abs(n))>=e?n-e+a:0;var s=new Array(n+1).join("0"),u=r+o;return(t||"")+(a?u=s+u:u+=s).substr(0,i+=a?s.length:0)+(i<u.length?"."+u.substr(i):"")}))}var s;e=e.toString(),"undefined"!==typeof o&&10!==+o||(e=i(e)),s="undefined"===typeof o?"0[xcb]":16==o?"0x":8==o?"0c":2==o?"0b":"";var u=new RegExp("^([+\\-]?)("+s+")?([0-9a-z]*)(?:\\.\\d*)?$","i").exec(e);if(u){var l=u[1]||"+",c=u[2]||"",d=u[3]||"";if("undefined"===typeof o)o="0x"===c||"0X"===c?16:"0c"===c||"0C"===c?8:"0b"===c||"0B"===c?2:10;else if(o<2||o>36)throw new Error("Illegal radix "+o+".");if(o=+o,!r.radixRegex[o].test(d))throw new Error("Bad digit for radix "+o);if(d=d.replace(/^0+/,"").split(""),0===d.length)return a;if(l="-"===l?-1:1,10==o){var f=[];while(d.length>=n)f.push(parseInt(d.splice(d.length-r.base_log10,r.base_log10).join(""),10));return f.push(parseInt(d.join(""),10)),new r(f,l,t)}f=a;o=r.small[o];for(var h=r.small,m=0;m<d.length;m++)f=f.multiply(o).add(h[parseInt(d[m],36)]);return new r(f._d,l,t)}throw new Error("Invalid BigInteger format: "+e)},r.prototype.add=function(e){if(0===this._s)return r(e);if(e=r(e),0===e._s)return this;if(this._s!==e._s)return e=e.negate(),this.subtract(e);for(var n,a=this._d,i=e._d,s=a.length,u=i.length,l=new Array(Math.max(s,u)+1),c=Math.min(s,u),d=0,f=0;f<c;f++)n=a[f]+i[f]+d,l[f]=n%o,d=n/o|0;for(u>s&&(a=i,s=u),f=c;d&&f<s;f++)n=a[f]+d,l[f]=n%o,d=n/o|0;for(d&&(l[f]=d);f<s;f++)l[f]=a[f];return new r(l,this._s,t)},r.prototype.negate=function(){return new r(this._d,0|-this._s,t)},r.prototype.abs=function(){return this._s<0?this.negate():this},r.prototype.subtract=function(e){if(0===this._s)return r(e).negate();if(e=r(e),0===e._s)return this;if(this._s!==e._s)return e=e.negate(),this.add(e);var n=this;this._s<0&&(n=new r(e._d,1,t),e=new r(this._d,1,t));var i=n.compareAbs(e);if(0===i)return a;if(i<0){var s=e;e=n,n=s}var u,l,c=n._d,d=e._d,f=c.length,h=d.length,m=new Array(f),p=0;for(u=0;u<h;u++)l=c[u]-p-d[u],l<0?(l+=o,p=1):p=0,m[u]=l;for(u=h;u<f;u++){if(l=c[u]-p,!(l<0)){m[u++]=l;break}l+=o,m[u]=l}for(;u<f;u++)m[u]=c[u];return new r(m,i,t)},function(){function e(e,n){var a=e._d,i=a.slice(),s=0;while(1){var u=(a[s]||0)+1;if(i[s]=u%o,u<=o-1)break;++s}return new r(i,n,t)}function n(e,n){var a=e._d,i=a.slice(),s=0;while(1){var u=(a[s]||0)-1;if(!(u<0)){i[s]=u;break}i[s]=u+o,++s}return new r(i,n,t)}r.prototype.next=function(){switch(this._s){case 0:return i;case-1:return n(this,-1);default:return e(this,1)}},r.prototype.prev=function(){switch(this._s){case 0:return s;case-1:return e(this,-1);default:return n(this,1)}}}(),r.prototype.compareAbs=function(e){if(this===e)return 0;if(!(e instanceof r)){if(!isFinite(e))return isNaN(e)?e:-1;e=r(e)}if(0===this._s)return 0!==e._s?-1:0;if(0===e._s)return 1;var t=this._d.length,o=e._d.length;if(t<o)return-1;if(t>o)return 1;for(var n=this._d,a=e._d,i=t-1;i>=0;i--)if(n[i]!==a[i])return n[i]<a[i]?-1:1;return 0},r.prototype.compare=function(e){if(this===e)return 0;if(e=r(e),0===this._s)return-e._s;if(this._s===e._s){var t=this.compareAbs(e);return t*this._s}return this._s},r.prototype.isUnit=function(){return this===i||this===s||1===this._d.length&&1===this._d[0]},r.prototype.multiply=function(e){if(0===this._s)return a;if(e=r(e),0===e._s)return a;if(this.isUnit())return this._s<0?e.negate():e;if(e.isUnit())return e._s<0?this.negate():this;if(this===e)return this.square();var n,i=this._d.length>=e._d.length,s=(i?this:e)._d,u=(i?e:this)._d,l=s.length,c=u.length,d=l+c,f=new Array(d);for(n=0;n<d;n++)f[n]=0;for(n=0;n<c;n++){for(var h,m=0,p=u[n],g=l+n,_=n;_<g;_++)h=f[_]+p*s[_-n]+m,m=h/o|0,f[_]=h%o|0;m&&(h=f[_]+m,m=h/o|0,f[_]=h%o)}return new r(f,this._s*e._s,t)},r.prototype.multiplySingleDigit=function(e){if(0===e||0===this._s)return a;if(1===e)return this;var n;if(1===this._d.length)return n=this._d[0]*e,new r(n>=o?[n%o|0,n/o|0]:[n],1,t);if(2===e)return this.add(this);if(this.isUnit())return new r([e],1,t);for(var i=this._d,s=i.length,u=s+1,l=new Array(u),c=0;c<u;c++)l[c]=0;for(var d=0,f=0;f<s;f++)n=e*i[f]+d,d=n/o|0,l[f]=n%o|0;return d&&(l[f]=d),new r(l,1,t)},r.prototype.square=function(){if(0===this._s)return a;if(this.isUnit())return i;var e,n,s,u,l=this._d,c=l.length,d=new Array(c+c+1);for(u=0;u<c;u++)s=2*u,e=l[u]*l[u],n=e/o|0,d[s]=e%o,d[s+1]=n;for(u=0;u<c;u++){n=0,s=2*u+1;for(var f=u+1;f<c;f++,s++)e=l[f]*l[u]*2+d[s]+n,n=e/o|0,d[s]=e%o;s=c+u;var h=n+d[s];n=h/o|0,d[s]=h%o,d[s+1]+=n}return new r(d,1,t)},r.prototype.quotient=function(e){return this.divRem(e)[0]},r.prototype.divide=r.prototype.quotient,r.prototype.remainder=function(e){return this.divRem(e)[1]},r.prototype.divRem=function(e){if(e=r(e),0===e._s)throw new Error("Divide by zero");if(0===this._s)return[a,a];if(1===e._d.length)return this.divRemSmall(e._s*e._d[0]);switch(this.compareAbs(e)){case 0:return[this._s===e._s?i:s,a];case-1:return[a,this]}var n,u=this._s*e._s,l=e.abs(),c=this._d,d=c.length,f=(e._d.length,[]),h=new r([],0,t);while(d)if(h._d.unshift(c[--d]),h=new r(h._d,1,t),h.compareAbs(e)<0)f.push(0);else{if(0===h._s)n=0;else{var m=h._d.length,p=l._d.length,g=h._d[m-1]*o+h._d[m-2],_=l._d[p-1]*o+l._d[p-2];h._d.length>l._d.length&&(g=(g+1)*o),n=Math.ceil(g/_)}do{var v=l.multiplySingleDigit(n);if(v.compareAbs(h)<=0)break;n--}while(n);if(f.push(n),n){var b=h.subtract(v);h._d=b._d.slice()}}return[new r(f.reverse(),u,t),new r(h._d,this._s,t)]},r.prototype.divRemSmall=function(e){var n;if(e=+e,0===e)throw new Error("Divide by zero");var i=e<0?-1:1,s=this._s*i;if(e=Math.abs(e),e<1||e>=o)throw new Error("Argument out of range");if(0===this._s)return[a,a];if(1===e||-1===e)return[1===s?this.abs():new r(this._d,s,t),a];if(1===this._d.length){var u=new r([this._d[0]/e|0],1,t);return n=new r([this._d[0]%e|0],1,t),s<0&&(u=u.negate()),this._s<0&&(n=n.negate()),[u,n]}var l,c=this._d.slice(),d=new Array(c.length),f=0,h=0,m=0;while(c.length)if(f=f*o+c[c.length-1],f<e)d[m++]=0,c.pop(),h=o*h+f;else{l=0===f?0:f/e|0;var p=e*l;h=f-p,d[m++]=l,l?(c.pop(),f=h):c.pop()}return n=new r([h],1,t),this._s<0&&(n=n.negate()),[new r(d.reverse(),s,t),n]},r.prototype.isEven=function(){var e=this._d;return 0===this._s||0===e.length||e[0]%2===0},r.prototype.isOdd=function(){return!this.isEven()},r.prototype.sign=function(){return this._s},r.prototype.isPositive=function(){return this._s>0},r.prototype.isNegative=function(){return this._s<0},r.prototype.isZero=function(){return 0===this._s},r.prototype.exp10=function(e){if(e=+e,0===e)return this;if(Math.abs(e)>Number(u))throw new Error("exponent too large in BigInteger.exp10");if(0===this._s)return a;if(e>0){for(var o=new r(this._d.slice(),this._s,t);e>=n;e-=n)o._d.unshift(0);return 0==e?o:(o._s=1,o=o.multiplySingleDigit(Math.pow(10,e)),this._s<0?o.negate():o)}if(-e>=this._d.length*n)return a;o=new r(this._d.slice(),this._s,t);for(e=-e;e>=n;e-=n)o._d.shift();return 0==e?o:o.divRemSmall(Math.pow(10,e))[0]},r.prototype.pow=function(e){if(this.isUnit())return this._s>0||r(e).isOdd()?this:this.negate();if(e=r(e),0===e._s)return i;if(e._s<0){if(0===this._s)throw new Error("Divide by zero");return a}if(0===this._s)return a;if(e.isUnit())return this;if(e.compareAbs(u)>0)throw new Error("exponent too large in BigInteger.pow");var t=this,o=i,n=r.small[2];while(e.isPositive()){if(e.isOdd()&&(o=o.multiply(t),e.isUnit()))return o;t=t.square(),e=e.quotient(n)}return o},r.prototype.modPow=function(e,t){var o=i,n=this;while(e.isPositive())e.isOdd()&&(o=o.multiply(n).remainder(t)),e=e.quotient(r.small[2]),e.isPositive()&&(n=n.square().remainder(t));return o},r.prototype.log=function(){switch(this._s){case 0:return-1/0;case-1:return NaN;default:}var e=this._d.length;if(e*n<30)return Math.log(this.valueOf());var a=Math.ceil(30/n),i=this._d.slice(e-a);return Math.log(new r(i,1,t).valueOf())+(e-a)*Math.log(o)},r.prototype.valueOf=function(){return parseInt(this.toString(),10)},r.prototype.toJSValue=function(){return parseInt(this.toString(),10)},r.prototype.lowVal=function(){return this._d[0]||0};var u=r(2147483647);r.MAX_EXP=u,function(){function e(e){return function(t){return e.call(r(t))}}function t(e){return function(t,o){return e.call(r(t),r(o))}}function o(e){return function(t,o,n){return e.call(r(t),r(o),r(n))}}(function(){var n,a,i="toJSValue,isEven,isOdd,sign,isZero,isNegative,abs,isUnit,square,negate,isPositive,toString,next,prev,log".split(","),s="compare,remainder,divRem,subtract,add,quotient,divide,multiply,pow,compareAbs".split(","),u=["modPow"];for(n=0;n<i.length;n++)a=i[n],r[a]=e(r.prototype[a]);for(n=0;n<s.length;n++)a=s[n],r[a]=t(r.prototype[a]);for(n=0;n<u.length;n++)a=u[n],r[a]=o(r.prototype[a]);r.exp10=function(e,t){return r(e).exp10(t)}})()}(),e.BigInteger=r})(t)},9:function(e,t){},b722:function(e,t,r){"use strict";var o=r("1c8b"),n=r("d890"),a=r("1c2e9"),i=r("403f"),s="ArrayBuffer",u=a[s],l=n[s];o({global:!0,forced:l!==u},{ArrayBuffer:u}),i(s)},b7cd:function(e,t,r){"use strict";const o=r("5c5c").BigInteger;e.exports={coinUnitPlaces:12,txMinConfirms:10,coinSymbol:"XMR",openAliasPrefix:"xmr",coinName:"Monero",coinUriPrefix:"monero:",addressPrefix:18,integratedAddressPrefix:19,feePerKB_JSBigInt:new o("2000000000"),dustThreshold:new o("10000000000"),maxBlockNumber:5e8,avgBlockTime:60}},c934:function(e,t,r){(function(e){var t=function(){"use strict";var e={Utf8Encode:function(e){return unescape(encodeURIComponent(e))},run:function(t){var r=new e.Type;return r.processString(t),r.checksum()},table:[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],Type:function(){return this.rem_=4294967295,this.checksum=function(){return(4294967295^this.rem_)>>>0},this.processString=function(t){t=e.Utf8Encode(t);for(var r=0;r<t.length;r++){var o=(t.charCodeAt(r)^this.rem_)>>>0&255;this.rem_=(this.rem_>>>8^e.table[o])>>>0}},this}};return e}();e.crc32=t})(t)},d4ee:function(e,t,r){"use strict";const o=r("b7cd"),n=r("52df").cnUtil,a=n(o);e.exports=a},d72d:function(e,t,r){(function(r){var o,n,a;(function(r,i){n=[],o=i,a="function"===typeof o?o.apply(t,n):o,void 0===a||(e.exports=a)})(0,(function(){"use strict";function t(e,t){return"undefined"==typeof t?t={autoBom:!1}:"object"!=typeof t&&(console.warn("Deprecated: Expected third argument to be a object"),t={autoBom:!t}),t.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob(["\ufeff",e],{type:e.type}):e}function o(e,t,r){var o=new XMLHttpRequest;o.open("GET",e),o.responseType="blob",o.onload=function(){s(o.response,t,r)},o.onerror=function(){console.error("could not download file")},o.send()}function n(e){var t=new XMLHttpRequest;return t.open("HEAD",e,!1),t.send(),200<=t.status&&299>=t.status}function a(e){try{e.dispatchEvent(new MouseEvent("click"))}catch(o){var t=document.createEvent("MouseEvents");t.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),e.dispatchEvent(t)}}var i="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof r&&r.global===r?r:void 0,s=i.saveAs||("object"!=typeof window||window!==i?function(){}:"download"in HTMLAnchorElement.prototype?function(e,t,r){var s=i.URL||i.webkitURL,u=document.createElement("a");t=t||e.name||"download",u.download=t,u.rel="noopener","string"==typeof e?(u.href=e,u.origin===location.origin?a(u):n(u.href)?o(e,t,r):a(u,u.target="_blank")):(u.href=s.createObjectURL(e),setTimeout((function(){s.revokeObjectURL(u.href)}),4e4),setTimeout((function(){a(u)}),0))}:"msSaveOrOpenBlob"in navigator?function(e,r,i){if(r=r||e.name||"download","string"!=typeof e)navigator.msSaveOrOpenBlob(t(e,i),r);else if(n(e))o(e,r,i);else{var s=document.createElement("a");s.href=e,s.target="_blank",setTimeout((function(){a(s)}))}}:function(e,t,r,n){if(n=n||open("","_blank"),n&&(n.document.title=n.document.body.innerText="downloading..."),"string"==typeof e)return o(e,t,r);var a="application/octet-stream"===e.type,s=/constructor/i.test(i.HTMLElement)||i.safari,u=/CriOS\/[\d]+/.test(navigator.userAgent);if((u||a&&s)&&"object"==typeof FileReader){var l=new FileReader;l.onloadend=function(){var e=l.result;e=u?e:e.replace(/^data:[^;]*;/,"data:attachment/file;"),n?n.location.href=e:location=e,n=null},l.readAsDataURL(e)}else{var c=i.URL||i.webkitURL,d=c.createObjectURL(e);n?n.location=d:location.href=d,n=null,setTimeout((function(){c.revokeObjectURL(d)}),4e4)}});i.saveAs=s.saveAs=s,e.exports=s}))}).call(this,r("2409"))},dc84:function(e,t,r){"use strict";const o=r("3fb7"),n=r("d4ee"),a=(r("b7cd"),{}),i=Object.keys(o.mn_words);for(let p of i)a[p]=p;function s(e){const t=e.split(" ");if(0==t.length)throw"Invalid mnemonic";var r=null;for(let a of t){var n=null;for(let e of i){if("electrum"===e)continue;const t=o.mn_words[e].words;if(-1!==t.indexOf(a)){n=e;break}}if(null===n)throw"Unrecognized mnemonic language";if(null===r)r=n;else if(n!==r)throw"Ambiguous mnemonic language"}if(null===r)throw"Unrecognized mnemonic language";return r}t.WordsetNamesByWordsetName=a,t.AllWordsetNames=i,t.WordsetNameAccordingToMnemonicString=s;const u={English:"english",Japanese:"japanese",Spanish:"spanish",Portuguese:"portuguese"};function l(e){const t=n.random_scalar(),r=o.mn_encode(t,e),a=n.create_address(t);return{seed:t,mnemonicString:r,keys:a}}function c(e,t){const r=o.mn_encode(e,t);return r}function d(e,t){e=e.toLowerCase()||"";try{var r=null,a=null;switch(t){case"english":try{r=o.mn_decode(e)}catch(i){try{r=o.mn_decode(e,"electrum")}catch(s){throw i}}break;default:r=o.mn_decode(e,t);break}return null===r?{err_str:"Unable to derive seed",seed:null,keys:null}:(a=n.create_address(r),null===a?{err_str:"Unable to derive keys from seed",seed:r,keys:null}:{err_str:null,seed:r,keys:a})}catch(i){return console.error("Invalid mnemonic!"),{err_str:"string"===typeof i?i:""+i,seed:null,keys:null}}}function f(e,t,r){const o=d(e,t),n=o.err_str?new Error(o.err_str):null,a=o.seed,i=o.keys;r(n,a,i)}function h(e,t,r,o,a){var i,s,u,l="undefined"!==typeof r&&null!=r&&""!=r?r:null,c=null==l;if(!t||64!==t.length||!c&&64!==l.length)return{err_str:"invalid secret key length"};if(!n.valid_hex(t)||!c&&!n.valid_hex(l))return{err_str:"invalid hex formatting"};try{i=n.decode_address(e)}catch(p){return{err_str:"invalid address"}}try{s=n.sec_key_to_pub(t)}catch(p){return{err_str:"invalid view key"}}if(64===l.length)try{u=n.sec_key_to_pub(l)}catch(p){return{err_str:"invalid spend key"}}if(i.view!==s)return{err_str:"invalid view key"};if(!c&&i.spend!==u)return{err_str:"invalid spend key"};const d={view:t,spend:l};var f=null;if("undefined"!==typeof o&&o&&0!=o.length){var h;try{h=n.create_address(o)}catch(p){return{err_str:"invalid seed"}}if(h.view.sec!==t||h.spend.sec!==l||h.public_addr!==e)return{err_str:"invalid seed"};f=o}const m={err_str:null,address:e,account_seed:""!==f?f:null,public_keys:i,private_keys:d,isInViewOnlyMode:c};return m}function m(e,t,r,o,n,a){const i=h(e,t,r,o,n);a(i.err_str?new Error(i.err_str):null,i.address,i.account_seed,i.public_keys,i.private_keys,i.isInViewOnlyMode)}t.MnemonicWordsetNamesByAppLocaleNames=u,t.DefaultWalletMnemonicWordsetName=u.English,t.NewlyCreatedWallet=l,t.MnemonicStringFromSeed=c,t.SeedAndKeysFromMnemonic_sync=d,t.SeedAndKeysFromMnemonic=f,t.VerifiedComponentsForLogIn_sync=h,t.VerifiedComponentsForLogIn=m},f09e:function(e,t,r){(function(e){"use strict";var t=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},o=function(){throw new Error("no PRNG")},n=(new Uint8Array(16),new Uint8Array(32));n[0]=9;var a=t(),i=t([1]),s=(t([56129,1]),t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995])),u=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),l=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),c=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),d=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function f(e,t,r,o,n){var a,i=0;for(a=0;a<n;a++)i|=e[t+a]^r[o+a];return(1&i-1>>>8)-1}function h(e,t,r,o){return f(e,t,r,o,32)}function m(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]}function p(e){var t,r,o=1;for(t=0;t<16;t++)r=e[t]+o+65535,o=Math.floor(r/65536),e[t]=r-65536*o;e[0]+=o-1+37*(o-1)}function g(e,t,r){for(var o,n=~(r-1),a=0;a<16;a++)o=n&(e[a]^t[a]),e[a]^=o,t[a]^=o}function _(e,r){var o,n,a,i=t(),s=t();for(o=0;o<16;o++)s[o]=r[o];for(p(s),p(s),p(s),n=0;n<2;n++){for(i[0]=s[0]-65517,o=1;o<15;o++)i[o]=s[o]-65535-(i[o-1]>>16&1),i[o-1]&=65535;i[15]=s[15]-32767-(i[14]>>16&1),a=i[15]>>16&1,i[14]&=65535,g(s,i,1-a)}for(o=0;o<16;o++)e[2*o]=255&s[o],e[2*o+1]=s[o]>>8}function v(e,t){var r=new Uint8Array(32),o=new Uint8Array(32);return _(r,e),_(o,t),h(r,0,o,0)}function b(e){var t=new Uint8Array(32);return _(t,e),1&t[0]}function w(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function y(e,t,r){for(var o=0;o<16;o++)e[o]=t[o]+r[o]}function E(e,t,r){for(var o=0;o<16;o++)e[o]=t[o]-r[o]}function S(e,t,r){var o,n,a=0,i=0,s=0,u=0,l=0,c=0,d=0,f=0,h=0,m=0,p=0,g=0,_=0,v=0,b=0,w=0,y=0,E=0,S=0,A=0,M=0,k=0,F=0,O=0,R=0,T=0,N=0,P=0,D=0,x=0,L=0,I=r[0],C=r[1],z=r[2],B=r[3],j=r[4],U=r[5],H=r[6],q=r[7],V=r[8],Y=r[9],W=r[10],G=r[11],X=r[12],K=r[13],Z=r[14],$=r[15];o=t[0],a+=o*I,i+=o*C,s+=o*z,u+=o*B,l+=o*j,c+=o*U,d+=o*H,f+=o*q,h+=o*V,m+=o*Y,p+=o*W,g+=o*G,_+=o*X,v+=o*K,b+=o*Z,w+=o*$,o=t[1],i+=o*I,s+=o*C,u+=o*z,l+=o*B,c+=o*j,d+=o*U,f+=o*H,h+=o*q,m+=o*V,p+=o*Y,g+=o*W,_+=o*G,v+=o*X,b+=o*K,w+=o*Z,y+=o*$,o=t[2],s+=o*I,u+=o*C,l+=o*z,c+=o*B,d+=o*j,f+=o*U,h+=o*H,m+=o*q,p+=o*V,g+=o*Y,_+=o*W,v+=o*G,b+=o*X,w+=o*K,y+=o*Z,E+=o*$,o=t[3],u+=o*I,l+=o*C,c+=o*z,d+=o*B,f+=o*j,h+=o*U,m+=o*H,p+=o*q,g+=o*V,_+=o*Y,v+=o*W,b+=o*G,w+=o*X,y+=o*K,E+=o*Z,S+=o*$,o=t[4],l+=o*I,c+=o*C,d+=o*z,f+=o*B,h+=o*j,m+=o*U,p+=o*H,g+=o*q,_+=o*V,v+=o*Y,b+=o*W,w+=o*G,y+=o*X,E+=o*K,S+=o*Z,A+=o*$,o=t[5],c+=o*I,d+=o*C,f+=o*z,h+=o*B,m+=o*j,p+=o*U,g+=o*H,_+=o*q,v+=o*V,b+=o*Y,w+=o*W,y+=o*G,E+=o*X,S+=o*K,A+=o*Z,M+=o*$,o=t[6],d+=o*I,f+=o*C,h+=o*z,m+=o*B,p+=o*j,g+=o*U,_+=o*H,v+=o*q,b+=o*V,w+=o*Y,y+=o*W,E+=o*G,S+=o*X,A+=o*K,M+=o*Z,k+=o*$,o=t[7],f+=o*I,h+=o*C,m+=o*z,p+=o*B,g+=o*j,_+=o*U,v+=o*H,b+=o*q,w+=o*V,y+=o*Y,E+=o*W,S+=o*G,A+=o*X,M+=o*K,k+=o*Z,F+=o*$,o=t[8],h+=o*I,m+=o*C,p+=o*z,g+=o*B,_+=o*j,v+=o*U,b+=o*H,w+=o*q,y+=o*V,E+=o*Y,S+=o*W,A+=o*G,M+=o*X,k+=o*K,F+=o*Z,O+=o*$,o=t[9],m+=o*I,p+=o*C,g+=o*z,_+=o*B,v+=o*j,b+=o*U,w+=o*H,y+=o*q,E+=o*V,S+=o*Y,A+=o*W,M+=o*G,k+=o*X,F+=o*K,O+=o*Z,R+=o*$,o=t[10],p+=o*I,g+=o*C,_+=o*z,v+=o*B,b+=o*j,w+=o*U,y+=o*H,E+=o*q,S+=o*V,A+=o*Y,M+=o*W,k+=o*G,F+=o*X,O+=o*K,R+=o*Z,T+=o*$,o=t[11],g+=o*I,_+=o*C,v+=o*z,b+=o*B,w+=o*j,y+=o*U,E+=o*H,S+=o*q,A+=o*V,M+=o*Y,k+=o*W,F+=o*G,O+=o*X,R+=o*K,T+=o*Z,N+=o*$,o=t[12],_+=o*I,v+=o*C,b+=o*z,w+=o*B,y+=o*j,E+=o*U,S+=o*H,A+=o*q,M+=o*V,k+=o*Y,F+=o*W,O+=o*G,R+=o*X,T+=o*K,N+=o*Z,P+=o*$,o=t[13],v+=o*I,b+=o*C,w+=o*z,y+=o*B,E+=o*j,S+=o*U,A+=o*H,M+=o*q,k+=o*V,F+=o*Y,O+=o*W,R+=o*G,T+=o*X,N+=o*K,P+=o*Z,D+=o*$,o=t[14],b+=o*I,w+=o*C,y+=o*z,E+=o*B,S+=o*j,A+=o*U,M+=o*H,k+=o*q,F+=o*V,O+=o*Y,R+=o*W,T+=o*G,N+=o*X,P+=o*K,D+=o*Z,x+=o*$,o=t[15],w+=o*I,y+=o*C,E+=o*z,S+=o*B,A+=o*j,M+=o*U,k+=o*H,F+=o*q,O+=o*V,R+=o*Y,T+=o*W,N+=o*G,P+=o*X,D+=o*K,x+=o*Z,L+=o*$,a+=38*y,i+=38*E,s+=38*S,u+=38*A,l+=38*M,c+=38*k,d+=38*F,f+=38*O,h+=38*R,m+=38*T,p+=38*N,g+=38*P,_+=38*D,v+=38*x,b+=38*L,n=1,o=a+n+65535,n=Math.floor(o/65536),a=o-65536*n,o=i+n+65535,n=Math.floor(o/65536),i=o-65536*n,o=s+n+65535,n=Math.floor(o/65536),s=o-65536*n,o=u+n+65535,n=Math.floor(o/65536),u=o-65536*n,o=l+n+65535,n=Math.floor(o/65536),l=o-65536*n,o=c+n+65535,n=Math.floor(o/65536),c=o-65536*n,o=d+n+65535,n=Math.floor(o/65536),d=o-65536*n,o=f+n+65535,n=Math.floor(o/65536),f=o-65536*n,o=h+n+65535,n=Math.floor(o/65536),h=o-65536*n,o=m+n+65535,n=Math.floor(o/65536),m=o-65536*n,o=p+n+65535,n=Math.floor(o/65536),p=o-65536*n,o=g+n+65535,n=Math.floor(o/65536),g=o-65536*n,o=_+n+65535,n=Math.floor(o/65536),_=o-65536*n,o=v+n+65535,n=Math.floor(o/65536),v=o-65536*n,o=b+n+65535,n=Math.floor(o/65536),b=o-65536*n,o=w+n+65535,n=Math.floor(o/65536),w=o-65536*n,a+=n-1+37*(n-1),n=1,o=a+n+65535,n=Math.floor(o/65536),a=o-65536*n,o=i+n+65535,n=Math.floor(o/65536),i=o-65536*n,o=s+n+65535,n=Math.floor(o/65536),s=o-65536*n,o=u+n+65535,n=Math.floor(o/65536),u=o-65536*n,o=l+n+65535,n=Math.floor(o/65536),l=o-65536*n,o=c+n+65535,n=Math.floor(o/65536),c=o-65536*n,o=d+n+65535,n=Math.floor(o/65536),d=o-65536*n,o=f+n+65535,n=Math.floor(o/65536),f=o-65536*n,o=h+n+65535,n=Math.floor(o/65536),h=o-65536*n,o=m+n+65535,n=Math.floor(o/65536),m=o-65536*n,o=p+n+65535,n=Math.floor(o/65536),p=o-65536*n,o=g+n+65535,n=Math.floor(o/65536),g=o-65536*n,o=_+n+65535,n=Math.floor(o/65536),_=o-65536*n,o=v+n+65535,n=Math.floor(o/65536),v=o-65536*n,o=b+n+65535,n=Math.floor(o/65536),b=o-65536*n,o=w+n+65535,n=Math.floor(o/65536),w=o-65536*n,a+=n-1+37*(n-1),e[0]=a,e[1]=i,e[2]=s,e[3]=u,e[4]=l,e[5]=c,e[6]=d,e[7]=f,e[8]=h,e[9]=m,e[10]=p,e[11]=g,e[12]=_,e[13]=v,e[14]=b,e[15]=w}function A(e,t){S(e,t,t)}function M(e,r){var o,n=t();for(o=0;o<16;o++)n[o]=r[o];for(o=253;o>=0;o--)A(n,n),2!==o&&4!==o&&S(n,n,r);for(o=0;o<16;o++)e[o]=n[o]}function k(e,r){var o,n=t();for(o=0;o<16;o++)n[o]=r[o];for(o=250;o>=0;o--)A(n,n),1!==o&&S(n,n,r);for(o=0;o<16;o++)e[o]=n[o]}function F(e,r){var o=t(),n=t(),a=t(),i=t(),s=t(),l=t(),c=t(),d=t(),f=t();E(o,e[1],e[0]),E(f,r[1],r[0]),S(o,o,f),y(n,e[0],e[1]),y(f,r[0],r[1]),S(n,n,f),S(a,e[3],r[3]),S(a,a,u),S(i,e[2],r[2]),y(i,i,i),E(s,n,o),E(l,i,a),y(c,i,a),y(d,n,o),S(e[0],s,l),S(e[1],d,c),S(e[2],c,l),S(e[3],s,d)}function O(e,t,r){var o;for(o=0;o<4;o++)g(e[o],t[o],r)}function R(e,r){var o=t(),n=t(),a=t();M(a,r[2]),S(o,r[0],a),S(n,r[1],a),_(e,n),e[31]^=b(o)<<7}function T(e,t,r){var o,n;for(m(e[0],a),m(e[1],i),m(e[2],i),m(e[3],a),n=255;n>=0;--n)o=r[n/8|0]>>(7&n)&1,O(e,t,o),F(t,e),F(e,e),O(e,t,o)}function N(e,r){var o=[t(),t(),t(),t()];m(o[0],l),m(o[1],c),m(o[2],i),S(o[3],l,c),T(e,o,r)}function P(e){e[31]^=128}function D(e){var r=[t(),t(),t(),t()];N(r,e);var o=new Uint8Array(32);return R(o,r),o}function x(e,r){var o=[t(),t(),t(),t()],n=[t(),t(),t(),t()],a=new Uint8Array(32);if(P(e),0!==z(n,e))throw"non-0 error on point decode";return T(o,n,r),R(a,o),a}function L(e,r,o){var n=[t(),t(),t(),t()],a=[t(),t(),t(),t()],i=[t(),t(),t(),t()],s=new Uint8Array(32);if(P(r),0!==z(n,r))throw"non-0 error on point decode";return T(a,n,e),N(i,o),F(i,a),R(s,i),s}function I(e,r,o,n){var a=[t(),t(),t(),t()],i=[t(),t(),t(),t()],s=[t(),t(),t(),t()],u=[t(),t(),t(),t()],l=new Uint8Array(32);if(P(r),0!==z(a,r))throw"non-0 error on point decode";if(T(u,a,e),P(n),0!==z(i,n))throw"non-0 error on point decode";return T(s,i,o),F(u,s),R(l,u),l}function C(e,r){var o=[t(),t(),t(),t()],n=[t(),t(),t(),t()],a=new Uint8Array(32);if(P(e),P(r),0!==z(o,e))throw"non-0 error on point decode";if(0!==z(n,r))throw"non-0 error on point decode";return F(o,n),R(a,o),a}new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function z(e,r){var o=t(),n=t(),u=t(),l=t(),c=t(),f=t(),h=t();return m(e[2],i),w(e[1],r),A(u,e[1]),S(l,u,s),E(u,u,e[2]),y(l,e[2],l),A(c,l),A(f,c),S(h,f,c),S(o,h,u),S(o,o,l),k(o,o),S(o,o,u),S(o,o,l),S(o,o,l),S(e[0],o,l),A(n,e[0]),S(n,n,l),v(n,u)&&S(e[0],e[0],d),A(n,e[0]),S(n,n,l),v(n,u)?-1:(b(e[0])===r[31]>>7&&E(e[0],a,e[0]),S(e[3],e[0],e[1]),0)}function B(e){for(var t=0;t<e.length;t++)e[t]=0}e.ll={ge_scalarmult_base:D,ge_scalarmult:x,ge_double_scalarmult_base_vartime:L,ge_add:C,ge_double_scalarmult_postcomp_vartime:I},e.randomBytes=function(e){var t=new Uint8Array(e);return o(t,e),t},e.setPRNG=function(e){o=e},function(){var t="undefined"!==typeof self?self.crypto||self.msCrypto:null;if(t&&t.getRandomValues){var o=65536;e.setPRNG((function(e,r){var n,a=new Uint8Array(r);for(n=0;n<r;n+=o)t.getRandomValues(a.subarray(n,n+Math.min(r-n,o)));for(n=0;n<r;n++)e[n]=a[n];B(a)}))}else t=r("7b04"),t&&t.randomBytes&&e.setPRNG((function(e,r){var o,n=t.randomBytes(r);for(o=0;o<r;o++)e[o]=n[o];B(n)}))}()})(e.exports?e.exports:self.nacl=self.nacl||{})},f1ac:function(e,t){}}]);