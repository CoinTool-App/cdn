(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-ad4baa00","chunk-552cf32c"],{"003b":function(e){e.exports=JSON.parse('{"name":"@polkadot/wasm-crypto","version":"3.1.1"}')},"01be":function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));const n=64,i=32;function a(e){return{publicKey:e.slice(n,n+i),secretKey:e.slice(0,n)}}},"042e":function(e,t,r){"use strict";r.r(t),r.d(t,"signatureVerify",(function(){return b}));var n=r("fe84"),i=r("ad81"),a=r("5a0a"),o=r("2343"),c=r("361a");const s=e=>(t,r,n)=>Object(c["a"])(t,r,n,e),u=[["ecdsa",s("blake2")],["ethereum",s("keccak")]],f=[["ed25519",a["a"]],["sr25519",o["a"]],...u],l=["ed25519","sr25519","ecdsa"];function d(e,{message:t,publicKey:r,signature:n},i=f){return e.isValid=i.some(([i,a])=>{try{if(a(t,n,r))return e.crypto=i,!0}catch(o){}return!1}),e}function h(e,{message:t,publicKey:r,signature:i}){Object(n["assert"])([0,1,2].includes(i[0]),"Unknown crypto type, expected signature prefix [0..2], found "+i[0]);const c=l[i[0]]||"none";e.crypto=c;try{e.isValid={ecdsa:()=>d(e,{message:t,publicKey:r,signature:i.subarray(1)},u).isValid,ed25519:()=>Object(a["a"])(t,i.subarray(1),r),none:()=>{throw Error("no verify for `none` crypto type")},sr25519:()=>Object(o["a"])(t,i.subarray(1),r)}[c]()}catch(s){}return e}function b(e,t,r){const a=Object(n["u8aToU8a"])(t);Object(n["assert"])([64,65,66].includes(a.length),"Invalid signature length, expected [64..66] bytes, found "+a.length);const o={crypto:"none",isValid:!1},c=Object(i["a"])(r),s={message:e,publicKey:c,signature:a};return[0,1,2].includes(a[0])&&[65,66].includes(a.length)?h(o,s):d(o,s)}},"07f3":function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=r("fe84");function i(e){return Object(n["assert"])(e,"Expected non-null, non-empty base64 input"),Object(n["assert"])(/^(?:[A-Za-z0-9+/]{2}[A-Za-z0-9+/]{2})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e),"Invalid base64 encoding"),!0}},"08b4":function(e,t,r){"use strict";r.r(t),r.d(t,"stringCamelCase",(function(){return a})),r.d(t,"stringLowerFirst",(function(){return o})),r.d(t,"stringShorten",(function(){return c})),r.d(t,"stringToHex",(function(){return f})),r.d(t,"stringToU8a",(function(){return u["a"]})),r.d(t,"stringUpperFirst",(function(){return l}));var n=r("9cf7"),i=r.n(n);function a(e){return i()(e.toString())}function o(e){return e?e.charAt(0).toLowerCase()+e.slice(1):""}function c(e,t=6){return e.length<=2+2*t?e.toString():`${e.substr(0,t)}â€¦${e.slice(-t)}`}var s=r("6f26"),u=r("7344");function f(e){return Object(s["a"])(Object(u["a"])(e))}function l(e){return e?e.charAt(0).toUpperCase()+e.slice(1):""}},"0df6f":function(e,t,r){"use strict";function n(e,t){return e instanceof t}r.d(t,"a",(function(){return n}))},"0ef0":function(e,t,r){"use strict";r.d(t,"a",(function(){return c}));var n=r("c8f6"),i=r.n(n),a=r("fe84"),o=r("1299");function c(e,t=256,r=null,n=!1){const c=Math.ceil(t/8);return Object(o["isReady"])()&&!n?Object(o["blake2b"])(Object(a["u8aToU8a"])(e),Object(a["u8aToU8a"])(r),c):i.a.blake2b(Object(a["u8aToU8a"])(e),r,c)}},"0f73":function(e,t,r){"use strict";r.r(t),r.d(t,"memoize",(function(){return c}));var n=r("4dd4"),i=r("3009");function a(){return"none"}function o(e){return JSON.stringify(e,(e,t)=>Object(n["a"])(t)?t.toString():t)}function c(e,{getInstanceId:t=a}={}){const r={},n=(...n)=>{const a=o(n),c=t();return r[c]||(r[c]={}),Object(i["a"])(r[c][a])&&(r[c][a]=e(...n)),r[c][a]};return n.unmemoize=(...e)=>{const n=o(e),a=t();r[a]&&!Object(i["a"])(r[a][n])&&delete r[a][n]},n}},"0fe3":function(e,t,r){e.exports={h32:r("9dbf"),h64:r("89fe")}},1055:function(e,t,r){"use strict";r.d(t,"a",(function(){return n})),r.d(t,"b",(function(){return i}));const n="abcdefghijklmnopqrstuvwxyz234567",i=5},1209:function(e,t,r){"use strict";r.r(t),r.d(t,"unzlibSync",(function(){return k}));const n=Uint8Array,i=Uint16Array,a=Uint32Array,o=new n([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),c=new n([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),s=new n([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),u=(e,t)=>{const r=new i(31);for(let i=0;i<31;++i)r[i]=t+=1<<e[i-1];const n=new a(r[30]);for(let i=1;i<30;++i)for(let e=r[i];e<r[i+1];++e)n[e]=e-r[i]<<5|i;return[r,n]},[f,l]=u(c,2);f[28]=258,l[258]=28;const[d]=u(s,0),h=new i(32768);for(let H=0;H<32768;++H){let e=(43690&H)>>>1|(21845&H)<<1;e=(52428&e)>>>2|(13107&e)<<2,e=(61680&e)>>>4|(3855&e)<<4,h[H]=((65280&e)>>>8|(255&e)<<8)>>>1}const b=(e,t,r)=>{const n=e.length;let a=0;const o=new i(t);for(;a<n;++a)++o[e[a]-1];const c=new i(t);for(a=0;a<t;++a)c[a]=c[a-1]+o[a-1]<<1;let s;if(r){s=new i(1<<t);const r=15-t;for(a=0;a<n;++a)if(e[a]){const n=a<<4|e[a],i=t-e[a];let o=c[e[a]-1]++<<i;for(const e=o|(1<<i)-1;o<=e;++o)s[h[o]>>>r]=n}}else for(s=new i(n),a=0;a<n;++a)s[a]=h[c[e[a]-1]++]>>>15-e[a];return s},p=new n(288);for(let H=0;H<144;++H)p[H]=8;for(let H=144;H<256;++H)p[H]=9;for(let H=256;H<280;++H)p[H]=7;for(let H=280;H<288;++H)p[H]=8;const y=new n(32);for(let H=0;H<32;++H)y[H]=5;const v=b(p,9,1),m=b(y,5,1),w=(e,t,r)=>{const n=t>>>3;return(e[n]|e[n+1]<<8)>>>(7&t)&r},O=(e,t)=>{const r=t>>>3;return(e[r]|e[r+1]<<8|e[r+2]<<16)>>>(7&t)},g=e=>(e>>>3)+(7&e&&1),j=(e,t,r)=>{(null==t||t<0)&&(t=0),(null==r||r>e.length)&&(r=e.length);const o=new(e instanceof i?i:e instanceof a?a:n)(r-t);return o.set(e.subarray(t,r)),o},P=e=>{let t=e[0];for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r]);return t},x=(e,t,r)=>{const i=!r||r.i;r||(r={});const a=e.length,u=!t||!i;t||(t=new n(3*a));const l=e=>{let r=t.length;if(e>r){const i=new n(Math.max(r<<1,e));i.set(t),t=i}};let h=r.f||0,p=r.p||0,y=r.b||0,x=r.l,z=r.d,k=r.m,H=r.n;if(h&&!x)return t;const N=a<<3;do{if(!x){r.f=h=w(e,p,1);const c=w(e,p+1,3);if(p+=3,!c){const n=g(p)+4,o=e[n-4]|e[n-3]<<8,c=n+o;if(c>a){if(i)throw"unexpected EOF";break}u&&l(y+o),t.set(e.subarray(n,c),y),r.b=y+=o,r.p=p=c<<3;continue}if(1==c)x=v,z=m,k=9,H=5;else{if(2!=c)throw"invalid block type";{const t=w(e,p,31)+257,r=w(e,p+10,15)+4,a=t+w(e,p+5,31)+1;p+=14;const c=new n(a),s=new n(19);for(let n=0;n<r;++n)s[o[n]]=w(e,p+3*n,7);p+=3*r;const u=P(s),f=(1<<u)-1;if(!i&&p+a*(u+7)>N)break;const l=b(s,u,1);for(let n=0;n<a;){const t=l[w(e,p,f)];p+=15&t;const r=t>>>4;if(r<16)c[n++]=r;else{let t=0,i=0;16==r?(i=3+w(e,p,3),p+=2,t=c[n-1]):17==r?(i=3+w(e,p,7),p+=3):18==r&&(i=11+w(e,p,127),p+=7);while(i--)c[n++]=t}}const d=c.subarray(0,t),h=c.subarray(t);k=P(d),H=P(h),x=b(d,k,1),z=b(h,H,1)}}if(p>N)throw"unexpected EOF"}u&&l(y+131072);const j=(1<<k)-1,T=(1<<H)-1,X=k+H+18;while(i||p+X<N){const r=x[O(e,p)&j],n=r>>>4;if(p+=15&r,p>N)throw"unexpected EOF";if(!r)throw"invalid length/literal";if(n<256)t[y++]=n;else{if(256==n){x=void 0;break}{let r=n-254;if(n>264){const t=n-257,i=c[t];r=w(e,p,(1<<i)-1)+f[t],p+=i}const i=z[O(e,p)&T],a=i>>>4;if(!i)throw"invalid distance";p+=15&i;let o=d[a];if(a>3){const t=s[a];o+=O(e,p)&(1<<t)-1,p+=t}if(p>N)throw"unexpected EOF";u&&l(y+131072);const h=y+r;for(;y<h;y+=4)t[y]=t[y-o],t[y+1]=t[y+1-o],t[y+2]=t[y+2-o],t[y+3]=t[y+3-o];y=h}}}r.l=x,r.p=p,r.b=y,x&&(h=1,r.m=k,r.d=z,r.n=H)}while(!h);return y==t.length?t:j(t,0,y)},z=e=>{if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"};function k(e,t){return x((z(e),e.subarray(2,-4)),t)}},1299:function(e,t,r){"use strict";var n=r("dbce");Object.defineProperty(t,"__esModule",{value:!0}),t.isReady=T,t.waitReady=X,t.twox=t.sha512=t.scrypt=t.pbkdf2=t.keccak256=t.blake2b=t.sr25519Verify=t.sr25519Sign=t.sr25519KeypairFromSeed=t.sr25519DerivePublicSoft=t.sr25519DeriveKeypairSoft=t.sr25519DeriveKeypairHard=t.ed25519Verify=t.ed25519Sign=t.ed25519KeypairFromSeed=t.bip39Validate=t.bip39ToSeed=t.bip39ToMiniSecret=t.bip39ToEntropy=t.bip39Generate=void 0,r("c7fd");var i=r("c686"),a=r("ed7f"),o=r("ec1b"),c=n(r("49aba"));const s=(0,o.initWasm)(a.wasmBytes,i.asmJsInit,c).catch(()=>null),u=(0,o.withWasm)(e=>t=>(e.ext_bip39_generate(8,t),(0,o.resultString)()));t.bip39Generate=u;const f=(0,o.withWasm)(e=>t=>{const[r,n]=(0,o.allocString)(t);return e.ext_bip39_to_entropy(8,r,n),(0,o.resultU8a)()});t.bip39ToEntropy=f;const l=(0,o.withWasm)(e=>(t,r)=>{const[n,i]=(0,o.allocString)(t),[a,c]=(0,o.allocString)(r);return e.ext_bip39_to_mini_secret(8,n,i,a,c),(0,o.resultU8a)()});t.bip39ToMiniSecret=l;const d=(0,o.withWasm)(e=>(t,r)=>{const[n,i]=(0,o.allocString)(t),[a,c]=(0,o.allocString)(r);return e.ext_bip39_to_seed(8,n,i,a,c),(0,o.resultU8a)()});t.bip39ToSeed=d;const h=(0,o.withWasm)(e=>t=>{const[r,n]=(0,o.allocString)(t),i=e.ext_bip39_validate(r,n);return 0!==i});t.bip39Validate=h;const b=(0,o.withWasm)(e=>t=>{const[r,n]=(0,o.allocU8a)(t);return e.ext_ed_from_seed(8,r,n),(0,o.resultU8a)()});t.ed25519KeypairFromSeed=b;const p=(0,o.withWasm)(e=>(t,r,n)=>{const[i,a]=(0,o.allocU8a)(t),[c,s]=(0,o.allocU8a)(r),[u,f]=(0,o.allocU8a)(n);return e.ext_ed_sign(8,i,a,c,s,u,f),(0,o.resultU8a)()});t.ed25519Sign=p;const y=(0,o.withWasm)(e=>(t,r,n)=>{const[i,a]=(0,o.allocU8a)(t),[c,s]=(0,o.allocU8a)(r),[u,f]=(0,o.allocU8a)(n),l=e.ext_ed_verify(i,a,c,s,u,f);return 0!==l});t.ed25519Verify=y;const v=(0,o.withWasm)(e=>(t,r)=>{const[n,i]=(0,o.allocU8a)(t),[a,c]=(0,o.allocU8a)(r);return e.ext_sr_derive_keypair_hard(8,n,i,a,c),(0,o.resultU8a)()});t.sr25519DeriveKeypairHard=v;const m=(0,o.withWasm)(e=>(t,r)=>{const[n,i]=(0,o.allocU8a)(t),[a,c]=(0,o.allocU8a)(r);return e.ext_sr_derive_keypair_soft(8,n,i,a,c),(0,o.resultU8a)()});t.sr25519DeriveKeypairSoft=m;const w=(0,o.withWasm)(e=>(t,r)=>{const[n,i]=(0,o.allocU8a)(t),[a,c]=(0,o.allocU8a)(r);return e.ext_sr_derive_public_soft(8,n,i,a,c),(0,o.resultU8a)()});t.sr25519DerivePublicSoft=w;const O=(0,o.withWasm)(e=>t=>{const[r,n]=(0,o.allocU8a)(t);return e.ext_sr_from_seed(8,r,n),(0,o.resultU8a)()});t.sr25519KeypairFromSeed=O;const g=(0,o.withWasm)(e=>(t,r,n)=>{const[i,a]=(0,o.allocU8a)(t),[c,s]=(0,o.allocU8a)(r),[u,f]=(0,o.allocU8a)(n);return e.ext_sr_sign(8,i,a,c,s,u,f),(0,o.resultU8a)()});t.sr25519Sign=g;const j=(0,o.withWasm)(e=>(t,r,n)=>{const[i,a]=(0,o.allocU8a)(t),[c,s]=(0,o.allocU8a)(r),[u,f]=(0,o.allocU8a)(n),l=e.ext_sr_verify(i,a,c,s,u,f);return 0!==l});t.sr25519Verify=j;const P=(0,o.withWasm)(e=>(t,r,n)=>{const[i,a]=(0,o.allocU8a)(t),[c,s]=(0,o.allocU8a)(r);return e.ext_blake2b(8,i,a,c,s,n),(0,o.resultU8a)()});t.blake2b=P;const x=(0,o.withWasm)(e=>t=>{const[r,n]=(0,o.allocU8a)(t);return e.ext_keccak256(8,r,n),(0,o.resultU8a)()});t.keccak256=x;const z=(0,o.withWasm)(e=>(t,r,n)=>{const[i,a]=(0,o.allocU8a)(t),[c,s]=(0,o.allocU8a)(r);return e.ext_pbkdf2(8,i,a,c,s,n),(0,o.resultU8a)()});t.pbkdf2=z;const k=(0,o.withWasm)(e=>(t,r,n,i,a)=>{const[c,s]=(0,o.allocU8a)(t),[u,f]=(0,o.allocU8a)(r);return e.ext_scrypt(8,c,s,u,f,n,i,a),(0,o.resultU8a)()});t.scrypt=k;const H=(0,o.withWasm)(e=>t=>{const[r,n]=(0,o.allocU8a)(t);return e.ext_sha512(8,r,n),(0,o.resultU8a)()});t.sha512=H;const N=(0,o.withWasm)(e=>(t,r)=>{const[n,i]=(0,o.allocU8a)(t);return e.ext_twox(8,n,i,r),(0,o.resultU8a)()});function T(){return!!(0,o.getWasm)()}function X(){return s.then(()=>T())}t.twox=N},13:function(e,t){},14:function(e,t){},"147c":function(e,t,r){"use strict";r.r(t),r.d(t,"ethereumEncode",(function(){return c})),r.d(t,"isEthereumAddress",(function(){return f})),r.d(t,"isEthereumChecksum",(function(){return u}));var n=r("fe84"),i=r("42d8"),a=r("bef3");function o(e){return[33,65].includes(e.length)&&(e=Object(i["a"])(Object(a["a"])(e))),e.slice(-20)}function c(e){if(!e)return"0x";const t=Object(n["u8aToU8a"])(e);Object(n["assert"])([20,32,33,65].includes(t.length),"Invalid address or publicKey passed");const r=Object(n["u8aToHex"])(o(t),-1,!1),a=Object(n["u8aToHex"])(Object(i["a"])(r),-1,!1);let c="";for(let n=0;n<40;n++)c=`${c}${parseInt(a[n],16)>7?r[n].toUpperCase():r[n]}`;return"0x"+c}function s(e,t){return t>7&&e!==e.toUpperCase()||t<=7&&e!==e.toLowerCase()}function u(e){const t=e.replace("0x",""),r=Object(n["u8aToHex"])(Object(i["a"])(t.toLowerCase()),-1,!1);for(let n=0;n<40;n++)if(s(t[n],parseInt(r[n],16)))return!1;return!0}function f(e){return!(!e||42!==e.length||!Object(n["isHex"])(e))&&(!(!/^(0x)?[0-9a-f]{40}$/.test(e)&&!/^(0x)?[0-9A-F]{40}$/.test(e))||u(e))}},"14ec":function(e,t,r){var n=r("8327");function i(e,t,r){var n=e[t]+e[r],i=e[t+1]+e[r+1];n>=4294967296&&i++,e[t]=n,e[t+1]=i}function a(e,t,r,n){var i=e[t]+r;r<0&&(i+=4294967296);var a=e[t+1]+n;i>=4294967296&&a++,e[t]=i,e[t+1]=a}function o(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function c(e,t,r,n,o,c){var s=d[o],u=d[o+1],f=d[c],h=d[c+1];i(l,e,t),a(l,e,s,u);var b=l[n]^l[e],p=l[n+1]^l[e+1];l[n]=p,l[n+1]=b,i(l,r,n),b=l[t]^l[r],p=l[t+1]^l[r+1],l[t]=b>>>24^p<<8,l[t+1]=p>>>24^b<<8,i(l,e,t),a(l,e,f,h),b=l[n]^l[e],p=l[n+1]^l[e+1],l[n]=b>>>16^p<<16,l[n+1]=p>>>16^b<<16,i(l,r,n),b=l[t]^l[r],p=l[t+1]^l[r+1],l[t]=p>>>31^b<<1,l[t+1]=b>>>31^p<<1}var s=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),u=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3],f=new Uint8Array(u.map((function(e){return 2*e}))),l=new Uint32Array(32),d=new Uint32Array(32);function h(e,t){var r=0;for(r=0;r<16;r++)l[r]=e.h[r],l[r+16]=s[r];for(l[24]=l[24]^e.t,l[25]=l[25]^e.t/4294967296,t&&(l[28]=~l[28],l[29]=~l[29]),r=0;r<32;r++)d[r]=o(e.b,4*r);for(r=0;r<12;r++)c(0,8,16,24,f[16*r+0],f[16*r+1]),c(2,10,18,26,f[16*r+2],f[16*r+3]),c(4,12,20,28,f[16*r+4],f[16*r+5]),c(6,14,22,30,f[16*r+6],f[16*r+7]),c(0,10,20,30,f[16*r+8],f[16*r+9]),c(2,12,22,24,f[16*r+10],f[16*r+11]),c(4,14,16,26,f[16*r+12],f[16*r+13]),c(6,8,18,28,f[16*r+14],f[16*r+15]);for(r=0;r<16;r++)e.h[r]=e.h[r]^l[r]^l[r+16]}function b(e,t){if(0===e||e>64)throw new Error("Illegal output length, expected 0 < length <= 64");if(t&&t.length>64)throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");for(var r={b:new Uint8Array(128),h:new Uint32Array(16),t:0,c:0,outlen:e},n=0;n<16;n++)r.h[n]=s[n];var i=t?t.length:0;return r.h[0]^=16842752^i<<8^e,t&&(p(r,t),r.c=128),r}function p(e,t){for(var r=0;r<t.length;r++)128===e.c&&(e.t+=e.c,h(e,!1),e.c=0),e.b[e.c++]=t[r]}function y(e){e.t+=e.c;while(e.c<128)e.b[e.c++]=0;h(e,!0);for(var t=new Uint8Array(e.outlen),r=0;r<e.outlen;r++)t[r]=e.h[r>>2]>>8*(3&r);return t}function v(e,t,r){r=r||64,e=n.normalizeInput(e);var i=b(r,t);return p(i,e),y(i)}function m(e,t,r){var i=v(e,t,r);return n.toHex(i)}e.exports={blake2b:v,blake2bHex:m,blake2bInit:b,blake2bUpdate:p,blake2bFinal:y}},15:function(e,t){},1555:function(e,t,r){t.UINT32=r("f8a0"),t.UINT64=r("fdbb")},1861:function(e,t,r){"use strict";r.r(t),function(e){r.d(t,"format",(function(){return h})),r.d(t,"logger",(function(){return v}));var n=r("6c67"),i=r("3e33"),a=r("71db"),o=r("6b32"),c=r("398c"),s=r("9c1f"),u=r("6f26"),f=r("25a8");const l={debug:"log",error:"error",log:"log",warn:"warn"};function d(e){return e&&Object(c["a"])(e)&&e.constructor===Object?Object.keys(e).reduce((t,r)=>(t[r]=h(e[r]),t),{}):e}function h(e){return Array.isArray(e)?e.map(h):Object(i["a"])(e)?e.toString():Object(s["a"])(e)||Object(a["a"])(e)?Object(u["a"])(Object(f["a"])(e)):d(e)}function b(e,t,r,i=-1){if(1===r.length&&Object(o["a"])(r[0])){const n=r[0]();return b(e,t,Array.isArray(n)?n:[n],i)}console[l[e]](Object(n["a"])(new Date),t,...r.map(h).map(e=>{if(i<=0)return e;const t=""+e;return t.length<i?e:t.substr(0,i)+" ..."}))}function p(){}function y(t){var r,n,i,a;const o=parseInt((null===(r=e)||void 0===r||null===(n=Object({NODE_ENV:"production",VUE_APP_BASE_API:"/prod-api",BASE_URL:"https://cdn.jsdelivr.net/gh/CoinTool-App/cdn/"}))||void 0===n?void 0:n.DEBUG_MAX)||"-1",10);return[((null===(i=e)||void 0===i||null===(a=Object({NODE_ENV:"production",VUE_APP_BASE_API:"/prod-api",BASE_URL:"https://cdn.jsdelivr.net/gh/CoinTool-App/cdn/"}))||void 0===a?void 0:a.DEBUG)||"").toLowerCase().split(",").some(e=>!!e&&("*"===e||t.startsWith(e))),isNaN(o)?-1:o]}function v(e){const t=(e.toUpperCase()+":").padStart(16),[r,n]=y(e.toLowerCase());return{debug:r?(...e)=>b("debug",t,e,n):p,error:(...e)=>b("error",t,e),log:(...e)=>b("log",t,e),noop:p,warn:(...e)=>b("warn",t,e)}}}.call(this,r("4362"))},"18f7":function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("cee80");const i=new n["TextDecoder"]("utf-8");function a(e){return null!==e&&void 0!==e&&e.length?i.decode(e):""}},"1b09":function(e,t,r){"use strict";r.r(t),r.d(t,"numberToHex",(function(){return o})),r.d(t,"numberToU8a",(function(){return s}));var n=r("f98a"),i=r("b1a5"),a=r("3009");function o(e,t=-1){return Object(a["a"])(e)||Object(i["a"])(e)||isNaN(e)?"0x":Object(n["a"])(e.toString(16),t,!0)}var c=r("c9d6");function s(e,t=-1){return Object(a["a"])(e)||Object(i["a"])(e)||isNaN(e)?new Uint8Array:Object(c["a"])(o(e,t))}},"1f28":function(e,t,r){"use strict";(function(e){r.d(t,"c",(function(){return v})),r.d(t,"b",(function(){return m})),r.d(t,"a",(function(){return O})),r.d(t,"d",(function(){return g}));var n=r("7d92"),i=r.n(n),a=r("fe84"),o=r("ee72"),c=r("e67f"),s=r("3bd6");const u="Invalid mnemonic",f="Invalid entropy",l="Invalid mnemonic checksum";function d(e){return(e||"").normalize("NFKD")}function h(e){return parseInt(e,2)}function b(e){return e.map(e=>e.toString(2).padStart(8,"0")).join("")}function p(e){const t=8*e.length,r=t/32,n=i.a.sha256().update(e).digest();return b(Array.from(n)).slice(0,r)}function y(e){return"mnemonic"+(e||"")}function v(t,r){const n=e.from(d(t),"utf8"),i=e.from(y(d(r)),"utf8");return Object(o["a"])(n,i).password}function m(e){var t;const r=d(e).split(" ");Object(a["assert"])(r.length%3===0,u);const n=r.map(e=>{const t=s["a"].indexOf(e);return Object(a["assert"])(-1!==t,u),t.toString(2).padStart(11,"0")}).join(""),i=32*Math.floor(n.length/33),o=n.slice(0,i),c=n.slice(i),b=null===(t=o.match(/(.{1,8})/g))||void 0===t?void 0:t.map(h);Object(a["assert"])(b&&b.length%4===0&&b.length>=16&&b.length<=32,f);const y=Object(a["u8aToU8a"])(b),v=p(y);return Object(a["assert"])(v===c,l),y}function w(e){Object(a["assert"])(e.length%4===0&&e.length>=16&&e.length<=32,f);const t=b(Array.from(e)),r=p(e);return(t+r).match(/(.{1,11})/g).map(e=>s["a"][h(e)]).join(" ")}function O(e){return e=e||128,Object(a["assert"])(e%32===0,f),w(Object(c["a"])(e/8))}function g(e){try{m(e)}catch(t){return!1}return!0}}).call(this,r("1c35").Buffer)},"21a6":function(e,t,r){(function(r){var n,i,a;(function(r,o){i=[],n=o,a="function"===typeof n?n.apply(t,i):n,void 0===a||(e.exports=a)})(0,(function(){"use strict";function t(e,t){return"undefined"==typeof t?t={autoBom:!1}:"object"!=typeof t&&(console.warn("Deprecated: Expected third argument to be a object"),t={autoBom:!t}),t.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob(["\ufeff",e],{type:e.type}):e}function n(e,t,r){var n=new XMLHttpRequest;n.open("GET",e),n.responseType="blob",n.onload=function(){c(n.response,t,r)},n.onerror=function(){console.error("could not download file")},n.send()}function i(e){var t=new XMLHttpRequest;return t.open("HEAD",e,!1),t.send(),200<=t.status&&299>=t.status}function a(e){try{e.dispatchEvent(new MouseEvent("click"))}catch(n){var t=document.createEvent("MouseEvents");t.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),e.dispatchEvent(t)}}var o="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof r&&r.global===r?r:void 0,c=o.saveAs||("object"!=typeof window||window!==o?function(){}:"download"in HTMLAnchorElement.prototype?function(e,t,r){var c=o.URL||o.webkitURL,s=document.createElement("a");t=t||e.name||"download",s.download=t,s.rel="noopener","string"==typeof e?(s.href=e,s.origin===location.origin?a(s):i(s.href)?n(e,t,r):a(s,s.target="_blank")):(s.href=c.createObjectURL(e),setTimeout((function(){c.revokeObjectURL(s.href)}),4e4),setTimeout((function(){a(s)}),0))}:"msSaveOrOpenBlob"in navigator?function(e,r,o){if(r=r||e.name||"download","string"!=typeof e)navigator.msSaveOrOpenBlob(t(e,o),r);else if(i(e))n(e,r,o);else{var c=document.createElement("a");c.href=e,c.target="_blank",setTimeout((function(){a(c)}))}}:function(e,t,r,i){if(i=i||open("","_blank"),i&&(i.document.title=i.document.body.innerText="downloading..."),"string"==typeof e)return n(e,t,r);var a="application/octet-stream"===e.type,c=/constructor/i.test(o.HTMLElement)||o.safari,s=/CriOS\/[\d]+/.test(navigator.userAgent);if((s||a&&c)&&"object"==typeof FileReader){var u=new FileReader;u.onloadend=function(){var e=u.result;e=s?e:e.replace(/^data:[^;]*;/,"data:attachment/file;"),i?i.location.href=e:location=e,i=null},u.readAsDataURL(e)}else{var f=o.URL||o.webkitURL,l=f.createObjectURL(e);i?i.location=l:location.href=l,i=null,setTimeout((function(){f.revokeObjectURL(l)}),4e4)}});o.saveAs=c.saveAs=c,e.exports=c}))}).call(this,r("c8ba"))},2343:function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("fe84"),i=r("1299");function a(e,t,r){const a=Object(n["u8aToU8a"])(e),o=Object(n["u8aToU8a"])(r),c=Object(n["u8aToU8a"])(t);return Object(n["assert"])(32===o.length,`Invalid publicKey, received ${o.length} bytes, expected 32`),Object(n["assert"])(64===c.length,`Invalid signature, received ${c.length} bytes, expected 64`),Object(i["sr25519Verify"])(c,a,o)}},25:function(e,t){},"25a8":function(e,t,r){"use strict";r.d(t,"a",(function(){return l}));var n=r("2fc7"),i=r("c9d6"),a=r("71db"),o=r("70bc"),c=r("29cb"),s=r("7344");function u(e){return Array.isArray(e)?Uint8Array.from(e):e}function f(e){return Object(o["a"])(e)?Object(i["a"])(e):Object(s["a"])(e)}function l(e){return e?Object(a["a"])(e)?Object(n["a"])(e):Object(c["a"])(e)?f(e):u(e):new Uint8Array}},"29cb":function(e,t,r){"use strict";function n(e){return"string"===typeof e||e instanceof String}r.d(t,"a",(function(){return n}))},"29e3":function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=r("d05c");function i(e){if(e&&Object(n["a"])(e))return e;const t=e&&e.length%2===1?"0":"";return`0x${t}${e||""}`}},"2fc7":function(e,t,r){"use strict";function n(e){return new Uint8Array(e||[])}r.d(t,"a",(function(){return n}))},3009:function(e,t,r){"use strict";function n(e){return"undefined"===typeof e}r.d(t,"a",(function(){return n}))},"304a":function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r("1299"),i=r("01be"),a=r("a858");function o(e,t){return Object(i["a"])(Object(n["sr25519DeriveKeypairSoft"])(Object(a["a"])(e),t))}},3193:function(e,t,r){var n=r("8327");function i(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function a(e,t,r,n,i,a){u[e]=u[e]+u[t]+i,u[n]=o(u[n]^u[e],16),u[r]=u[r]+u[n],u[t]=o(u[t]^u[r],12),u[e]=u[e]+u[t]+a,u[n]=o(u[n]^u[e],8),u[r]=u[r]+u[n],u[t]=o(u[t]^u[r],7)}function o(e,t){return e>>>t^e<<32-t}var c=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),s=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0]),u=new Uint32Array(16),f=new Uint32Array(16);function l(e,t){var r=0;for(r=0;r<8;r++)u[r]=e.h[r],u[r+8]=c[r];for(u[12]^=e.t,u[13]^=e.t/4294967296,t&&(u[14]=~u[14]),r=0;r<16;r++)f[r]=i(e.b,4*r);for(r=0;r<10;r++)a(0,4,8,12,f[s[16*r+0]],f[s[16*r+1]]),a(1,5,9,13,f[s[16*r+2]],f[s[16*r+3]]),a(2,6,10,14,f[s[16*r+4]],f[s[16*r+5]]),a(3,7,11,15,f[s[16*r+6]],f[s[16*r+7]]),a(0,5,10,15,f[s[16*r+8]],f[s[16*r+9]]),a(1,6,11,12,f[s[16*r+10]],f[s[16*r+11]]),a(2,7,8,13,f[s[16*r+12]],f[s[16*r+13]]),a(3,4,9,14,f[s[16*r+14]],f[s[16*r+15]]);for(r=0;r<8;r++)e.h[r]^=u[r]^u[r+8]}function d(e,t){if(!(e>0&&e<=32))throw new Error("Incorrect output length, should be in [1, 32]");var r=t?t.length:0;if(t&&!(r>0&&r<=32))throw new Error("Incorrect key length, should be in [1, 32]");var n={h:new Uint32Array(c),b:new Uint32Array(64),c:0,t:0,outlen:e};return n.h[0]^=16842752^r<<8^e,r>0&&(h(n,t),n.c=64),n}function h(e,t){for(var r=0;r<t.length;r++)64===e.c&&(e.t+=e.c,l(e,!1),e.c=0),e.b[e.c++]=t[r]}function b(e){e.t+=e.c;while(e.c<64)e.b[e.c++]=0;l(e,!0);for(var t=new Uint8Array(e.outlen),r=0;r<e.outlen;r++)t[r]=e.h[r>>2]>>8*(3&r)&255;return t}function p(e,t,r){r=r||32,e=n.normalizeInput(e);var i=d(r,t);return h(i,e),b(i)}function y(e,t,r){var i=p(e,t,r);return n.toHex(i)}e.exports={blake2s:p,blake2sHex:y,blake2sInit:d,blake2sUpdate:h,blake2sFinal:b}},"31c3":function(e,t,r){"use strict";r.d(t,"b",(function(){return o})),r.d(t,"a",(function(){return c}));var n=r("fe84"),i=r("c827");const a={alphabet:i["a"],ipfsChar:"z",type:"base58"};function o({alphabet:e,ipfsChar:t,type:r},i,a){Object(n["assert"])(i,`Expected non-null, non-empty ${r} input`),Object(n["assert"])(!a||i[0]===t,`Expected ${r} to start with '${t}'`);for(let o=a?1:0;o<i.length;o++)Object(n["assert"])(e.includes(i[o]),`Invalid ${r} character "${i[o]}" (0x${i.charCodeAt(o).toString(16)}) at index ${o}`);return!0}function c(e,t){return o(a,e,t)}},"32fd":function(e,t,r){"use strict";r.r(t),r.d(t,"naclDecrypt",(function(){return i})),r.d(t,"naclEncrypt",(function(){return o})),r.d(t,"naclKeypairFromRandom",(function(){return c})),r.d(t,"naclKeypairFromSecret",(function(){return s})),r.d(t,"naclKeypairFromSeed",(function(){return u["a"]})),r.d(t,"naclKeypairFromString",(function(){return d})),r.d(t,"naclSign",(function(){return b})),r.d(t,"naclVerify",(function(){return p["a"]})),r.d(t,"naclBoxKeypairFromSecret",(function(){return y})),r.d(t,"naclOpen",(function(){return v})),r.d(t,"naclSeal",(function(){return m}));var n=r("805c");function i(e,t,r){return n["secretbox"].open(e,t,r)||null}var a=r("e67f");function o(e,t,r=Object(a["a"])(24)){return{encrypted:n["secretbox"](e,r,t),nonce:r}}function c(){return n["sign"].keyPair()}function s(e){return n["sign"].keyPair.fromSecretKey(e)}var u=r("ac7c"),f=r("fe84"),l=r("0ef0");function d(e){return Object(u["a"])(Object(l["a"])(Object(f["stringToU8a"])(e),256))}var h=r("1299");function b(e,{publicKey:t,secretKey:r},i=!1){Object(f["assert"])(r,"Expected a valid secretKey");const a=Object(f["u8aToU8a"])(e);return Object(h["isReady"])()&&!i?Object(h["ed25519Sign"])(t,r.subarray(0,32),a):n["sign"].detached(a,r)}var p=r("5a0a");function y(e){return n["box"].keyPair.fromSecretKey(e.slice(0,32))}function v(e,t,r,i){return n["box"].open(e,t,r,i)||null}function m(e,t,r,i=Object(a["a"])(24)){return{nonce:i,sealed:n["box"](e,i,r,t)}}},3363:function(e,t,r){"use strict";var n=r("4ea4");Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.available=t.all=void 0;var i=n(r("9523"));function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){(0,i.default)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const c=[0,2,42],s=(e,t="This prefix is reserved.")=>({decimals:null,displayName:t,isIgnored:!0,network:"reserved"+e,prefix:e,standardAccount:null,symbols:null,website:null}),u=[{decimals:[10],displayName:"Polkadot Relay Chain",genesisHash:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],icon:"polkadot",network:"polkadot",prefix:0,standardAccount:"*25519",symbols:["DOT"],website:"https://polkadot.network"},s(1),{decimals:[12],displayName:"Kusama Relay Chain",genesisHash:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],icon:"polkadot",network:"kusama",prefix:2,standardAccount:"*25519",symbols:["KSM"],website:"https://kusama.network"},s(3),{decimals:null,displayName:"Katal Chain",network:"katalchain",prefix:4,standardAccount:"*25519",symbols:null,website:null},{decimals:null,displayName:"Plasm Network",genesisHash:["0x3e86364d4b4894021cb2a0390bcf2feb5517d5292f2de2bb9404227e908b0b8b"],network:"plasm",prefix:5,standardAccount:"*25519",symbols:["PLM"],website:null},{decimals:[12],displayName:"Bifrost",network:"bifrost",prefix:6,standardAccount:"*25519",symbols:["BNC"],website:"https://bifrost.finance/"},{decimals:[18],displayName:"Edgeware",genesisHash:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],network:"edgeware",prefix:7,standardAccount:"*25519",symbols:["EDG"],website:"https://edgewa.re"},{decimals:[18],displayName:"Acala Karura Canary",network:"karura",prefix:8,standardAccount:"*25519",symbols:["KAR"],website:"https://acala.network/"},{decimals:[18],displayName:"Laminar Reynolds Canary",network:"reynolds",prefix:9,standardAccount:"*25519",symbols:["REY"],website:"http://laminar.network/"},{decimals:[18],displayName:"Acala",network:"acala",prefix:10,standardAccount:"*25519",symbols:["ACA"],website:"https://acala.network/"},{decimals:[18],displayName:"Laminar",network:"laminar",prefix:11,standardAccount:"*25519",symbols:["LAMI"],website:"http://laminar.network/"},{decimals:null,displayName:"Polymath",network:"polymath",prefix:12,standardAccount:"*25519",symbols:null,website:null},{decimals:null,displayName:"SubstraTEE",network:"substratee",prefix:13,standardAccount:"*25519",symbols:null,website:"https://www.substratee.com"},{decimals:[0],displayName:"Totem",network:"totem",prefix:14,standardAccount:"*25519",symbols:["XTX"],website:"https://totemaccounting.com"},{decimals:[12],displayName:"Synesthesia",network:"synesthesia",prefix:15,standardAccount:"*25519",symbols:["SYN"],website:"https://synesthesia.network/"},{decimals:[12],displayName:"Kulupu",genesisHash:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],network:"kulupu",prefix:16,standardAccount:"*25519",symbols:["KLP"],website:"https://kulupu.network/"},{decimals:null,displayName:"Dark Mainnet",network:"dark",prefix:17,standardAccount:"*25519",symbols:null,website:null},{decimals:[9,9],displayName:"Darwinia Network",network:"darwinia",prefix:18,standardAccount:"*25519",symbols:["RING","KTON"],website:"https://darwinia.network/"},{decimals:[12],displayName:"GeekCash",network:"geek",prefix:19,standardAccount:"*25519",symbols:["GEEK"],website:"https://geekcash.org"},{decimals:[12],displayName:"Stafi",genesisHash:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],network:"stafi",prefix:20,standardAccount:"*25519",symbols:["FIS"],website:"https://stafi.io"},{decimals:[6],displayName:"Dock Testnet",isIgnored:!0,network:"dock-testnet",prefix:21,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:[6],displayName:"Dock Mainnet",genesisHash:["0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],network:"dock-mainnet",prefix:22,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:null,displayName:"ShiftNrg",network:"shift",prefix:23,standardAccount:"*25519",symbols:null,website:null},{decimals:[18],displayName:"ZERO",network:"zero",prefix:24,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[18],displayName:"ZERO Alphaville",isIgnored:!0,network:"zero-alphaville",prefix:25,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:null,displayName:"Subsocial",genesisHash:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],network:"subsocial",prefix:28,standardAccount:"*25519",symbols:null,website:null},{decimals:[12],displayName:"Phala Network",network:"phala",prefix:30,standardAccount:"*25519",symbols:["PHA"],website:"https://phala.network"},{decimals:null,displayName:"Robonomics Network",network:"robonomics",prefix:32,standardAccount:"*25519",symbols:null,website:null},{decimals:null,displayName:"DataHighway",network:"datahighway",prefix:33,standardAccount:"*25519",symbols:null,website:null},{decimals:[15],displayName:"Valiu Liquidity Network",network:"vln",prefix:35,standardAccount:"*25519",symbols:["USDv"],website:"https://valiu.com/"},{decimals:[18],displayName:"Centrifuge Chain",network:"centrifuge",prefix:36,standardAccount:"*25519",symbols:["RAD"],website:"https://centrifuge.io/"},{decimals:[18],displayName:"Nodle Chain",network:"nodle",prefix:37,standardAccount:"*25519",symbols:["NODL"],website:"https://nodle.io/"},{decimals:[18],displayName:"KILT Chain",network:"kilt",prefix:38,standardAccount:"*25519",symbols:["KILT"],website:"https://kilt.io/"},{decimals:[18],displayName:"MathChain mainnet",network:"mathchain",prefix:39,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:[18],displayName:"MathChain testnet",isIgnored:!0,network:"mathchain-testnet",prefix:40,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:null,displayName:"Polimec Chain",network:"poli",prefix:41,standardAccount:"*25519",symbols:null,website:"https://polimec.io/"},{decimals:null,displayName:"Substrate",network:"substrate",prefix:42,standardAccount:"*25519",symbols:null,website:"https://substrate.dev/"},s(43),{decimals:[8],displayName:"ChainX",network:"chainx",prefix:44,standardAccount:"*25519",symbols:["PCX"],website:"https://chainx.org/"},s(46),s(47),s(48,"All prefixes 48 and higher are reserved and cannot be allocated.")];t.all=u;const f=u.filter(e=>!e.isIgnored).map(e=>o(o({},e),{},{genesisHash:e.genesisHash||[],icon:e.icon||"substrate"})).sort((e,t)=>c.includes(e.prefix)&&c.includes(t.prefix)?0:c.includes(e.prefix)?-1:c.includes(t.prefix)?1:e.displayName.localeCompare(t.displayName));t.available=f;const l=f.filter(e=>e.genesisHash.length||42===e.prefix);var d=l;t.default=d},3591:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),r("4508"),r("d04f");var n=r("6a63");Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===n[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}}))}));var i=r("a763");Object.keys(i).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===i[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}}))}));var a=r("6dcb");Object.keys(a).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===a[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}}))}));var o=r("9d29");Object.keys(o).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===o[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}}))}));var c=r("8971");Object.keys(c).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===c[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return c[e]}}))}));var s=r("5223");Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}));var u=r("147c");Object.keys(u).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===u[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return u[e]}}))}));var f=r("7dc3");Object.keys(f).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===f[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return f[e]}}))}));var l=r("ebe0");Object.keys(l).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===l[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return l[e]}}))}));var d=r("f3c5d");Object.keys(d).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===d[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return d[e]}}))}));var h=r("32fd");Object.keys(h).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===h[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return h[e]}}))}));var b=r("5e87");Object.keys(b).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===b[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return b[e]}}))}));var p=r("7fd4");Object.keys(p).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===p[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return p[e]}}))}));var y=r("967a");Object.keys(y).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===y[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return y[e]}}))}));var v=r("93a2");Object.keys(v).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===v[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return v[e]}}))}));var m=r("3ad0");Object.keys(m).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===m[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return m[e]}}))}));var w=r("d26e");Object.keys(w).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===w[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return w[e]}}))}));var O=r("042e");Object.keys(O).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===O[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return O[e]}}))}));var g=r("caed4");Object.keys(g).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===g[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return g[e]}}))}))},"361a":function(e,t,r){"use strict";r.d(t,"a",(function(){return c}));var n=r("fe84"),i=r("bef3"),a=r("f584"),o=r("8fbd");function c(e,t,r,c="blake2"){const s="keccak"===c,u=Object(n["u8aToU8a"])(t);Object(n["assert"])(65===u.length,`Expected signature with 65 bytes, ${u.length} found instead`);const f=new Uint8Array(o["b"].recoverPubKey(Object(a["a"])(c,e),{r:u.slice(0,32),s:u.slice(32,64)},u[64]).encodeCompressed()),l=Object(a["a"])(c,s?Object(i["a"])(f):f),d=Object(n["u8aToU8a"])(r);return s?Object(n["u8aEq"])(l.slice(-20),d.slice(-20)):Object(n["u8aEq"])(l,d)}},"398c":function(e,t,r){"use strict";function n(e){return"object"===typeof e}r.d(t,"a",(function(){return n}))},"3ad0":function(e,t,r){"use strict";r.r(t),r.d(t,"secp256k1Compress",(function(){return a})),r.d(t,"secp256k1Expand",(function(){return o["a"]})),r.d(t,"secp256k1KeypairFromSeed",(function(){return c["a"]})),r.d(t,"secp256k1Recover",(function(){return s})),r.d(t,"secp256k1Sign",(function(){return f})),r.d(t,"secp256k1Verify",(function(){return l["a"]}));var n=r("fe84"),i=r("8fbd");function a(e){return Object(n["assert"])([33,65].includes(e.length),"Invalid publicKey provided"),new Uint8Array(i["b"].keyFromPublic(e).getPublic().encodeCompressed())}var o=r("bef3"),c=r("55d0");function s(e,t,r){return new Uint8Array(i["b"].recoverPubKey(e,{r:t.slice(0,32),s:t.slice(32,64)},r).encode(null,!0))}var u=r("f584");function f(e,{secretKey:t},r="blake2"){Object(n["assert"])(32===(null===t||void 0===t?void 0:t.length),"Expected valid secp256k1 secretKey, 32-bytes");const a=i["b"].keyFromPrivate(t),o=a.sign(Object(u["a"])(r,e));return Object(n["u8aConcat"])(Object(n["bnToU8a"])(o.r,i["a"]),Object(n["bnToU8a"])(o.s,i["a"]),new Uint8Array([o.recoveryParam||0]))}var l=r("361a")},"3bd6":function(e,t,r){"use strict";t["a"]=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]},"3d11":function(e,t,r){"use strict";r.r(t),r.d(t,"BN_ZERO",(function(){return a})),r.d(t,"BN_ONE",(function(){return o})),r.d(t,"BN_TEN",(function(){return c})),r.d(t,"BN_HUNDRED",(function(){return s})),r.d(t,"BN_THOUSAND",(function(){return u})),r.d(t,"bnFromHex",(function(){return f["a"]})),r.d(t,"bnMax",(function(){return h})),r.d(t,"bnMin",(function(){return b})),r.d(t,"bnSqrt",(function(){return y})),r.d(t,"bnToBn",(function(){return v["a"]})),r.d(t,"bnToHex",(function(){return z})),r.d(t,"bnToU8a",(function(){return g["a"]}));var n=r("399f"),i=r.n(n);const a=new i.a(0),o=new i.a(1),c=new i.a(10),s=new i.a(100),u=new i.a(1e3);var f=r("ceea"),l=r("5d81");function d(e,t){return Object(l["assert"])(t.length>=1,"Must provide one or more BN arguments"),t.reduce((t,r)=>i.a[e](t,r),t[0])}function h(...e){return d("max",e)}function b(...e){return d("min",e)}function p(e,t){const r=e.div(t).add(t).shrn(1);return t.eq(r)||t.eq(r.subn(1))?t:p(e,r)}function y(e){return Object(l["assert"])(e.gten(0),"square root of negative numbers is not supported"),e.ltn(2)?e:p(e,new i.a(1))}var v=r("8c22"),m=r("ade3"),w=r("dd43"),O=r("6f26"),g=r("6bd3");function j(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function P(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?j(Object(r),!0).forEach((function(t){Object(m["a"])(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):j(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const x="0x00";function z(e,t={bitLength:-1,isLe:!1,isNegative:!1},r){if(!e)return x;const n=P({isLe:!1,isNegative:!1},Object(w["a"])(t)?{bitLength:t,isLe:r}:t);return Object(O["a"])(Object(g["a"])(e,n))}},"3e33":function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("399f"),i=r.n(n);function a(e){return i.a.isBN(e)}},"42d8":function(e,t,r){"use strict";r.d(t,"a",(function(){return c}));var n=r("aa37"),i=r.n(n),a=r("fe84"),o=r("1299");function c(e,t=256,r=!1){const n=256===t;return Object(o["isReady"])()&&n&&!r?Object(o["keccak256"])(Object(a["u8aToU8a"])(e)):new Uint8Array((n?i.a.keccak256:i.a.keccak512).update(Object(a["u8aToU8a"])(e)).arrayBuffer())}},"43ce":function(e,t,r){"use strict";r.d(t,"b",(function(){return i})),r.d(t,"a",(function(){return a}));var n=r("58a26");function i(e,t,r){try{return e(t,r)}catch(n){return!1}}function a(e,t){return i(n["a"],e,t)}},4507:function(e,t,r){"use strict";r.r(t),r.d(t,"u8aConcat",(function(){return n["a"]})),r.d(t,"u8aEq",(function(){return i["a"]})),r.d(t,"u8aFixLength",(function(){return a})),r.d(t,"u8aSorted",(function(){return c})),r.d(t,"u8aToBn",(function(){return s["a"]})),r.d(t,"u8aToBuffer",(function(){return u["a"]})),r.d(t,"u8aToHex",(function(){return f["a"]})),r.d(t,"u8aToString",(function(){return l["a"]})),r.d(t,"u8aToU8a",(function(){return d["a"]}));var n=r("99f3"),i=r("b4c8");function a(e,t=-1,r=!1){const n=Math.ceil(t/8);if(-1===t||e.length===n)return e;if(e.length>n)return e.subarray(0,n);const i=new Uint8Array(n);return r?i.set(e,0):i.set(e,n-e.length),i}var o=r("3009");function c(e){return e.sort((e,t)=>{let r=0;while(1){if(Object(o["a"])(e[r])&&Object(o["a"])(t[r]))return 0;if(Object(o["a"])(e[r]))return-1;if(Object(o["a"])(t[r]))return 1;const n=e[r]-t[r];if(0!==n)return n;r++}})}var s=r("9e40"),u=r("c85f"),f=r("6f26"),l=r("18f7"),d=r("25a8")},4508:function(e,t,r){"use strict";r.r(t);var n=r("5223");Object(n["cryptoWaitReady"])().catch(()=>{})},"45c6":function(e,t,r){(function(t){const r=146317,n=284502,i=t.from("","base64");e.exports={buffer:i,sizeCompressed:r,sizeUncompressed:n}}).call(this,r("1c35").Buffer)},4716:function(e,t,r){"use strict";var n,i=r("f14a"),a=r("6b78"),o=r("e55c"),c=r("7ec1"),s=r("5d986"),u=r("97f5"),f=r("28d0").enforce,l=r("5055"),d=!i.ActiveXObject&&"ActiveXObject"in i,h=Object.isExtensible,b=function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}},p=e.exports=c("WeakMap",b,s);if(l&&d){n=s.getConstructor(b,"WeakMap",!0),o.REQUIRED=!0;var y=p.prototype,v=y["delete"],m=y.has,w=y.get,O=y.set;a(y,{delete:function(e){if(u(e)&&!h(e)){var t=f(this);return t.frozen||(t.frozen=new n),v.call(this,e)||t.frozen["delete"](e)}return v.call(this,e)},has:function(e){if(u(e)&&!h(e)){var t=f(this);return t.frozen||(t.frozen=new n),m.call(this,e)||t.frozen.has(e)}return m.call(this,e)},get:function(e){if(u(e)&&!h(e)){var t=f(this);return t.frozen||(t.frozen=new n),m.call(this,e)?w.call(this,e):t.frozen.get(e)}return w.call(this,e)},set:function(e,t){if(u(e)&&!h(e)){var r=f(this);r.frozen||(r.frozen=new n),m.call(this,e)?O.call(this,e,t):r.frozen.set(e,t)}else O.call(this,e,t);return this}})}},"47ffc":function(e,t,r){"use strict";function n(e,t){const r=Math.ceil(e.length/t),n=Array(r);for(let i=0;i<r;i++){const r=i*t;n[i]=e.slice(r,r+t)}return n}r.r(t),r.d(t,"arrayChunk",(function(){return n})),r.d(t,"arrayFilter",(function(){return o})),r.d(t,"arrayFlatten",(function(){return c}));var i=r("b1a5"),a=r("3009");function o(e,t=!0){return e.filter(e=>!Object(a["a"])(e)&&(t||!Object(i["a"])(e)))}function c(e){const t=new Array(e.reduce((e,t)=>e+t.length,0));let r=-1;for(let n=0;n<e.length;n++){const i=e[n];for(let e=0;e<i.length;e++)t[++r]=i[e]}return t}},"49aba":function(e,t,r){"use strict";r.r(t),r.d(t,"__wbindgen_is_undefined",(function(){return h})),r.d(t,"__wbg_self_1b7a39e3a92c949c",(function(){return b})),r.d(t,"__wbg_require_604837428532a733",(function(){return p})),r.d(t,"__wbg_crypto_968f1772287e2df0",(function(){return y})),r.d(t,"__wbg_getRandomValues_a3d34b4fee3c2869",(function(){return v})),r.d(t,"__wbg_getRandomValues_f5e14ab7ac8e995d",(function(){return m})),r.d(t,"__wbg_randomFillSync_d5bd2d655fdf256a",(function(){return w})),r.d(t,"__wbindgen_object_drop_ref",(function(){return O})),r.d(t,"abort",(function(){return g}));var n=r("d1b1"),i=r("ec1b");const a={getRandomValues:n["getRandomValues"]},o={crypto:a},c=new Array(32).fill(void 0).concat(void 0,null,!0,!1);let s=c.length;function u(e){return c[e]}function f(e){e<36||(c[e]=s,s=e)}function l(e){const t=u(e);return f(e),t}function d(e){s===c.length&&c.push(c.length+1);const t=s;return s=c[t],c[t]=e,t}function h(e){return void 0===u(e)}function b(){return d(o)}function p(e,t){throw new Error("Unable to require "+Object(i["getString"])(e,t))}function y(e){return d(a)}function v(e){return d(a.getRandomValues)}function m(e,t,r){a.getRandomValues(Object(i["getU8a"])(t,r))}function w(e,t,r){throw new Error("randomFillsync is not available")}function O(e){l(e)}function g(){throw new Error("abort")}},"4bf8":function(e,t,r){"use strict";r.r(t),r.d(t,"export_table_to_excel",(function(){return d})),r.d(t,"export_json_to_excel",(function(){return h}));r("16ca"),r("fecc"),r("33375"),r("f312"),r("e938"),r("27ae"),r("d447"),r("2a2d"),r("7def"),r("84c2"),r("479d"),r("1980"),r("d421"),r("49be"),r("5bbe"),r("9f39"),r("7168"),r("01c0"),r("2d0c"),r("18e8"),r("209f"),r("3448"),r("d67a"),r("1e64"),r("484b"),r("ce6b"),r("1ba7"),r("3015"),r("d156"),r("3dcd"),r("ccd6"),r("3bae");var n=r("2909"),i=r("21a6"),a=r("1146"),o=r.n(a);function c(e){for(var t=[],r=e.querySelectorAll("tr"),n=[],i=0;i<r.length;++i){for(var a=[],o=r[i],c=o.querySelectorAll("td"),s=0;s<c.length;++s){var u=c[s],f=u.getAttribute("colspan"),l=u.getAttribute("rowspan"),d=u.innerText;if(""!==d&&d==+d&&(d=+d),n.forEach((function(e){if(i>=e.s.r&&i<=e.e.r&&a.length>=e.s.c&&a.length<=e.e.c)for(var t=0;t<=e.e.c-e.s.c;++t)a.push(null)})),(l||f)&&(l=l||1,f=f||1,n.push({s:{r:i,c:a.length},e:{r:i+l-1,c:a.length+f-1}})),a.push(""!==d?d:null),f)for(var h=0;h<f-1;++h)a.push(null)}t.push(a)}return[t,n]}function s(e,t){t&&(e+=1462);var r=Date.parse(e);return(r-new Date(Date.UTC(1899,11,30)))/864e5}function u(e,t){for(var r={},n={s:{c:1e7,r:1e7},e:{c:0,r:0}},i=0;i!=e.length;++i)for(var a=0;a!=e[i].length;++a){n.s.r>i&&(n.s.r=i),n.s.c>a&&(n.s.c=a),n.e.r<i&&(n.e.r=i),n.e.c<a&&(n.e.c=a);var c={v:e[i][a]};if(null!=c.v){var u=o.a.utils.encode_cell({c:a,r:i});"number"===typeof c.v?c.t="n":"boolean"===typeof c.v?c.t="b":c.v instanceof Date?(c.t="n",c.z=o.a.SSF._table[14],c.v=s(c.v)):c.t="s",r[u]=c}}return n.s.c<1e7&&(r["!ref"]=o.a.utils.encode_range(n)),r}function f(){if(!(this instanceof f))return new f;this.SheetNames=[],this.Sheets={}}function l(e){for(var t=new ArrayBuffer(e.length),r=new Uint8Array(t),n=0;n!=e.length;++n)r[n]=255&e.charCodeAt(n);return t}function d(e){var t=document.getElementById(e),r=c(t),n=r[1],a=r[0],s="SheetJS",d=new f,h=u(a);h["!merges"]=n,d.SheetNames.push(s),d.Sheets[s]=h;var b=o.a.write(d,{bookType:"xlsx",bookSST:!1,type:"binary"});Object(i["saveAs"])(new Blob([l(b)],{type:"application/octet-stream"}),"test.xlsx")}function h(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.multiHeader,r=void 0===t?[]:t,a=e.header,c=e.data,s=e.filename,d=e.merges,h=void 0===d?[]:d,b=e.autoWidth,p=void 0===b||b,y=e.bookType,v=void 0===y?"xlsx":y;s=s||"excel-list",c=Object(n["a"])(c),c.unshift(a);for(var m=r.length-1;m>-1;m--)c.unshift(r[m]);var w="SheetJS",O=new f,g=u(c);if(h.length>0&&(g["!merges"]||(g["!merges"]=[]),h.forEach((function(e){g["!merges"].push(o.a.utils.decode_range(e))}))),p){for(var j=c.map((function(e){return e.map((function(e){return null==e?{wch:10}:e.toString().charCodeAt(0)>255?{wch:2*e.toString().length}:{wch:e.toString().length}}))})),P=j[0],x=1;x<j.length;x++)for(var z=0;z<j[x].length;z++)P[z]["wch"]<j[x][z]["wch"]&&(P[z]["wch"]=j[x][z]["wch"]);g["!cols"]=P}O.SheetNames.push(w),O.Sheets[w]=g;var k=o.a.write(O,{bookType:v,bookSST:!1,type:"binary"});Object(i["saveAs"])(new Blob([l(k)],{type:"application/octet-stream"}),"".concat(s,".").concat(v))}},"4dd4":function(e,t,r){"use strict";function n(e){return"bigint"===typeof e}r.d(t,"a",(function(){return n}))},"4ea4":function(e,t){function r(e){return e&&e.__esModule?e:{default:e}}e.exports=r},5122:function(e,t,r){"use strict";function n(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}r.d(t,"a",(function(){return n}))},5223:function(e,t,r){"use strict";r.r(t),r.d(t,"cryptoIsReady",(function(){return i})),r.d(t,"cryptoWaitReady",(function(){return a}));var n=r("1299");function i(){return Object(n["isReady"])()}function a(){return Object(n["waitReady"])().then(()=>!0).catch(e=>(console.error("Unable to initialize @polkadot/util-crypto",e),!1))}},"55d0":function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("fe84"),i=r("8fbd");function a(e){Object(n["assert"])(32===e.length,"Expected valid 32-byte private key as a seed");const t=i["b"].keyFromPrivate(e);return{publicKey:new Uint8Array(t.getPublic().encodeCompressed()),secretKey:Object(n["bnToU8a"])(t.getPrivate(),i["a"])}}},"58a26":function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r("31c3"),i=r("1055");const a={alphabet:i["a"],ipfsChar:"b",type:"base32"};function o(e,t){return Object(n["b"])(a,e,t)}},"591c":function(e,t,r){"use strict";const n="[a-fA-F\\d:]",i=e=>e&&e.includeBoundaries?`(?:(?<=\\s|^)(?=${n})|(?<=${n})(?=\\s|$))`:"",a="(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",o="[a-fA-F\\d]{1,4}",c=`\n(\n(?:${o}:){7}(?:${o}|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${o}:){6}(?:${a}|:${o}|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${o}:){5}(?::${a}|(:${o}){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${o}:){4}(?:(:${o}){0,1}:${a}|(:${o}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${o}:){3}(?:(:${o}){0,2}:${a}|(:${o}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${o}:){2}(?:(:${o}){0,3}:${a}|(:${o}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${o}:){1}(?:(:${o}){0,4}:${a}|(:${o}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::((?::${o}){0,5}:${a}|(?::${o}){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1\n`.replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),s=new RegExp(`(?:^${a}$)|(?:^${c}$)`),u=new RegExp(`^${a}$`),f=new RegExp(`^${c}$`),l=e=>e&&e.exact?s:new RegExp(`(?:${i(e)}${a}${i(e)})|(?:${i(e)}${c}${i(e)})`,"g");l.v4=e=>e&&e.exact?u:new RegExp(`${i(e)}${a}${i(e)}`,"g"),l.v6=e=>e&&e.exact?f:new RegExp(`${i(e)}${c}${i(e)}`,"g"),e.exports=l},"5a0a":function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r("805c"),i=r("fe84"),a=r("1299");function o(e,t,r,o=!1){const c=Object(i["u8aToU8a"])(e),s=Object(i["u8aToU8a"])(r),u=Object(i["u8aToU8a"])(t);return Object(i["assert"])(32===s.length,`Invalid publicKey, received ${s.length}, expected 32`),Object(i["assert"])(64===u.length,`Invalid signature, received ${u.length} bytes, expected 64`),Object(a["isReady"])()&&!o?Object(a["ed25519Verify"])(u,c,s):n["sign"].detached.verify(c,u,s)}},"5cf7":function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=0;function i(e){return"__private_"+n+++"_"+e}},"5d81":function(e,t,r){"use strict";r.r(t),r.d(t,"assert",(function(){return a})),r.d(t,"assertReturn",(function(){return o}));var n=r("6b32"),i=r("3009");function a(e,t){if(!e)throw new Error(Object(n["a"])(t)?t():t)}function o(e,t){return a(!Object(i["a"])(e),t),e}},"5d986":function(e,t,r){"use strict";var n=r("6b78"),i=r("e55c").getWeakData,a=r("baa9"),o=r("97f5"),c=r("e6a2"),s=r("01d1"),u=r("59bf"),f=r("2ccf"),l=r("28d0"),d=l.set,h=l.getterFor,b=u.find,p=u.findIndex,y=0,v=function(e){return e.frozen||(e.frozen=new m)},m=function(){this.entries=[]},w=function(e,t){return b(e.entries,(function(e){return e[0]===t}))};m.prototype={get:function(e){var t=w(this,e);if(t)return t[1]},has:function(e){return!!w(this,e)},set:function(e,t){var r=w(this,e);r?r[1]=t:this.entries.push([e,t])},delete:function(e){var t=p(this.entries,(function(t){return t[0]===e}));return~t&&this.entries.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,r,u){var l=e((function(e,n){c(e,l,t),d(e,{type:t,id:y++,frozen:void 0}),void 0!=n&&s(n,e[u],{that:e,AS_ENTRIES:r})})),b=h(t),p=function(e,t,r){var n=b(e),o=i(a(t),!0);return!0===o?v(n).set(t,r):o[n.id]=r,e};return n(l.prototype,{delete:function(e){var t=b(this);if(!o(e))return!1;var r=i(e);return!0===r?v(t)["delete"](e):r&&f(r,t.id)&&delete r[t.id]},has:function(e){var t=b(this);if(!o(e))return!1;var r=i(e);return!0===r?v(t).has(e):r&&f(r,t.id)}}),n(l.prototype,r?{get:function(e){var t=b(this);if(o(e)){var r=i(e);return!0===r?v(t).get(e):r?r[t.id]:void 0}},set:function(e,t){return p(this,e,t)}}:{add:function(e){return p(this,e,!0)}}),l}}},"5e87":function(e,t,r){"use strict";r.r(t);var n=r("ee72");r.d(t,"pbkdf2Encode",(function(){return n["a"]}))},"5e99":function(e){e.exports=JSON.parse('{"name":"@polkadot/util-crypto","version":"5.2.2"}')},"5eb7":function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r("fe84"),i=r("0ef0");const a=Object(n["stringToU8a"])("SS58PRE");function o(e){return Object(i["a"])(Object(n["u8aConcat"])(a,e),512)}},"5ff4":function(e,t,r){"use strict";r.r(t),r.d(t,"isAscii",(function(){return o})),r.d(t,"isBigInt",(function(){return c["a"]})),r.d(t,"isBn",(function(){return s["a"]})),r.d(t,"isBuffer",(function(){return u["a"]})),r.d(t,"isBoolean",(function(){return f["a"]})),r.d(t,"isChildClass",(function(){return l})),r.d(t,"isError",(function(){return h})),r.d(t,"isFunction",(function(){return b["a"]})),r.d(t,"isHex",(function(){return p["a"]})),r.d(t,"isInstanceOf",(function(){return d["a"]})),r.d(t,"isIp",(function(){return m})),r.d(t,"isJsonObject",(function(){return w})),r.d(t,"isNull",(function(){return O["a"]})),r.d(t,"isNumber",(function(){return g["a"]})),r.d(t,"isObject",(function(){return j["a"]})),r.d(t,"isObservable",(function(){return P})),r.d(t,"isString",(function(){return i["a"]})),r.d(t,"isTestChain",(function(){return z})),r.d(t,"isToBn",(function(){return k["a"]})),r.d(t,"isU8a",(function(){return H["a"]})),r.d(t,"isUndefined",(function(){return N["a"]})),r.d(t,"isUtf8",(function(){return T})),r.d(t,"isWasm",(function(){return D}));var n=r("25a8"),i=r("29cb");const a=[9,10,13];function o(e){return e?!Object(n["a"])(e).some(e=>e>=127||e<32&&!a.includes(e)):Object(i["a"])(e)}var c=r("4dd4"),s=r("3e33"),u=r("71db"),f=r("6e4a");function l(e,t){return!!t&&(e===t||e.isPrototypeOf(t))}var d=r("0df6f");function h(e){return Object(d["a"])(e,Error)}var b=r("6b32"),p=r("70bc"),y=r("591c"),v=r.n(y);function m(e,t){return"v4"===t?v.a.v4({exact:!0}).test(e):"v6"===t?v.a.v6({exact:!0}).test(e):v()({exact:!0}).test(e)}function w(e){const t="string"!==typeof e?JSON.stringify(e):e;try{const e=JSON.parse(t);return"object"===typeof e&&null!==e}catch(r){return!1}}var O=r("b1a5"),g=r("dd43"),j=r("398c");function P(e){return Object(j["a"])(e)&&Object(b["a"])(e.next)}const x=/(Development|Local Testnet)$/;function z(e){return!!e&&!!x.test(e.toString())}var k=r("ecd7"),H=r("9c1f"),N=r("3009");function T(e){if(!e)return Object(i["a"])(e);const t=Object(n["a"])(e),r=t.length;let a=0;while(a<r)if(t[a]<=127)a+=1;else if(t[a]>=194&&t[a]<=223){if(!(a+1<r))return!1;if(t[a+1]<128||t[a+1]>191)return!1;a+=2}else if(224===t[a]){if(!(a+2<r))return!1;if(t[a+1]<160||t[a+1]>191)return!1;if(t[a+2]<128||t[a+2]>191)return!1;a+=3}else if(t[a]>=225&&t[a]<=236){if(!(a+2<r))return!1;if(t[a+1]<128||t[a+1]>191)return!1;if(t[a+2]<128||t[a+2]>191)return!1;a+=3}else if(237===t[a]){if(!(a+2<r))return!1;if(t[a+1]<128||t[a+1]>159)return!1;if(t[a+2]<128||t[a+2]>191)return!1;a+=3}else if(t[a]>=238&&t[a]<=239){if(!(a+2<r))return!1;if(t[a+1]<128||t[a+1]>191)return!1;if(t[a+2]<128||t[a+2]>191)return!1;a+=3}else if(240===t[a]){if(!(a+3<r))return!1;if(t[a+1]<144||t[a+1]>191)return!1;if(t[a+2]<128||t[a+2]>191)return!1;if(t[a+3]<128||t[a+3]>191)return!1;a+=4}else if(t[a]>=241&&t[a]<=243){if(!(a+3<r))return!1;if(t[a+1]<128||t[a+1]>191)return!1;if(t[a+2]<128||t[a+2]>191)return!1;if(t[a+3]<128||t[a+3]>191)return!1;a+=4}else{if(244!==t[a])return!1;if(!(a+3<r))return!1;if(t[a+1]<128||t[a+1]>143)return!1;if(t[a+2]<128||t[a+2]>191)return!1;if(t[a+3]<128||t[a+3]>191)return!1;a+=4}return!0}var X=r("b4c8");const L=new Uint8Array([0,97,115,109]);function D(e){return!!e&&Object(X["a"])(e.subarray(0,4),L)}},"63d4":function(e,t,r){"use strict";r.d(t,"a",(function(){return E}));var n=r("5122"),i=r("5cf7"),a=r("fe84"),o=r("3591");const c="bottom drive obey lake curtain smoke basket hold race lonely fit walk";var s=r("ade3");const u=["scrypt","xsalsa20-poly1305"],f=24,l=new Uint8Array([161,35,3,33,0]),d=new Uint8Array([48,83,2,1,1,48,5,6,3,43,101,112,4,34,4,32]),h=32,b=32,p=64,y=32,v=b+12,m=d.length;function w(e){const t=e.subarray(0,d.length);Object(a["assert"])(t.toString()===d.toString(),"Invalid Pkcs8 header found in body");let r=e.subarray(m,m+p),n=m+p,i=e.subarray(n,n+l.length);i.toString()!==l.toString()&&(n=m+y,r=e.subarray(m,n),i=e.subarray(n,n+l.length)),Object(a["assert"])(i.toString()===l.toString(),"Invalid Pkcs8 divider found in body");const o=n+l.length,c=e.subarray(o,o+h);return{publicKey:c,secretKey:r}}function O(e,t,r=u){Object(a["assert"])(t,"No encrypted data available to decode"),Object(a["assert"])(e||!r.includes("xsalsa20-poly1305"),"Password required to decode encypted data");let n=t;if(e){let i;if(r.includes("scrypt")){const{params:r,salt:n}=Object(o["scryptFromU8a"])(t);i=Object(o["scryptEncode"])(e,n,r).password,t=t.subarray(v)}else i=Object(a["stringToU8a"])(e);n=Object(o["naclDecrypt"])(t.subarray(f),t.subarray(0,f),Object(a["u8aFixLength"])(i,256,!0))}return Object(a["assert"])(n,"Unable to decode using the supplied passphrase"),w(n)}function g({publicKey:e,secretKey:t},r){Object(a["assert"])(t,"Expected a valid secretKey to be passed to encode");const n=Object(a["u8aConcat"])(d,t,l,e);if(!r)return n;const{params:i,password:c,salt:s}=Object(o["scryptEncode"])(r),{encrypted:u,nonce:f}=Object(o["naclEncrypt"])(n,c.subarray(0,32));return Object(a["u8aConcat"])(Object(o["scryptToU8a"])(s,i),f,u)}const j="3",P=["none"];function x(e,{address:t,meta:r},n,i){return{address:t,encoded:Object(o["base64Encode"])(n),encoding:{content:["pkcs8",e],type:i?u:P,version:j},meta:r}}function z(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function k(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?z(Object(r),!0).forEach((function(t){Object(s["a"])(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):z(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const H=new Uint8Array,N={ecdsa:o["secp256k1KeypairFromSeed"],ed25519:o["naclKeypairFromSeed"],ethereum:o["secp256k1KeypairFromSeed"],sr25519:o["schnorrkelKeypairFromSeed"]},T={ecdsa:new Uint8Array([2]),ed25519:new Uint8Array([0]),ethereum:new Uint8Array([2]),sr25519:new Uint8Array([1])},X={ecdsa:(e,t)=>Object(o["secp256k1Sign"])(e,t,"blake2"),ed25519:o["naclSign"],ethereum:(e,t)=>Object(o["secp256k1Sign"])(e,t,"keccak"),sr25519:o["schnorrkelSign"]},L={ecdsa:e=>e.length>32?Object(o["blake2AsU8a"])(e):e,ed25519:e=>e,ethereum:e=>Object(o["keccakAsU8a"])(Object(o["secp256k1Expand"])(e)),sr25519:e=>e};function D(e){return 0===e.reduce((e,t)=>e+t,0)}function M(e){return!e||0===e.length||D(e)}function A({toSS58:e,type:t},{publicKey:r,secretKey:n},i={},c=null,s){const u=(e,i)=>{const a=O(e,i||c,s);if(64===a.secretKey.length)r=a.publicKey,n=a.secretKey;else{const e=N[t](a.secretKey);r=e.publicKey,n=e.secretKey}},f=e=>(M(n)&&c&&u(e,c),c=g({publicKey:r,secretKey:n},e),s=void 0,c),l=()=>{const n=L[t](r);return"ethereum"===t?Object(o["ethereumEncode"])(n):e(n)};return{get address(){return l()},get addressRaw(){const e=L[t](r);return"ethereum"===t?e.slice(-20):e},get isLocked(){return M(n)},get meta(){return i},get publicKey(){return r},get type(){return t},decodePkcs8:u,derive:(i,c)=>{Object(a["assert"])(!M(n),"Cannot derive on a locked keypair");const{path:s}=Object(o["keyExtractPath"])(i),u=Object(o["keyFromPath"])({publicKey:r,secretKey:n},s,t);return A({toSS58:e,type:t},u,c,null)},encodePkcs8:e=>f(e),lock:()=>{n=new Uint8Array},setMeta:e=>{i=k(k({},i),e)},sign:(e,i={})=>(Object(a["assert"])(!M(n),"Cannot sign with a locked key pair"),Object(a["u8aConcat"])(i.withType?T[t]:H,X[t](e,{publicKey:r,secretKey:n}))),toJson:e=>{const n=["ecdsa","ethereum"].includes(t)?Object(a["u8aToHex"])(Object(o["secp256k1Compress"])(r)):l();return x(t,{address:n,meta:i},f(e),!!e)},verify:(e,n)=>Object(o["signatureVerify"])(e,n,L[t](r)).isValid}}var S=Object(i["a"])("map");class Z{constructor(){Object.defineProperty(this,S,{writable:!0,value:{}})}add(e){return Object(n["a"])(this,S)[S][Object(o["decodeAddress"])(e.address).toString()]=e,e}all(){return Object.values(Object(n["a"])(this,S)[S])}get(e){const t=Object(n["a"])(this,S)[S][Object(o["decodeAddress"])(e).toString()];return Object(a["assert"])(t,()=>{const t=Object(a["isU8a"])(e)||Object(a["isHex"])(e)?Object(a["u8aToHex"])(Object(a["u8aToU8a"])(e)):e;return`Unable to retrieve keypair '${t}'`}),t}remove(e){delete Object(n["a"])(this,S)[S][Object(o["decodeAddress"])(e).toString()]}}const R={ecdsa:e=>Object(o["secp256k1KeypairFromSeed"])(e),ed25519:e=>Object(o["naclKeypairFromSeed"])(e),ethereum:e=>Object(o["secp256k1KeypairFromSeed"])(e),sr25519:e=>Object(o["schnorrkelKeypairFromSeed"])(e)};var W=Object(i["a"])("pairs"),U=Object(i["a"])("type"),F=Object(i["a"])("ss58");class E{constructor(e={}){Object.defineProperty(this,W,{writable:!0,value:void 0}),Object.defineProperty(this,U,{writable:!0,value:void 0}),Object.defineProperty(this,F,{writable:!0,value:void 0}),this.decodeAddress=o["decodeAddress"],this.encodeAddress=(e,t)=>Object(o["encodeAddress"])(e,Object(a["isUndefined"])(t)?Object(n["a"])(this,F)[F]:t),e.type=e.type||"ed25519",Object(a["assert"])(e&&["ecdsa","ethereum","ed25519","sr25519"].includes(e.type||"undefined"),"Expected a keyring type of either 'ed25519', 'sr25519' or 'ecdsa', found '"+e.type),Object(n["a"])(this,W)[W]=new Z,Object(n["a"])(this,F)[F]=e.ss58Format,Object(n["a"])(this,U)[U]=e.type}get pairs(){return this.getPairs()}get publicKeys(){return this.getPublicKeys()}get type(){return Object(n["a"])(this,U)[U]}addPair(e){return Object(n["a"])(this,W)[W].add(e)}addFromAddress(e,t={},r=null,n=this.type,i,a){const o=this.decodeAddress(e,i);return this.addPair(A({toSS58:this.encodeAddress,type:n},{publicKey:o,secretKey:new Uint8Array},t,r,a))}addFromJson(e,t){return this.addPair(this.createFromJson(e,t))}addFromMnemonic(e,t={},r=this.type){return this.addFromUri(e,t,r)}addFromSeed(e,t={},r=this.type){return this.addPair(A({toSS58:this.encodeAddress,type:r},R[r](e),t,null))}addFromUri(e,t={},r=this.type){return this.addPair(this.createFromUri(e,t,r))}createFromJson({address:e,encoded:t,encoding:{content:r,type:n,version:i},meta:c},s){const u="0"!==i&&Array.isArray(r)?r[1]:this.type,f=Array.isArray(n)?n:[n],l=Object(a["isHex"])(e)?Object(a["hexToU8a"])(e):this.decodeAddress(e,s),d=Object(a["isHex"])(t)?Object(a["hexToU8a"])(t):Object(o["base64Decode"])(t);return A({toSS58:this.encodeAddress,type:u},{publicKey:l,secretKey:new Uint8Array},c,d,f)}createFromUri(e,t={},r=this.type){const n=e.startsWith("//")?`${c}${e}`:e,{password:i,path:s,phrase:u}=Object(o["keyExtractSuri"])(n);let f;if(Object(a["isHex"])(u,256))f=Object(a["hexToU8a"])(u);else{const e=u,t=e.split(" ");[12,15,18,21,24].includes(t.length)?f="ethereum"===r?Object(o["mnemonicToLegacySeed"])(u):Object(o["mnemonicToMiniSecret"])(u,i):(Object(a["assert"])(e.length<=32,"specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes"),f=Object(a["stringToU8a"])(e.padEnd(32)))}const l=Object(o["keyFromPath"])(R[r](f),s,r);return A({toSS58:this.encodeAddress,type:r},l,t,null)}getPair(e){return Object(n["a"])(this,W)[W].get(e)}getPairs(){return Object(n["a"])(this,W)[W].all()}getPublicKeys(){return Object(n["a"])(this,W)[W].all().map(({publicKey:e})=>e)}removePair(e){Object(n["a"])(this,W)[W].remove(e)}setSS58Format(e){Object(n["a"])(this,F)[F]=e}toJson(e,t){return Object(n["a"])(this,W)[W].get(e).toJson(t)}}},"6a63":function(e,t,r){"use strict";r.r(t),r.d(t,"addressToEvm",(function(){return i})),r.d(t,"checkAddress",(function(){return s})),r.d(t,"checkAddressChecksum",(function(){return o["a"]})),r.d(t,"createKeyMulti",(function(){return d})),r.d(t,"createKeyDerived",(function(){return b})),r.d(t,"decodeAddress",(function(){return n["a"]})),r.d(t,"deriveAddress",(function(){return O})),r.d(t,"encodeAddress",(function(){return w})),r.d(t,"encodeDerivedAddress",(function(){return g})),r.d(t,"encodeMultiAddress",(function(){return j})),r.d(t,"evmToAddress",(function(){return x})),r.d(t,"addressEq",(function(){return z})),r.d(t,"setSS58Format",(function(){return k})),r.d(t,"sortAddresses",(function(){return H}));var n=r("ad81");function i(e,t){const r=Object(n["a"])(e,t);return r.subarray(0,20)}var a=r("b15b"),o=r("9092"),c=r("ee85");function s(e,t){let r;try{r=Object(a["a"])(e)}catch(i){return[!1,i.message]}if(r[0]!==t)return[!1,`Prefix mismatch, expected ${t}, found ${r[0]}`];if(!c["a"].allowedEncodedLengths.includes(r.length))return[!1,"Invalid decoded address length"];const[n]=Object(o["a"])(r);return[n,n?null:"Invalid decoded address checksum"]}var u=r("fe84"),f=r("0ef0");const l=Object(u["stringToU8a"])("modlpy/utilisuba");function d(e,t){return Object(f["a"])(Object(u["u8aConcat"])(l,Object(u["compactToU8a"])(e.length),...Object(u["u8aSorted"])(e.map(e=>Object(n["a"])(e))),Object(u["bnToU8a"])(t,{bitLength:16,isLe:!0})))}const h=Object(u["stringToU8a"])("modlpy/utilisuba");function b(e,t){return Object(f["a"])(Object(u["u8aConcat"])(h,Object(n["a"])(e),Object(u["bnToU8a"])(t,{bitLength:16,isLe:!0})))}var p=r("8a16"),y=r("b92f"),v=r("8418"),m=r("5eb7");function w(e,t=c["a"].prefix){const r=Object(n["a"])(e);Object(u["assert"])(c["a"].allowedDecodedLengths.includes(r.length),"Expected a valid key to convert, with length "+c["a"].allowedDecodedLengths.join(", "));const i=[32,33].includes(r.length),a=Object(u["u8aConcat"])(new Uint8Array([t]),r),o=Object(m["a"])(a);return Object(v["a"])(Object(u["u8aConcat"])(a,o.subarray(0,i?2:1)))}function O(e,t,r){const{path:i}=Object(p["a"])(t);return Object(u["assert"])(i.length&&!i.some(e=>e.isHard),"Expected suri to contain a combination of non-hard paths"),w(i.reduce((e,t)=>Object(y["a"])(e,t.chainCode),Object(n["a"])(e)),r)}function g(e,t,r){return w(b(Object(n["a"])(e),t),r)}function j(e,t,r){return w(d(e,t),r)}var P=r("f584");function x(e,t,r="blake2"){const n=t=>`Converting ${e}: ${t}`,i=Object(u["u8aConcat"])("evm:",e);if(24!==i.length)throw new Error(n("Invalid evm address length"));const a=Object(P["a"])(r,i);return w(a,t)}function z(e,t){return Object(u["u8aEq"])(Object(n["a"])(e),Object(n["a"])(t))}function k(e){c["a"].prefix=e}function H(e,t){return Object(u["u8aSorted"])(e.map(e=>Object(n["a"])(e))).map(e=>w(e,t))}},"6b32":function(e,t,r){"use strict";function n(e){return"function"===typeof e}r.d(t,"a",(function(){return n}))},"6bd3":function(e,t,r){"use strict";r.d(t,"a",(function(){return f}));var n=r("ade3"),i=r("dd43"),a=r("8c22");function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){Object(n["a"])(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){return-1===t.bitLength?new Uint8Array:new Uint8Array(e)}function u(e,t,{isLe:r,isNegative:n}){const i=new Uint8Array(t),a=n?e.toTwos(8*t):e;return i.set(a.toArray(r?"le":"be",t),0),i}function f(e,t={bitLength:-1,isLe:!0,isNegative:!1},r){const n=c({bitLength:-1,isLe:!0,isNegative:!1},Object(i["a"])(t)?{bitLength:t,isLe:r}:t),o=Object(a["a"])(e),f=-1===n.bitLength?Math.ceil(o.bitLength()/8):Math.ceil((n.bitLength||0)/8);return e?u(o,f,n):s(f,n)}},"6c67":function(e,t,r){"use strict";function n(e){return e.toString().padStart(2,"0")}function i(e){const t=e.getFullYear().toString(),r=n(e.getMonth()+1),i=n(e.getDate()),a=n(e.getHours()),o=n(e.getMinutes()),c=n(e.getSeconds());return`${t}-${r}-${i} ${a}:${o}:${c}`}r.d(t,"a",(function(){return i}))},"6dcb":function(e,t,r){"use strict";r.r(t),r.d(t,"base58Decode",(function(){return n["a"]})),r.d(t,"base58Encode",(function(){return i["a"]})),r.d(t,"base58Validate",(function(){return a["a"]})),r.d(t,"isBase58",(function(){return c}));var n=r("b15b"),i=r("8418"),a=r("31c3"),o=r("43ce");function c(e,t){return Object(o["b"])(a["a"],e,t)}},"6e4a":function(e,t,r){"use strict";function n(e){return"boolean"===typeof e}r.d(t,"a",(function(){return n}))},"6f26":function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));const n=new Array(256).fill(0).map((e,t)=>t.toString(16).padStart(2,"0"));function i(e){const t=new Array(e.length);for(let r=0;r<e.length;r++)t[r]=n[e[r]];return t.join("")}function a(e,t){return`${o(e.subarray(0,t),-1,!1)}â€¦${o(e.subarray(e.length-t),-1,!1)}`}function o(e,t=-1,r=!0){const n=r?"0x":"";if(null===e||void 0===e||!e.length)return n;const o=Math.ceil(t/8);return n+(o>0&&e.length>o?a(e,Math.ceil(o/2)):i(e))}},7037:function(e,t,r){function n(t){return"function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?e.exports=n=function(e){return typeof e}:e.exports=n=function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(t)}r("01e5"),r("e487"),r("c2f8"),r("27ae"),r("591f"),r("feb3"),e.exports=n},"70bc":function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("29cb");const i=/^0x[a-fA-F0-9]+$/;function a(e,t=-1,r=!1){const a="0x"===e||Object(n["a"])(e)&&i.test(e.toString());return a&&-1!==t?e.length===2+Math.ceil(t/4):a&&(r||e.length%2===0)}},"71db":function(e,t,r){"use strict";(function(e){function n(t){return e.isBuffer(t)}r.d(t,"a",(function(){return n}))}).call(this,r("1c35").Buffer)},7344:function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("9bee");const i=new n["TextEncoder"];function a(e){return e?i.encode(e.toString()):new Uint8Array}},"7af1":function(e,t,r){"use strict";r.r(t),r.d(t,"TextDecoder",(function(){return n}));class n{constructor(e){}decode(e){return e.reduce((e,t)=>e+String.fromCharCode(t),"")}}},"7be8":function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("1299"),i=r("1f28");function a(e,t=!1){return Object(n["isReady"])()&&!t?Object(n["bip39ToEntropy"])(e):Object(i["b"])(e)}},"7dc3":function(e,t,r){"use strict";r.r(t),r.d(t,"keccakAsHex",(function(){return a})),r.d(t,"keccakAsU8a",(function(){return i["a"]}));var n=r("fe84"),i=r("42d8");function a(e,t){return Object(n["u8aToHex"])(Object(i["a"])(e,t))}},"7fd4":function(e,t,r){"use strict";r.r(t),r.d(t,"randomAsHex",(function(){return a})),r.d(t,"randomAsNumber",(function(){return u})),r.d(t,"randomAsU8a",(function(){return i["a"]}));var n=r("fe84"),i=r("e67f");function a(e=32){return Object(n["u8aToHex"])(Object(i["a"])(e))}var o=r("399f"),c=r.n(o);const s=new c.a(9007199254740991);function u(){return Object(n["hexToBn"])(a(8)).and(s).toNumber()}},"805c":function(e,t,r){(function(e){"use strict";var t=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},n=function(){throw new Error("no PRNG")},i=new Uint8Array(16),a=new Uint8Array(32);a[0]=9;var o=t(),c=t([1]),s=t([56129,1]),u=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),f=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),l=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),d=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),h=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function b(e,t,r,n){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r,e[t+4]=n>>24&255,e[t+5]=n>>16&255,e[t+6]=n>>8&255,e[t+7]=255&n}function p(e,t,r,n,i){var a,o=0;for(a=0;a<i;a++)o|=e[t+a]^r[n+a];return(1&o-1>>>8)-1}function y(e,t,r,n){return p(e,t,r,n,16)}function v(e,t,r,n){return p(e,t,r,n,32)}function m(e,t,r,n){for(var i,a=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,o=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,c=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,s=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,u=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,f=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,l=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,d=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,h=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,b=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,p=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,y=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,v=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,m=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,w=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,O=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,g=a,j=o,P=c,x=s,z=u,k=f,H=l,N=d,T=h,X=b,L=p,D=y,M=v,A=m,S=w,Z=O,R=0;R<20;R+=2)i=g+M|0,z^=i<<7|i>>>25,i=z+g|0,T^=i<<9|i>>>23,i=T+z|0,M^=i<<13|i>>>19,i=M+T|0,g^=i<<18|i>>>14,i=k+j|0,X^=i<<7|i>>>25,i=X+k|0,A^=i<<9|i>>>23,i=A+X|0,j^=i<<13|i>>>19,i=j+A|0,k^=i<<18|i>>>14,i=L+H|0,S^=i<<7|i>>>25,i=S+L|0,P^=i<<9|i>>>23,i=P+S|0,H^=i<<13|i>>>19,i=H+P|0,L^=i<<18|i>>>14,i=Z+D|0,x^=i<<7|i>>>25,i=x+Z|0,N^=i<<9|i>>>23,i=N+x|0,D^=i<<13|i>>>19,i=D+N|0,Z^=i<<18|i>>>14,i=g+x|0,j^=i<<7|i>>>25,i=j+g|0,P^=i<<9|i>>>23,i=P+j|0,x^=i<<13|i>>>19,i=x+P|0,g^=i<<18|i>>>14,i=k+z|0,H^=i<<7|i>>>25,i=H+k|0,N^=i<<9|i>>>23,i=N+H|0,z^=i<<13|i>>>19,i=z+N|0,k^=i<<18|i>>>14,i=L+X|0,D^=i<<7|i>>>25,i=D+L|0,T^=i<<9|i>>>23,i=T+D|0,X^=i<<13|i>>>19,i=X+T|0,L^=i<<18|i>>>14,i=Z+S|0,M^=i<<7|i>>>25,i=M+Z|0,A^=i<<9|i>>>23,i=A+M|0,S^=i<<13|i>>>19,i=S+A|0,Z^=i<<18|i>>>14;g=g+a|0,j=j+o|0,P=P+c|0,x=x+s|0,z=z+u|0,k=k+f|0,H=H+l|0,N=N+d|0,T=T+h|0,X=X+b|0,L=L+p|0,D=D+y|0,M=M+v|0,A=A+m|0,S=S+w|0,Z=Z+O|0,e[0]=g>>>0&255,e[1]=g>>>8&255,e[2]=g>>>16&255,e[3]=g>>>24&255,e[4]=j>>>0&255,e[5]=j>>>8&255,e[6]=j>>>16&255,e[7]=j>>>24&255,e[8]=P>>>0&255,e[9]=P>>>8&255,e[10]=P>>>16&255,e[11]=P>>>24&255,e[12]=x>>>0&255,e[13]=x>>>8&255,e[14]=x>>>16&255,e[15]=x>>>24&255,e[16]=z>>>0&255,e[17]=z>>>8&255,e[18]=z>>>16&255,e[19]=z>>>24&255,e[20]=k>>>0&255,e[21]=k>>>8&255,e[22]=k>>>16&255,e[23]=k>>>24&255,e[24]=H>>>0&255,e[25]=H>>>8&255,e[26]=H>>>16&255,e[27]=H>>>24&255,e[28]=N>>>0&255,e[29]=N>>>8&255,e[30]=N>>>16&255,e[31]=N>>>24&255,e[32]=T>>>0&255,e[33]=T>>>8&255,e[34]=T>>>16&255,e[35]=T>>>24&255,e[36]=X>>>0&255,e[37]=X>>>8&255,e[38]=X>>>16&255,e[39]=X>>>24&255,e[40]=L>>>0&255,e[41]=L>>>8&255,e[42]=L>>>16&255,e[43]=L>>>24&255,e[44]=D>>>0&255,e[45]=D>>>8&255,e[46]=D>>>16&255,e[47]=D>>>24&255,e[48]=M>>>0&255,e[49]=M>>>8&255,e[50]=M>>>16&255,e[51]=M>>>24&255,e[52]=A>>>0&255,e[53]=A>>>8&255,e[54]=A>>>16&255,e[55]=A>>>24&255,e[56]=S>>>0&255,e[57]=S>>>8&255,e[58]=S>>>16&255,e[59]=S>>>24&255,e[60]=Z>>>0&255,e[61]=Z>>>8&255,e[62]=Z>>>16&255,e[63]=Z>>>24&255}function w(e,t,r,n){for(var i,a=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,o=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,c=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,s=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,u=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,f=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,l=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,d=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,h=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,b=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,p=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,y=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,v=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,m=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,w=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,O=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,g=a,j=o,P=c,x=s,z=u,k=f,H=l,N=d,T=h,X=b,L=p,D=y,M=v,A=m,S=w,Z=O,R=0;R<20;R+=2)i=g+M|0,z^=i<<7|i>>>25,i=z+g|0,T^=i<<9|i>>>23,i=T+z|0,M^=i<<13|i>>>19,i=M+T|0,g^=i<<18|i>>>14,i=k+j|0,X^=i<<7|i>>>25,i=X+k|0,A^=i<<9|i>>>23,i=A+X|0,j^=i<<13|i>>>19,i=j+A|0,k^=i<<18|i>>>14,i=L+H|0,S^=i<<7|i>>>25,i=S+L|0,P^=i<<9|i>>>23,i=P+S|0,H^=i<<13|i>>>19,i=H+P|0,L^=i<<18|i>>>14,i=Z+D|0,x^=i<<7|i>>>25,i=x+Z|0,N^=i<<9|i>>>23,i=N+x|0,D^=i<<13|i>>>19,i=D+N|0,Z^=i<<18|i>>>14,i=g+x|0,j^=i<<7|i>>>25,i=j+g|0,P^=i<<9|i>>>23,i=P+j|0,x^=i<<13|i>>>19,i=x+P|0,g^=i<<18|i>>>14,i=k+z|0,H^=i<<7|i>>>25,i=H+k|0,N^=i<<9|i>>>23,i=N+H|0,z^=i<<13|i>>>19,i=z+N|0,k^=i<<18|i>>>14,i=L+X|0,D^=i<<7|i>>>25,i=D+L|0,T^=i<<9|i>>>23,i=T+D|0,X^=i<<13|i>>>19,i=X+T|0,L^=i<<18|i>>>14,i=Z+S|0,M^=i<<7|i>>>25,i=M+Z|0,A^=i<<9|i>>>23,i=A+M|0,S^=i<<13|i>>>19,i=S+A|0,Z^=i<<18|i>>>14;e[0]=g>>>0&255,e[1]=g>>>8&255,e[2]=g>>>16&255,e[3]=g>>>24&255,e[4]=k>>>0&255,e[5]=k>>>8&255,e[6]=k>>>16&255,e[7]=k>>>24&255,e[8]=L>>>0&255,e[9]=L>>>8&255,e[10]=L>>>16&255,e[11]=L>>>24&255,e[12]=Z>>>0&255,e[13]=Z>>>8&255,e[14]=Z>>>16&255,e[15]=Z>>>24&255,e[16]=H>>>0&255,e[17]=H>>>8&255,e[18]=H>>>16&255,e[19]=H>>>24&255,e[20]=N>>>0&255,e[21]=N>>>8&255,e[22]=N>>>16&255,e[23]=N>>>24&255,e[24]=T>>>0&255,e[25]=T>>>8&255,e[26]=T>>>16&255,e[27]=T>>>24&255,e[28]=X>>>0&255,e[29]=X>>>8&255,e[30]=X>>>16&255,e[31]=X>>>24&255}function O(e,t,r,n){m(e,t,r,n)}function g(e,t,r,n){w(e,t,r,n)}var j=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function P(e,t,r,n,i,a,o){var c,s,u=new Uint8Array(16),f=new Uint8Array(64);for(s=0;s<16;s++)u[s]=0;for(s=0;s<8;s++)u[s]=a[s];while(i>=64){for(O(f,u,o,j),s=0;s<64;s++)e[t+s]=r[n+s]^f[s];for(c=1,s=8;s<16;s++)c=c+(255&u[s])|0,u[s]=255&c,c>>>=8;i-=64,t+=64,n+=64}if(i>0)for(O(f,u,o,j),s=0;s<i;s++)e[t+s]=r[n+s]^f[s];return 0}function x(e,t,r,n,i){var a,o,c=new Uint8Array(16),s=new Uint8Array(64);for(o=0;o<16;o++)c[o]=0;for(o=0;o<8;o++)c[o]=n[o];while(r>=64){for(O(s,c,i,j),o=0;o<64;o++)e[t+o]=s[o];for(a=1,o=8;o<16;o++)a=a+(255&c[o])|0,c[o]=255&a,a>>>=8;r-=64,t+=64}if(r>0)for(O(s,c,i,j),o=0;o<r;o++)e[t+o]=s[o];return 0}function z(e,t,r,n,i){var a=new Uint8Array(32);g(a,n,i,j);for(var o=new Uint8Array(8),c=0;c<8;c++)o[c]=n[c+16];return x(e,t,r,o,a)}function k(e,t,r,n,i,a,o){var c=new Uint8Array(32);g(c,a,o,j);for(var s=new Uint8Array(8),u=0;u<8;u++)s[u]=a[u+16];return P(e,t,r,n,i,s,c)}var H=function(e){var t,r,n,i,a,o,c,s;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,r=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|r<<3),n=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(r>>>10|n<<6),i=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(n>>>7|i<<9),a=255&e[8]|(255&e[9])<<8,this.r[4]=255&(i>>>4|a<<12),this.r[5]=a>>>1&8190,o=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(a>>>14|o<<2),c=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(o>>>11|c<<5),s=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(c>>>8|s<<8),this.r[9]=s>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function N(e,t,r,n,i,a){var o=new H(a);return o.update(r,n,i),o.finish(e,t),0}function T(e,t,r,n,i,a){var o=new Uint8Array(16);return N(o,0,r,n,i,a),y(e,t,o,0)}function X(e,t,r,n,i){var a;if(r<32)return-1;for(k(e,0,t,0,r,n,i),N(e,16,e,32,r-32,e),a=0;a<16;a++)e[a]=0;return 0}function L(e,t,r,n,i){var a,o=new Uint8Array(32);if(r<32)return-1;if(z(o,0,32,n,i),0!==T(t,16,t,32,r-32,o))return-1;for(k(e,0,t,0,r,n,i),a=0;a<32;a++)e[a]=0;return 0}function D(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]}function M(e){var t,r,n=1;for(t=0;t<16;t++)r=e[t]+n+65535,n=Math.floor(r/65536),e[t]=r-65536*n;e[0]+=n-1+37*(n-1)}function A(e,t,r){for(var n,i=~(r-1),a=0;a<16;a++)n=i&(e[a]^t[a]),e[a]^=n,t[a]^=n}function S(e,r){var n,i,a,o=t(),c=t();for(n=0;n<16;n++)c[n]=r[n];for(M(c),M(c),M(c),i=0;i<2;i++){for(o[0]=c[0]-65517,n=1;n<15;n++)o[n]=c[n]-65535-(o[n-1]>>16&1),o[n-1]&=65535;o[15]=c[15]-32767-(o[14]>>16&1),a=o[15]>>16&1,o[14]&=65535,A(c,o,1-a)}for(n=0;n<16;n++)e[2*n]=255&c[n],e[2*n+1]=c[n]>>8}function Z(e,t){var r=new Uint8Array(32),n=new Uint8Array(32);return S(r,e),S(n,t),v(r,0,n,0)}function R(e){var t=new Uint8Array(32);return S(t,e),1&t[0]}function W(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function U(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]+r[n]}function F(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]-r[n]}function E(e,t,r){var n,i,a=0,o=0,c=0,s=0,u=0,f=0,l=0,d=0,h=0,b=0,p=0,y=0,v=0,m=0,w=0,O=0,g=0,j=0,P=0,x=0,z=0,k=0,H=0,N=0,T=0,X=0,L=0,D=0,M=0,A=0,S=0,Z=r[0],R=r[1],W=r[2],U=r[3],F=r[4],E=r[5],V=r[6],K=r[7],C=r[8],J=r[9],q=r[10],B=r[11],Y=r[12],G=r[13],I=r[14],Q=r[15];n=t[0],a+=n*Z,o+=n*R,c+=n*W,s+=n*U,u+=n*F,f+=n*E,l+=n*V,d+=n*K,h+=n*C,b+=n*J,p+=n*q,y+=n*B,v+=n*Y,m+=n*G,w+=n*I,O+=n*Q,n=t[1],o+=n*Z,c+=n*R,s+=n*W,u+=n*U,f+=n*F,l+=n*E,d+=n*V,h+=n*K,b+=n*C,p+=n*J,y+=n*q,v+=n*B,m+=n*Y,w+=n*G,O+=n*I,g+=n*Q,n=t[2],c+=n*Z,s+=n*R,u+=n*W,f+=n*U,l+=n*F,d+=n*E,h+=n*V,b+=n*K,p+=n*C,y+=n*J,v+=n*q,m+=n*B,w+=n*Y,O+=n*G,g+=n*I,j+=n*Q,n=t[3],s+=n*Z,u+=n*R,f+=n*W,l+=n*U,d+=n*F,h+=n*E,b+=n*V,p+=n*K,y+=n*C,v+=n*J,m+=n*q,w+=n*B,O+=n*Y,g+=n*G,j+=n*I,P+=n*Q,n=t[4],u+=n*Z,f+=n*R,l+=n*W,d+=n*U,h+=n*F,b+=n*E,p+=n*V,y+=n*K,v+=n*C,m+=n*J,w+=n*q,O+=n*B,g+=n*Y,j+=n*G,P+=n*I,x+=n*Q,n=t[5],f+=n*Z,l+=n*R,d+=n*W,h+=n*U,b+=n*F,p+=n*E,y+=n*V,v+=n*K,m+=n*C,w+=n*J,O+=n*q,g+=n*B,j+=n*Y,P+=n*G,x+=n*I,z+=n*Q,n=t[6],l+=n*Z,d+=n*R,h+=n*W,b+=n*U,p+=n*F,y+=n*E,v+=n*V,m+=n*K,w+=n*C,O+=n*J,g+=n*q,j+=n*B,P+=n*Y,x+=n*G,z+=n*I,k+=n*Q,n=t[7],d+=n*Z,h+=n*R,b+=n*W,p+=n*U,y+=n*F,v+=n*E,m+=n*V,w+=n*K,O+=n*C,g+=n*J,j+=n*q,P+=n*B,x+=n*Y,z+=n*G,k+=n*I,H+=n*Q,n=t[8],h+=n*Z,b+=n*R,p+=n*W,y+=n*U,v+=n*F,m+=n*E,w+=n*V,O+=n*K,g+=n*C,j+=n*J,P+=n*q,x+=n*B,z+=n*Y,k+=n*G,H+=n*I,N+=n*Q,n=t[9],b+=n*Z,p+=n*R,y+=n*W,v+=n*U,m+=n*F,w+=n*E,O+=n*V,g+=n*K,j+=n*C,P+=n*J,x+=n*q,z+=n*B,k+=n*Y,H+=n*G,N+=n*I,T+=n*Q,n=t[10],p+=n*Z,y+=n*R,v+=n*W,m+=n*U,w+=n*F,O+=n*E,g+=n*V,j+=n*K,P+=n*C,x+=n*J,z+=n*q,k+=n*B,H+=n*Y,N+=n*G,T+=n*I,X+=n*Q,n=t[11],y+=n*Z,v+=n*R,m+=n*W,w+=n*U,O+=n*F,g+=n*E,j+=n*V,P+=n*K,x+=n*C,z+=n*J,k+=n*q,H+=n*B,N+=n*Y,T+=n*G,X+=n*I,L+=n*Q,n=t[12],v+=n*Z,m+=n*R,w+=n*W,O+=n*U,g+=n*F,j+=n*E,P+=n*V,x+=n*K,z+=n*C,k+=n*J,H+=n*q,N+=n*B,T+=n*Y,X+=n*G,L+=n*I,D+=n*Q,n=t[13],m+=n*Z,w+=n*R,O+=n*W,g+=n*U,j+=n*F,P+=n*E,x+=n*V,z+=n*K,k+=n*C,H+=n*J,N+=n*q,T+=n*B,X+=n*Y,L+=n*G,D+=n*I,M+=n*Q,n=t[14],w+=n*Z,O+=n*R,g+=n*W,j+=n*U,P+=n*F,x+=n*E,z+=n*V,k+=n*K,H+=n*C,N+=n*J,T+=n*q,X+=n*B,L+=n*Y,D+=n*G,M+=n*I,A+=n*Q,n=t[15],O+=n*Z,g+=n*R,j+=n*W,P+=n*U,x+=n*F,z+=n*E,k+=n*V,H+=n*K,N+=n*C,T+=n*J,X+=n*q,L+=n*B,D+=n*Y,M+=n*G,A+=n*I,S+=n*Q,a+=38*g,o+=38*j,c+=38*P,s+=38*x,u+=38*z,f+=38*k,l+=38*H,d+=38*N,h+=38*T,b+=38*X,p+=38*L,y+=38*D,v+=38*M,m+=38*A,w+=38*S,i=1,n=a+i+65535,i=Math.floor(n/65536),a=n-65536*i,n=o+i+65535,i=Math.floor(n/65536),o=n-65536*i,n=c+i+65535,i=Math.floor(n/65536),c=n-65536*i,n=s+i+65535,i=Math.floor(n/65536),s=n-65536*i,n=u+i+65535,i=Math.floor(n/65536),u=n-65536*i,n=f+i+65535,i=Math.floor(n/65536),f=n-65536*i,n=l+i+65535,i=Math.floor(n/65536),l=n-65536*i,n=d+i+65535,i=Math.floor(n/65536),d=n-65536*i,n=h+i+65535,i=Math.floor(n/65536),h=n-65536*i,n=b+i+65535,i=Math.floor(n/65536),b=n-65536*i,n=p+i+65535,i=Math.floor(n/65536),p=n-65536*i,n=y+i+65535,i=Math.floor(n/65536),y=n-65536*i,n=v+i+65535,i=Math.floor(n/65536),v=n-65536*i,n=m+i+65535,i=Math.floor(n/65536),m=n-65536*i,n=w+i+65535,i=Math.floor(n/65536),w=n-65536*i,n=O+i+65535,i=Math.floor(n/65536),O=n-65536*i,a+=i-1+37*(i-1),i=1,n=a+i+65535,i=Math.floor(n/65536),a=n-65536*i,n=o+i+65535,i=Math.floor(n/65536),o=n-65536*i,n=c+i+65535,i=Math.floor(n/65536),c=n-65536*i,n=s+i+65535,i=Math.floor(n/65536),s=n-65536*i,n=u+i+65535,i=Math.floor(n/65536),u=n-65536*i,n=f+i+65535,i=Math.floor(n/65536),f=n-65536*i,n=l+i+65535,i=Math.floor(n/65536),l=n-65536*i,n=d+i+65535,i=Math.floor(n/65536),d=n-65536*i,n=h+i+65535,i=Math.floor(n/65536),h=n-65536*i,n=b+i+65535,i=Math.floor(n/65536),b=n-65536*i,n=p+i+65535,i=Math.floor(n/65536),p=n-65536*i,n=y+i+65535,i=Math.floor(n/65536),y=n-65536*i,n=v+i+65535,i=Math.floor(n/65536),v=n-65536*i,n=m+i+65535,i=Math.floor(n/65536),m=n-65536*i,n=w+i+65535,i=Math.floor(n/65536),w=n-65536*i,n=O+i+65535,i=Math.floor(n/65536),O=n-65536*i,a+=i-1+37*(i-1),e[0]=a,e[1]=o,e[2]=c,e[3]=s,e[4]=u,e[5]=f,e[6]=l,e[7]=d,e[8]=h,e[9]=b,e[10]=p,e[11]=y,e[12]=v,e[13]=m,e[14]=w,e[15]=O}function V(e,t){E(e,t,t)}function K(e,r){var n,i=t();for(n=0;n<16;n++)i[n]=r[n];for(n=253;n>=0;n--)V(i,i),2!==n&&4!==n&&E(i,i,r);for(n=0;n<16;n++)e[n]=i[n]}function C(e,r){var n,i=t();for(n=0;n<16;n++)i[n]=r[n];for(n=250;n>=0;n--)V(i,i),1!==n&&E(i,i,r);for(n=0;n<16;n++)e[n]=i[n]}function J(e,r,n){var i,a,o=new Uint8Array(32),c=new Float64Array(80),u=t(),f=t(),l=t(),d=t(),h=t(),b=t();for(a=0;a<31;a++)o[a]=r[a];for(o[31]=127&r[31]|64,o[0]&=248,W(c,n),a=0;a<16;a++)f[a]=c[a],d[a]=u[a]=l[a]=0;for(u[0]=d[0]=1,a=254;a>=0;--a)i=o[a>>>3]>>>(7&a)&1,A(u,f,i),A(l,d,i),U(h,u,l),F(u,u,l),U(l,f,d),F(f,f,d),V(d,h),V(b,u),E(u,l,u),E(l,f,h),U(h,u,l),F(u,u,l),V(f,u),F(l,d,b),E(u,l,s),U(u,u,d),E(l,l,u),E(u,d,b),E(d,f,c),V(f,h),A(u,f,i),A(l,d,i);for(a=0;a<16;a++)c[a+16]=u[a],c[a+32]=l[a],c[a+48]=f[a],c[a+64]=d[a];var p=c.subarray(32),y=c.subarray(16);return K(p,p),E(y,y,p),S(e,y),0}function q(e,t){return J(e,t,a)}function B(e,t){return n(t,32),q(e,t)}function Y(e,t,r){var n=new Uint8Array(32);return J(n,r,t),g(e,i,n,j)}H.prototype.blocks=function(e,t,r){var n,i,a,o,c,s,u,f,l,d,h,b,p,y,v,m,w,O,g,j=this.fin?0:2048,P=this.h[0],x=this.h[1],z=this.h[2],k=this.h[3],H=this.h[4],N=this.h[5],T=this.h[6],X=this.h[7],L=this.h[8],D=this.h[9],M=this.r[0],A=this.r[1],S=this.r[2],Z=this.r[3],R=this.r[4],W=this.r[5],U=this.r[6],F=this.r[7],E=this.r[8],V=this.r[9];while(r>=16)n=255&e[t+0]|(255&e[t+1])<<8,P+=8191&n,i=255&e[t+2]|(255&e[t+3])<<8,x+=8191&(n>>>13|i<<3),a=255&e[t+4]|(255&e[t+5])<<8,z+=8191&(i>>>10|a<<6),o=255&e[t+6]|(255&e[t+7])<<8,k+=8191&(a>>>7|o<<9),c=255&e[t+8]|(255&e[t+9])<<8,H+=8191&(o>>>4|c<<12),N+=c>>>1&8191,s=255&e[t+10]|(255&e[t+11])<<8,T+=8191&(c>>>14|s<<2),u=255&e[t+12]|(255&e[t+13])<<8,X+=8191&(s>>>11|u<<5),f=255&e[t+14]|(255&e[t+15])<<8,L+=8191&(u>>>8|f<<8),D+=f>>>5|j,l=0,d=l,d+=P*M,d+=x*(5*V),d+=z*(5*E),d+=k*(5*F),d+=H*(5*U),l=d>>>13,d&=8191,d+=N*(5*W),d+=T*(5*R),d+=X*(5*Z),d+=L*(5*S),d+=D*(5*A),l+=d>>>13,d&=8191,h=l,h+=P*A,h+=x*M,h+=z*(5*V),h+=k*(5*E),h+=H*(5*F),l=h>>>13,h&=8191,h+=N*(5*U),h+=T*(5*W),h+=X*(5*R),h+=L*(5*Z),h+=D*(5*S),l+=h>>>13,h&=8191,b=l,b+=P*S,b+=x*A,b+=z*M,b+=k*(5*V),b+=H*(5*E),l=b>>>13,b&=8191,b+=N*(5*F),b+=T*(5*U),b+=X*(5*W),b+=L*(5*R),b+=D*(5*Z),l+=b>>>13,b&=8191,p=l,p+=P*Z,p+=x*S,p+=z*A,p+=k*M,p+=H*(5*V),l=p>>>13,p&=8191,p+=N*(5*E),p+=T*(5*F),p+=X*(5*U),p+=L*(5*W),p+=D*(5*R),l+=p>>>13,p&=8191,y=l,y+=P*R,y+=x*Z,y+=z*S,y+=k*A,y+=H*M,l=y>>>13,y&=8191,y+=N*(5*V),y+=T*(5*E),y+=X*(5*F),y+=L*(5*U),y+=D*(5*W),l+=y>>>13,y&=8191,v=l,v+=P*W,v+=x*R,v+=z*Z,v+=k*S,v+=H*A,l=v>>>13,v&=8191,v+=N*M,v+=T*(5*V),v+=X*(5*E),v+=L*(5*F),v+=D*(5*U),l+=v>>>13,v&=8191,m=l,m+=P*U,m+=x*W,m+=z*R,m+=k*Z,m+=H*S,l=m>>>13,m&=8191,m+=N*A,m+=T*M,m+=X*(5*V),m+=L*(5*E),m+=D*(5*F),l+=m>>>13,m&=8191,w=l,w+=P*F,w+=x*U,w+=z*W,w+=k*R,w+=H*Z,l=w>>>13,w&=8191,w+=N*S,w+=T*A,w+=X*M,w+=L*(5*V),w+=D*(5*E),l+=w>>>13,w&=8191,O=l,O+=P*E,O+=x*F,O+=z*U,O+=k*W,O+=H*R,l=O>>>13,O&=8191,O+=N*Z,O+=T*S,O+=X*A,O+=L*M,O+=D*(5*V),l+=O>>>13,O&=8191,g=l,g+=P*V,g+=x*E,g+=z*F,g+=k*U,g+=H*W,l=g>>>13,g&=8191,g+=N*R,g+=T*Z,g+=X*S,g+=L*A,g+=D*M,l+=g>>>13,g&=8191,l=(l<<2)+l|0,l=l+d|0,d=8191&l,l>>>=13,h+=l,P=d,x=h,z=b,k=p,H=y,N=v,T=m,X=w,L=O,D=g,t+=16,r-=16;this.h[0]=P,this.h[1]=x,this.h[2]=z,this.h[3]=k,this.h[4]=H,this.h[5]=N,this.h[6]=T,this.h[7]=X,this.h[8]=L,this.h[9]=D},H.prototype.finish=function(e,t){var r,n,i,a,o=new Uint16Array(10);if(this.leftover){for(a=this.leftover,this.buffer[a++]=1;a<16;a++)this.buffer[a]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(r=this.h[1]>>>13,this.h[1]&=8191,a=2;a<10;a++)this.h[a]+=r,r=this.h[a]>>>13,this.h[a]&=8191;for(this.h[0]+=5*r,r=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=r,r=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=r,o[0]=this.h[0]+5,r=o[0]>>>13,o[0]&=8191,a=1;a<10;a++)o[a]=this.h[a]+r,r=o[a]>>>13,o[a]&=8191;for(o[9]-=8192,n=(1^r)-1,a=0;a<10;a++)o[a]&=n;for(n=~n,a=0;a<10;a++)this.h[a]=this.h[a]&n|o[a];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),i=this.h[0]+this.pad[0],this.h[0]=65535&i,a=1;a<8;a++)i=(this.h[a]+this.pad[a]|0)+(i>>>16)|0,this.h[a]=65535&i;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},H.prototype.update=function(e,t,r){var n,i;if(this.leftover){for(i=16-this.leftover,i>r&&(i=r),n=0;n<i;n++)this.buffer[this.leftover+n]=e[t+n];if(r-=i,t+=i,this.leftover+=i,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(r>=16&&(i=r-r%16,this.blocks(e,t,i),t+=i,r-=i),r){for(n=0;n<r;n++)this.buffer[this.leftover+n]=e[t+n];this.leftover+=r}};var G=X,I=L;function Q(e,t,r,n,i,a){var o=new Uint8Array(32);return Y(o,i,a),G(e,t,r,n,o)}function _(e,t,r,n,i,a){var o=new Uint8Array(32);return Y(o,i,a),I(e,t,r,n,o)}var $=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function ee(e,t,r,n){var i,a,o,c,s,u,f,l,d,h,b,p,y,v,m,w,O,g,j,P,x,z,k,H,N,T,X=new Int32Array(16),L=new Int32Array(16),D=e[0],M=e[1],A=e[2],S=e[3],Z=e[4],R=e[5],W=e[6],U=e[7],F=t[0],E=t[1],V=t[2],K=t[3],C=t[4],J=t[5],q=t[6],B=t[7],Y=0;while(n>=128){for(j=0;j<16;j++)P=8*j+Y,X[j]=r[P+0]<<24|r[P+1]<<16|r[P+2]<<8|r[P+3],L[j]=r[P+4]<<24|r[P+5]<<16|r[P+6]<<8|r[P+7];for(j=0;j<80;j++)if(i=D,a=M,o=A,c=S,s=Z,u=R,f=W,l=U,d=F,h=E,b=V,p=K,y=C,v=J,m=q,w=B,x=U,z=B,k=65535&z,H=z>>>16,N=65535&x,T=x>>>16,x=(Z>>>14|C<<18)^(Z>>>18|C<<14)^(C>>>9|Z<<23),z=(C>>>14|Z<<18)^(C>>>18|Z<<14)^(Z>>>9|C<<23),k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,x=Z&R^~Z&W,z=C&J^~C&q,k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,x=$[2*j],z=$[2*j+1],k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,x=X[j%16],z=L[j%16],k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,H+=k>>>16,N+=H>>>16,T+=N>>>16,O=65535&N|T<<16,g=65535&k|H<<16,x=O,z=g,k=65535&z,H=z>>>16,N=65535&x,T=x>>>16,x=(D>>>28|F<<4)^(F>>>2|D<<30)^(F>>>7|D<<25),z=(F>>>28|D<<4)^(D>>>2|F<<30)^(D>>>7|F<<25),k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,x=D&M^D&A^M&A,z=F&E^F&V^E&V,k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,H+=k>>>16,N+=H>>>16,T+=N>>>16,l=65535&N|T<<16,w=65535&k|H<<16,x=c,z=p,k=65535&z,H=z>>>16,N=65535&x,T=x>>>16,x=O,z=g,k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,H+=k>>>16,N+=H>>>16,T+=N>>>16,c=65535&N|T<<16,p=65535&k|H<<16,M=i,A=a,S=o,Z=c,R=s,W=u,U=f,D=l,E=d,V=h,K=b,C=p,J=y,q=v,B=m,F=w,j%16===15)for(P=0;P<16;P++)x=X[P],z=L[P],k=65535&z,H=z>>>16,N=65535&x,T=x>>>16,x=X[(P+9)%16],z=L[(P+9)%16],k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,O=X[(P+1)%16],g=L[(P+1)%16],x=(O>>>1|g<<31)^(O>>>8|g<<24)^O>>>7,z=(g>>>1|O<<31)^(g>>>8|O<<24)^(g>>>7|O<<25),k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,O=X[(P+14)%16],g=L[(P+14)%16],x=(O>>>19|g<<13)^(g>>>29|O<<3)^O>>>6,z=(g>>>19|O<<13)^(O>>>29|g<<3)^(g>>>6|O<<26),k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,H+=k>>>16,N+=H>>>16,T+=N>>>16,X[P]=65535&N|T<<16,L[P]=65535&k|H<<16;x=D,z=F,k=65535&z,H=z>>>16,N=65535&x,T=x>>>16,x=e[0],z=t[0],k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,H+=k>>>16,N+=H>>>16,T+=N>>>16,e[0]=D=65535&N|T<<16,t[0]=F=65535&k|H<<16,x=M,z=E,k=65535&z,H=z>>>16,N=65535&x,T=x>>>16,x=e[1],z=t[1],k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,H+=k>>>16,N+=H>>>16,T+=N>>>16,e[1]=M=65535&N|T<<16,t[1]=E=65535&k|H<<16,x=A,z=V,k=65535&z,H=z>>>16,N=65535&x,T=x>>>16,x=e[2],z=t[2],k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,H+=k>>>16,N+=H>>>16,T+=N>>>16,e[2]=A=65535&N|T<<16,t[2]=V=65535&k|H<<16,x=S,z=K,k=65535&z,H=z>>>16,N=65535&x,T=x>>>16,x=e[3],z=t[3],k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,H+=k>>>16,N+=H>>>16,T+=N>>>16,e[3]=S=65535&N|T<<16,t[3]=K=65535&k|H<<16,x=Z,z=C,k=65535&z,H=z>>>16,N=65535&x,T=x>>>16,x=e[4],z=t[4],k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,H+=k>>>16,N+=H>>>16,T+=N>>>16,e[4]=Z=65535&N|T<<16,t[4]=C=65535&k|H<<16,x=R,z=J,k=65535&z,H=z>>>16,N=65535&x,T=x>>>16,x=e[5],z=t[5],k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,H+=k>>>16,N+=H>>>16,T+=N>>>16,e[5]=R=65535&N|T<<16,t[5]=J=65535&k|H<<16,x=W,z=q,k=65535&z,H=z>>>16,N=65535&x,T=x>>>16,x=e[6],z=t[6],k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,H+=k>>>16,N+=H>>>16,T+=N>>>16,e[6]=W=65535&N|T<<16,t[6]=q=65535&k|H<<16,x=U,z=B,k=65535&z,H=z>>>16,N=65535&x,T=x>>>16,x=e[7],z=t[7],k+=65535&z,H+=z>>>16,N+=65535&x,T+=x>>>16,H+=k>>>16,N+=H>>>16,T+=N>>>16,e[7]=U=65535&N|T<<16,t[7]=B=65535&k|H<<16,Y+=128,n-=128}return n}function te(e,t,r){var n,i=new Int32Array(8),a=new Int32Array(8),o=new Uint8Array(256),c=r;for(i[0]=1779033703,i[1]=3144134277,i[2]=1013904242,i[3]=2773480762,i[4]=1359893119,i[5]=2600822924,i[6]=528734635,i[7]=1541459225,a[0]=4089235720,a[1]=2227873595,a[2]=4271175723,a[3]=1595750129,a[4]=2917565137,a[5]=725511199,a[6]=4215389547,a[7]=327033209,ee(i,a,t,r),r%=128,n=0;n<r;n++)o[n]=t[c-r+n];for(o[r]=128,r=256-128*(r<112?1:0),o[r-9]=0,b(o,r-8,c/536870912|0,c<<3),ee(i,a,o,r),n=0;n<8;n++)b(e,8*n,i[n],a[n]);return 0}function re(e,r){var n=t(),i=t(),a=t(),o=t(),c=t(),s=t(),u=t(),l=t(),d=t();F(n,e[1],e[0]),F(d,r[1],r[0]),E(n,n,d),U(i,e[0],e[1]),U(d,r[0],r[1]),E(i,i,d),E(a,e[3],r[3]),E(a,a,f),E(o,e[2],r[2]),U(o,o,o),F(c,i,n),F(s,o,a),U(u,o,a),U(l,i,n),E(e[0],c,s),E(e[1],l,u),E(e[2],u,s),E(e[3],c,l)}function ne(e,t,r){var n;for(n=0;n<4;n++)A(e[n],t[n],r)}function ie(e,r){var n=t(),i=t(),a=t();K(a,r[2]),E(n,r[0],a),E(i,r[1],a),S(e,i),e[31]^=R(n)<<7}function ae(e,t,r){var n,i;for(D(e[0],o),D(e[1],c),D(e[2],c),D(e[3],o),i=255;i>=0;--i)n=r[i/8|0]>>(7&i)&1,ne(e,t,n),re(t,e),re(e,e),ne(e,t,n)}function oe(e,r){var n=[t(),t(),t(),t()];D(n[0],l),D(n[1],d),D(n[2],c),E(n[3],l,d),ae(e,n,r)}function ce(e,r,i){var a,o=new Uint8Array(64),c=[t(),t(),t(),t()];for(i||n(r,32),te(o,r,32),o[0]&=248,o[31]&=127,o[31]|=64,oe(c,o),ie(e,c),a=0;a<32;a++)r[a+32]=e[a];return 0}var se=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function ue(e,t){var r,n,i,a;for(n=63;n>=32;--n){for(r=0,i=n-32,a=n-12;i<a;++i)t[i]+=r-16*t[n]*se[i-(n-32)],r=Math.floor((t[i]+128)/256),t[i]-=256*r;t[i]+=r,t[n]=0}for(r=0,i=0;i<32;i++)t[i]+=r-(t[31]>>4)*se[i],r=t[i]>>8,t[i]&=255;for(i=0;i<32;i++)t[i]-=r*se[i];for(n=0;n<32;n++)t[n+1]+=t[n]>>8,e[n]=255&t[n]}function fe(e){var t,r=new Float64Array(64);for(t=0;t<64;t++)r[t]=e[t];for(t=0;t<64;t++)e[t]=0;ue(e,r)}function le(e,r,n,i){var a,o,c=new Uint8Array(64),s=new Uint8Array(64),u=new Uint8Array(64),f=new Float64Array(64),l=[t(),t(),t(),t()];te(c,i,32),c[0]&=248,c[31]&=127,c[31]|=64;var d=n+64;for(a=0;a<n;a++)e[64+a]=r[a];for(a=0;a<32;a++)e[32+a]=c[32+a];for(te(u,e.subarray(32),n+32),fe(u),oe(l,u),ie(e,l),a=32;a<64;a++)e[a]=i[a];for(te(s,e,n+64),fe(s),a=0;a<64;a++)f[a]=0;for(a=0;a<32;a++)f[a]=u[a];for(a=0;a<32;a++)for(o=0;o<32;o++)f[a+o]+=s[a]*c[o];return ue(e.subarray(32),f),d}function de(e,r){var n=t(),i=t(),a=t(),s=t(),f=t(),l=t(),d=t();return D(e[2],c),W(e[1],r),V(a,e[1]),E(s,a,u),F(a,a,e[2]),U(s,e[2],s),V(f,s),V(l,f),E(d,l,f),E(n,d,a),E(n,n,s),C(n,n),E(n,n,a),E(n,n,s),E(n,n,s),E(e[0],n,s),V(i,e[0]),E(i,i,s),Z(i,a)&&E(e[0],e[0],h),V(i,e[0]),E(i,i,s),Z(i,a)?-1:(R(e[0])===r[31]>>7&&F(e[0],o,e[0]),E(e[3],e[0],e[1]),0)}function he(e,r,n,i){var a,o=new Uint8Array(32),c=new Uint8Array(64),s=[t(),t(),t(),t()],u=[t(),t(),t(),t()];if(n<64)return-1;if(de(u,i))return-1;for(a=0;a<n;a++)e[a]=r[a];for(a=0;a<32;a++)e[a+32]=i[a];if(te(c,e,n),fe(c),ae(s,u,c),oe(u,r.subarray(32)),re(s,u),ie(o,s),n-=64,v(r,0,o,0)){for(a=0;a<n;a++)e[a]=0;return-1}for(a=0;a<n;a++)e[a]=r[a+64];return n}var be=32,pe=24,ye=32,ve=16,me=32,we=32,Oe=32,ge=32,je=32,Pe=pe,xe=ye,ze=ve,ke=64,He=32,Ne=64,Te=32,Xe=64;function Le(e,t){if(e.length!==be)throw new Error("bad key size");if(t.length!==pe)throw new Error("bad nonce size")}function De(e,t){if(e.length!==Oe)throw new Error("bad public key size");if(t.length!==ge)throw new Error("bad secret key size")}function Me(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function Ae(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:g,crypto_stream_xor:k,crypto_stream:z,crypto_stream_salsa20_xor:P,crypto_stream_salsa20:x,crypto_onetimeauth:N,crypto_onetimeauth_verify:T,crypto_verify_16:y,crypto_verify_32:v,crypto_secretbox:X,crypto_secretbox_open:L,crypto_scalarmult:J,crypto_scalarmult_base:q,crypto_box_beforenm:Y,crypto_box_afternm:G,crypto_box:Q,crypto_box_open:_,crypto_box_keypair:B,crypto_hash:te,crypto_sign:le,crypto_sign_keypair:ce,crypto_sign_open:he,crypto_secretbox_KEYBYTES:be,crypto_secretbox_NONCEBYTES:pe,crypto_secretbox_ZEROBYTES:ye,crypto_secretbox_BOXZEROBYTES:ve,crypto_scalarmult_BYTES:me,crypto_scalarmult_SCALARBYTES:we,crypto_box_PUBLICKEYBYTES:Oe,crypto_box_SECRETKEYBYTES:ge,crypto_box_BEFORENMBYTES:je,crypto_box_NONCEBYTES:Pe,crypto_box_ZEROBYTES:xe,crypto_box_BOXZEROBYTES:ze,crypto_sign_BYTES:ke,crypto_sign_PUBLICKEYBYTES:He,crypto_sign_SECRETKEYBYTES:Ne,crypto_sign_SEEDBYTES:Te,crypto_hash_BYTES:Xe,gf:t,D:u,L:se,pack25519:S,unpack25519:W,M:E,A:U,S:V,Z:F,pow2523:C,add:re,set25519:D,modL:ue,scalarmult:ae,scalarbase:oe},e.randomBytes=function(e){var t=new Uint8Array(e);return n(t,e),t},e.secretbox=function(e,t,r){Me(e,t,r),Le(r,t);for(var n=new Uint8Array(ye+e.length),i=new Uint8Array(n.length),a=0;a<e.length;a++)n[a+ye]=e[a];return X(i,n,n.length,t,r),i.subarray(ve)},e.secretbox.open=function(e,t,r){Me(e,t,r),Le(r,t);for(var n=new Uint8Array(ve+e.length),i=new Uint8Array(n.length),a=0;a<e.length;a++)n[a+ve]=e[a];return n.length<32||0!==L(i,n,n.length,t,r)?null:i.subarray(ye)},e.secretbox.keyLength=be,e.secretbox.nonceLength=pe,e.secretbox.overheadLength=ve,e.scalarMult=function(e,t){if(Me(e,t),e.length!==we)throw new Error("bad n size");if(t.length!==me)throw new Error("bad p size");var r=new Uint8Array(me);return J(r,e,t),r},e.scalarMult.base=function(e){if(Me(e),e.length!==we)throw new Error("bad n size");var t=new Uint8Array(me);return q(t,e),t},e.scalarMult.scalarLength=we,e.scalarMult.groupElementLength=me,e.box=function(t,r,n,i){var a=e.box.before(n,i);return e.secretbox(t,r,a)},e.box.before=function(e,t){Me(e,t),De(e,t);var r=new Uint8Array(je);return Y(r,e,t),r},e.box.after=e.secretbox,e.box.open=function(t,r,n,i){var a=e.box.before(n,i);return e.secretbox.open(t,r,a)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(Oe),t=new Uint8Array(ge);return B(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(Me(e),e.length!==ge)throw new Error("bad secret key size");var t=new Uint8Array(Oe);return q(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=Oe,e.box.secretKeyLength=ge,e.box.sharedKeyLength=je,e.box.nonceLength=Pe,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(Me(e,t),t.length!==Ne)throw new Error("bad secret key size");var r=new Uint8Array(ke+e.length);return le(r,e,e.length,t),r},e.sign.open=function(e,t){if(Me(e,t),t.length!==He)throw new Error("bad public key size");var r=new Uint8Array(e.length),n=he(r,e,e.length,t);if(n<0)return null;for(var i=new Uint8Array(n),a=0;a<i.length;a++)i[a]=r[a];return i},e.sign.detached=function(t,r){for(var n=e.sign(t,r),i=new Uint8Array(ke),a=0;a<i.length;a++)i[a]=n[a];return i},e.sign.detached.verify=function(e,t,r){if(Me(e,t,r),t.length!==ke)throw new Error("bad signature size");if(r.length!==He)throw new Error("bad public key size");var n,i=new Uint8Array(ke+e.length),a=new Uint8Array(ke+e.length);for(n=0;n<ke;n++)i[n]=t[n];for(n=0;n<e.length;n++)i[n+ke]=e[n];return he(a,i,i.length,r)>=0},e.sign.keyPair=function(){var e=new Uint8Array(He),t=new Uint8Array(Ne);return ce(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(Me(e),e.length!==Ne)throw new Error("bad secret key size");for(var t=new Uint8Array(He),r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(Me(e),e.length!==Te)throw new Error("bad seed size");for(var t=new Uint8Array(He),r=new Uint8Array(Ne),n=0;n<32;n++)r[n]=e[n];return ce(t,r,!0),{publicKey:t,secretKey:r}},e.sign.publicKeyLength=He,e.sign.secretKeyLength=Ne,e.sign.seedLength=Te,e.sign.signatureLength=ke,e.hash=function(e){Me(e);var t=new Uint8Array(Xe);return te(t,e,e.length),t},e.hash.hashLength=Xe,e.verify=function(e,t){return Me(e,t),0!==e.length&&0!==t.length&&(e.length===t.length&&0===p(e,0,t,0,e.length))},e.setPRNG=function(e){n=e},function(){var t="undefined"!==typeof self?self.crypto||self.msCrypto:null;if(t&&t.getRandomValues){var n=65536;e.setPRNG((function(e,r){var i,a=new Uint8Array(r);for(i=0;i<r;i+=n)t.getRandomValues(a.subarray(i,i+Math.min(r-i,n)));for(i=0;i<r;i++)e[i]=a[i];Ae(a)}))}else t=r(25),t&&t.randomBytes&&e.setPRNG((function(e,r){var n,i=t.randomBytes(r);for(n=0;n<r;n++)e[n]=i[n];Ae(i)}))}()})(e.exports?e.exports:self.nacl=self.nacl||{})},8327:function(e,t,r){(function(t){var r="Input must be an string, Buffer or Uint8Array";function n(e){var n;if(e instanceof Uint8Array)n=e;else if(e instanceof t)n=new Uint8Array(e);else{if("string"!==typeof e)throw new Error(r);n=new Uint8Array(t.from(e,"utf8"))}return n}function i(e){return Array.prototype.map.call(e,(function(e){return(e<16?"0":"")+e.toString(16)})).join("")}function a(e){return(4294967296+e).toString(16).substring(1)}function o(e,t,r){for(var n="\n"+e+" = ",i=0;i<t.length;i+=2){if(32===r)n+=a(t[i]).toUpperCase(),n+=" ",n+=a(t[i+1]).toUpperCase();else{if(64!==r)throw new Error("Invalid size "+r);n+=a(t[i+1]).toUpperCase(),n+=a(t[i]).toUpperCase()}i%6===4?n+="\n"+new Array(e.length+4).join(" "):i<t.length-2&&(n+=" ")}console.log(n)}function c(e,t,r){for(var n=(new Date).getTime(),i=new Uint8Array(t),a=0;a<t;a++)i[a]=a%256;var o=(new Date).getTime();for(console.log("Generated random input in "+(o-n)+"ms"),n=o,a=0;a<r;a++){var c=e(i),s=(new Date).getTime(),u=s-n;n=s,console.log("Hashed in "+u+"ms: "+c.substring(0,20)+"..."),console.log(Math.round(t/(1<<20)/(u/1e3)*100)/100+" MB PER SECOND")}}e.exports={normalizeInput:n,toHex:i,debugPrint:o,testSpeed:c}}).call(this,r("1c35").Buffer)},"834a":function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r("1299"),i=r("1f28");const a={12:128,15:160,18:192,21:224,24:256};function o(e=12,t=!1){return Object(n["isReady"])()&&!t?Object(n["bip39Generate"])(e):Object(i["a"])(a[e])}},8418:function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("fe84"),i=r("c827");function a(e,t){const r=i["b"].encode(Object(n["u8aToBuffer"])(Object(n["u8aToU8a"])(e)));return t?"z"+r:r}},8971:function(e,t,r){"use strict";r.r(t),r.d(t,"blake2AsHex",(function(){return a})),r.d(t,"blake2AsU8a",(function(){return i["a"]}));var n=r("fe84"),i=r("0ef0");function a(e,t=256){return Object(n["u8aToHex"])(Object(i["a"])(e,t))}},"89fe":function(e,t,r){(function(t){var n=r("1555").UINT64,i=n("11400714785074694791"),a=n("14029467366897019727"),o=n("1609587929392839161"),c=n("9650029242287828579"),s=n("2870177450012600261");function u(e){for(var t=[],r=0,n=e.length;r<n;r++){var i=e.charCodeAt(r);i<128?t.push(i):i<2048?t.push(192|i>>6,128|63&i):i<55296||i>=57344?t.push(224|i>>12,128|i>>6&63,128|63&i):(r++,i=65536+((1023&i)<<10|1023&e.charCodeAt(r)),t.push(240|i>>18,128|i>>12&63,128|i>>6&63,128|63&i))}return new Uint8Array(t)}function f(){return 2==arguments.length?new f(arguments[1]).update(arguments[0]).digest():this instanceof f?void l.call(this,arguments[0]):new f(arguments[0])}function l(e){return this.seed=e instanceof n?e.clone():n(e),this.v1=this.seed.clone().add(i).add(a),this.v2=this.seed.clone().add(a),this.v3=this.seed.clone(),this.v4=this.seed.clone().subtract(i),this.total_len=0,this.memsize=0,this.memory=null,this}f.prototype.init=l,f.prototype.update=function(e){var r,o="string"==typeof e;o&&(e=u(e),o=!1,r=!0),"undefined"!==typeof ArrayBuffer&&e instanceof ArrayBuffer&&(r=!0,e=new Uint8Array(e));var c=0,s=e.length,f=c+s;if(0==s)return this;if(this.total_len+=s,0==this.memsize&&(this.memory=o?"":r?new Uint8Array(32):new t(32)),this.memsize+s<32)return o?this.memory+=e:r?this.memory.set(e.subarray(0,s),this.memsize):e.copy(this.memory,this.memsize,0,s),this.memsize+=s,this;if(this.memsize>0){o?this.memory+=e.slice(0,32-this.memsize):r?this.memory.set(e.subarray(0,32-this.memsize),this.memsize):e.copy(this.memory,this.memsize,0,32-this.memsize);var l=0;if(o)h=n(this.memory.charCodeAt(l+1)<<8|this.memory.charCodeAt(l),this.memory.charCodeAt(l+3)<<8|this.memory.charCodeAt(l+2),this.memory.charCodeAt(l+5)<<8|this.memory.charCodeAt(l+4),this.memory.charCodeAt(l+7)<<8|this.memory.charCodeAt(l+6)),this.v1.add(h.multiply(a)).rotl(31).multiply(i),l+=8,h=n(this.memory.charCodeAt(l+1)<<8|this.memory.charCodeAt(l),this.memory.charCodeAt(l+3)<<8|this.memory.charCodeAt(l+2),this.memory.charCodeAt(l+5)<<8|this.memory.charCodeAt(l+4),this.memory.charCodeAt(l+7)<<8|this.memory.charCodeAt(l+6)),this.v2.add(h.multiply(a)).rotl(31).multiply(i),l+=8,h=n(this.memory.charCodeAt(l+1)<<8|this.memory.charCodeAt(l),this.memory.charCodeAt(l+3)<<8|this.memory.charCodeAt(l+2),this.memory.charCodeAt(l+5)<<8|this.memory.charCodeAt(l+4),this.memory.charCodeAt(l+7)<<8|this.memory.charCodeAt(l+6)),this.v3.add(h.multiply(a)).rotl(31).multiply(i),l+=8,h=n(this.memory.charCodeAt(l+1)<<8|this.memory.charCodeAt(l),this.memory.charCodeAt(l+3)<<8|this.memory.charCodeAt(l+2),this.memory.charCodeAt(l+5)<<8|this.memory.charCodeAt(l+4),this.memory.charCodeAt(l+7)<<8|this.memory.charCodeAt(l+6)),this.v4.add(h.multiply(a)).rotl(31).multiply(i);else h=n(this.memory[l+1]<<8|this.memory[l],this.memory[l+3]<<8|this.memory[l+2],this.memory[l+5]<<8|this.memory[l+4],this.memory[l+7]<<8|this.memory[l+6]),this.v1.add(h.multiply(a)).rotl(31).multiply(i),l+=8,h=n(this.memory[l+1]<<8|this.memory[l],this.memory[l+3]<<8|this.memory[l+2],this.memory[l+5]<<8|this.memory[l+4],this.memory[l+7]<<8|this.memory[l+6]),this.v2.add(h.multiply(a)).rotl(31).multiply(i),l+=8,h=n(this.memory[l+1]<<8|this.memory[l],this.memory[l+3]<<8|this.memory[l+2],this.memory[l+5]<<8|this.memory[l+4],this.memory[l+7]<<8|this.memory[l+6]),this.v3.add(h.multiply(a)).rotl(31).multiply(i),l+=8,h=n(this.memory[l+1]<<8|this.memory[l],this.memory[l+3]<<8|this.memory[l+2],this.memory[l+5]<<8|this.memory[l+4],this.memory[l+7]<<8|this.memory[l+6]),this.v4.add(h.multiply(a)).rotl(31).multiply(i);c+=32-this.memsize,this.memsize=0,o&&(this.memory="")}if(c<=f-32){var d=f-32;do{var h;if(o)h=n(e.charCodeAt(c+1)<<8|e.charCodeAt(c),e.charCodeAt(c+3)<<8|e.charCodeAt(c+2),e.charCodeAt(c+5)<<8|e.charCodeAt(c+4),e.charCodeAt(c+7)<<8|e.charCodeAt(c+6)),this.v1.add(h.multiply(a)).rotl(31).multiply(i),c+=8,h=n(e.charCodeAt(c+1)<<8|e.charCodeAt(c),e.charCodeAt(c+3)<<8|e.charCodeAt(c+2),e.charCodeAt(c+5)<<8|e.charCodeAt(c+4),e.charCodeAt(c+7)<<8|e.charCodeAt(c+6)),this.v2.add(h.multiply(a)).rotl(31).multiply(i),c+=8,h=n(e.charCodeAt(c+1)<<8|e.charCodeAt(c),e.charCodeAt(c+3)<<8|e.charCodeAt(c+2),e.charCodeAt(c+5)<<8|e.charCodeAt(c+4),e.charCodeAt(c+7)<<8|e.charCodeAt(c+6)),this.v3.add(h.multiply(a)).rotl(31).multiply(i),c+=8,h=n(e.charCodeAt(c+1)<<8|e.charCodeAt(c),e.charCodeAt(c+3)<<8|e.charCodeAt(c+2),e.charCodeAt(c+5)<<8|e.charCodeAt(c+4),e.charCodeAt(c+7)<<8|e.charCodeAt(c+6)),this.v4.add(h.multiply(a)).rotl(31).multiply(i);else h=n(e[c+1]<<8|e[c],e[c+3]<<8|e[c+2],e[c+5]<<8|e[c+4],e[c+7]<<8|e[c+6]),this.v1.add(h.multiply(a)).rotl(31).multiply(i),c+=8,h=n(e[c+1]<<8|e[c],e[c+3]<<8|e[c+2],e[c+5]<<8|e[c+4],e[c+7]<<8|e[c+6]),this.v2.add(h.multiply(a)).rotl(31).multiply(i),c+=8,h=n(e[c+1]<<8|e[c],e[c+3]<<8|e[c+2],e[c+5]<<8|e[c+4],e[c+7]<<8|e[c+6]),this.v3.add(h.multiply(a)).rotl(31).multiply(i),c+=8,h=n(e[c+1]<<8|e[c],e[c+3]<<8|e[c+2],e[c+5]<<8|e[c+4],e[c+7]<<8|e[c+6]),this.v4.add(h.multiply(a)).rotl(31).multiply(i);c+=8}while(c<=d)}return c<f&&(o?this.memory+=e.slice(c):r?this.memory.set(e.subarray(c,f),this.memsize):e.copy(this.memory,this.memsize,c,f),this.memsize=f-c),this},f.prototype.digest=function(){var e,t,r=this.memory,u="string"==typeof r,f=0,l=this.memsize,d=new n;this.total_len>=32?(e=this.v1.clone().rotl(1),e.add(this.v2.clone().rotl(7)),e.add(this.v3.clone().rotl(12)),e.add(this.v4.clone().rotl(18)),e.xor(this.v1.multiply(a).rotl(31).multiply(i)),e.multiply(i).add(c),e.xor(this.v2.multiply(a).rotl(31).multiply(i)),e.multiply(i).add(c),e.xor(this.v3.multiply(a).rotl(31).multiply(i)),e.multiply(i).add(c),e.xor(this.v4.multiply(a).rotl(31).multiply(i)),e.multiply(i).add(c)):e=this.seed.clone().add(s),e.add(d.fromNumber(this.total_len));while(f<=l-8)u?d.fromBits(r.charCodeAt(f+1)<<8|r.charCodeAt(f),r.charCodeAt(f+3)<<8|r.charCodeAt(f+2),r.charCodeAt(f+5)<<8|r.charCodeAt(f+4),r.charCodeAt(f+7)<<8|r.charCodeAt(f+6)):d.fromBits(r[f+1]<<8|r[f],r[f+3]<<8|r[f+2],r[f+5]<<8|r[f+4],r[f+7]<<8|r[f+6]),d.multiply(a).rotl(31).multiply(i),e.xor(d).rotl(27).multiply(i).add(c),f+=8;f+4<=l&&(u?d.fromBits(r.charCodeAt(f+1)<<8|r.charCodeAt(f),r.charCodeAt(f+3)<<8|r.charCodeAt(f+2),0,0):d.fromBits(r[f+1]<<8|r[f],r[f+3]<<8|r[f+2],0,0),e.xor(d.multiply(i)).rotl(23).multiply(a).add(o),f+=4);while(f<l)d.fromBits(u?r.charCodeAt(f++):r[f++],0,0,0),e.xor(d.multiply(s)).rotl(11).multiply(i);return t=e.clone().shiftRight(33),e.xor(t).multiply(a),t=e.clone().shiftRight(29),e.xor(t).multiply(o),t=e.clone().shiftRight(32),e.xor(t),this.init(this.seed),e},e.exports=f}).call(this,r("1c35").Buffer)},"8a08":function(e,t,r){"use strict";r.r(t);var n=r("45c6");r.d(t,"buffer",(function(){return n["buffer"]})),r.d(t,"sizeCompressed",(function(){return n["sizeCompressed"]})),r.d(t,"sizeUncompressed",(function(){return n["sizeUncompressed"]}))},"8a16":function(e,t,r){"use strict";r.d(t,"a",(function(){return b}));var n=r("fe84"),i=r("5122"),a=r("5cf7"),o=r("0ef0");const c=/^\d+$/,s=32,u={bitLength:256,isLe:!0};var f=Object(a["a"])("chainCode"),l=Object(a["a"])("isHard");class d{constructor(){Object.defineProperty(this,f,{writable:!0,value:new Uint8Array(32)}),Object.defineProperty(this,l,{writable:!0,value:!1})}static from(e){const t=new d,[r,n]=e.startsWith("/")?[e.substr(1),!0]:[e,!1];return t.soft(c.test(r)?parseInt(r,10):r),n?t.harden():t}get chainCode(){return Object(i["a"])(this,f)[f]}get isHard(){return Object(i["a"])(this,l)[l]}get isSoft(){return!Object(i["a"])(this,l)[l]}hard(e){return this.soft(e).harden()}harden(){return Object(i["a"])(this,l)[l]=!0,this}soft(e){return Object(n["isNumber"])(e)||Object(n["isBn"])(e)||Object(n["isBigInt"])(e)?this.soft(Object(n["bnToHex"])(e,u)):Object(n["isString"])(e)?Object(n["isHex"])(e)?this.soft(Object(n["hexToU8a"])(e)):this.soft(Object(n["compactAddLength"])(Object(n["stringToU8a"])(e))):e.length>s?this.soft(Object(o["a"])(e)):(Object(i["a"])(this,f)[f].fill(0),Object(i["a"])(this,f)[f].set(e,0),this)}soften(){return Object(i["a"])(this,l)[l]=!1,this}}const h=/\/(\/?)([^/]+)/g;function b(e){const t=e.match(h),r=[];let i="";return t&&(i=t.join(""),t.forEach(e=>{r.push(d.from(e.substr(1)))})),Object(n["assert"])(i===e,`Re-constructed path "${i}" does not match input`),{parts:t,path:r}}},"8c22":function(e,t,r){"use strict";r.d(t,"a",(function(){return f}));var n=r("399f"),i=r.n(n),a=r("ceea"),o=r("4dd4"),c=r("70bc"),s=r("ecd7");function u(e){return i.a.isBN(e)?e:Object(s["a"])(e)?e.toBn():new i.a(e)}function f(e){return e?Object(c["a"])(e)?Object(a["a"])(e.toString()):Object(o["a"])(e)?new i.a(e.toString()):u(e):new i.a(0)}},"8c7c":function(e,t,r){"use strict";r.r(t),r.d(t,"extractTime",(function(){return b}));var n=r("ade3");function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){Object(n["a"])(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const o=3600,c=24*o;function s(e,t){return{days:e.days+t.days,hours:e.hours+t.hours,milliseconds:e.milliseconds+t.milliseconds,minutes:e.minutes+t.minutes,seconds:e.seconds+t.seconds}}const u={days:0,hours:0,milliseconds:0,minutes:0,seconds:0};function f(e,t){const r=Math.floor(t/24);return s(a(a({},u),{},{days:r}),b(e-r*c*1e3))}function l(e,t){const r=t/60;if(r<24){const t=Math.floor(r);return s(a(a({},u),{},{hours:t}),b(e-t*o*1e3))}return f(e,r)}function d(e,t){const r=t/60;if(r<60){const t=Math.floor(r);return s(a(a({},u),{},{minutes:t}),b(e-60*t*1e3))}return l(e,r)}function h(e){const t=e/1e3;if(t<60){const r=Math.floor(t);return s(a(a({},u),{},{seconds:r}),b(e-1e3*r))}return d(e,t)}function b(e){return e?e<1e3?a(a({},u),{},{milliseconds:e}):h(e):u}},"8d41":function(e,t,r){"use strict";r.r(t),r.d(t,"TextEncoder",(function(){return n}));class n{encode(e){const t=new Uint8Array(e.length);for(let r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return t}}},"8f3b":function(e,t,r){(function(t){const n=r("1c46"),i=2147483647,a=5e3;function o(e,r,a,o,c,s,u){if(0===a||0!==(a&a-1))throw Error("N must be > 0 and a power of 2");if(a>i/128/o)throw Error("Parameter N is too large");if(o>i/128/c)throw Error("Parameter r is too large");let f,l=t.alloc(256*o),d=t.alloc(128*o*a),h=new Int32Array(16),b=new Int32Array(16),p=t.alloc(64),y=n.pbkdf2Sync(e,r,1,128*c*o,"sha256");if(u){let e=c*a*2,t=0;f=function(){++t,t%1e3===0&&u({current:t,total:e,percent:t/e*100})}}return{XY:l,V:d,B32:h,x:b,_X:p,B:y,tickCallback:f}}async function c(e,t,r,n,i,o,c,s,f,l,h){h=h||a;let b,p=0,y=128*r;for(e.copy(o,p,t,t+y),b=0;b<n;b++)o.copy(i,b*y,p,p+y),b%h===0&&await new Promise(e=>setImmediate(e)),u(o,p,y,r,c,s,f),l&&l();for(b=0;b<n;b++){let e=p+64*(2*r-1),t=o.readUInt32LE(e)&n-1;d(i,t*y,o,p,y),b%h===0&&await new Promise(e=>setImmediate(e)),u(o,p,y,r,c,s,f),l&&l()}o.copy(e,t,p,p+y)}function s(e,t,r,n,i,a,o,c,s,f){let l,h=0,b=128*r;for(e.copy(a,h,t,t+b),l=0;l<n;l++)a.copy(i,l*b,h,h+b),u(a,h,b,r,o,c,s),f&&f();for(l=0;l<n;l++){let e=h+64*(2*r-1),t=a.readUInt32LE(e)&n-1;d(i,t*b,a,h,b),u(a,h,b,r,o,c,s),f&&f()}a.copy(e,t,h,h+b)}function u(e,t,r,n,i,a,o){let c;for(h(e,t+64*(2*n-1),i,0,64),c=0;c<2*n;c++)d(e,64*c,i,0,64),l(i,a,o),h(i,0,e,r+64*c,64);for(c=0;c<n;c++)h(e,r+2*c*64,e,t+64*c,64);for(c=0;c<n;c++)h(e,r+64*(2*c+1),e,t+64*(c+n),64)}function f(e,t){return e<<t|e>>>32-t}function l(e,t,r){let n;for(n=0;n<16;n++)t[n]=(255&e[4*n+0])<<0,t[n]|=(255&e[4*n+1])<<8,t[n]|=(255&e[4*n+2])<<16,t[n]|=(255&e[4*n+3])<<24;for(h(t,0,r,0,16),n=8;n>0;n-=2)r[4]^=f(r[0]+r[12],7),r[8]^=f(r[4]+r[0],9),r[12]^=f(r[8]+r[4],13),r[0]^=f(r[12]+r[8],18),r[9]^=f(r[5]+r[1],7),r[13]^=f(r[9]+r[5],9),r[1]^=f(r[13]+r[9],13),r[5]^=f(r[1]+r[13],18),r[14]^=f(r[10]+r[6],7),r[2]^=f(r[14]+r[10],9),r[6]^=f(r[2]+r[14],13),r[10]^=f(r[6]+r[2],18),r[3]^=f(r[15]+r[11],7),r[7]^=f(r[3]+r[15],9),r[11]^=f(r[7]+r[3],13),r[15]^=f(r[11]+r[7],18),r[1]^=f(r[0]+r[3],7),r[2]^=f(r[1]+r[0],9),r[3]^=f(r[2]+r[1],13),r[0]^=f(r[3]+r[2],18),r[6]^=f(r[5]+r[4],7),r[7]^=f(r[6]+r[5],9),r[4]^=f(r[7]+r[6],13),r[5]^=f(r[4]+r[7],18),r[11]^=f(r[10]+r[9],7),r[8]^=f(r[11]+r[10],9),r[9]^=f(r[8]+r[11],13),r[10]^=f(r[9]+r[8],18),r[12]^=f(r[15]+r[14],7),r[13]^=f(r[12]+r[15],9),r[14]^=f(r[13]+r[12],13),r[15]^=f(r[14]+r[13],18);for(n=0;n<16;++n)t[n]=r[n]+t[n];for(n=0;n<16;n++){let r=4*n;e[r+0]=t[n]>>0&255,e[r+1]=t[n]>>8&255,e[r+2]=t[n]>>16&255,e[r+3]=t[n]>>24&255}}function d(e,t,r,n,i){for(let a=0;a<i;a++)r[n+a]^=e[t+a]}function h(e,r,n,i,a){if(t.isBuffer(e)&&t.isBuffer(n))e.copy(n,i,r,r+a);else while(a--)n[i++]=e[r++]}e.exports={checkAndInit:o,smix:c,smixSync:s}}).call(this,r("1c35").Buffer)},"8fbd":function(e,t,r){"use strict";r.d(t,"b",(function(){return o})),r.d(t,"a",(function(){return c}));var n=r("3337"),i=r.n(n);const a=i.a.ec,o=new a("secp256k1"),c={bitLength:256,isLe:!1}},9092:function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=r("5eb7");function i(e){const t=[35,36].includes(e.length),r=e.length-(t?2:1),i=Object(n["a"])(e.subarray(0,r)),a=t?e[e.length-2]===i[0]&&e[e.length-1]===i[1]:e[e.length-1]===i[0];return[a,r]}},"93a2":function(e,t,r){"use strict";r.r(t),r.d(t,"scryptEncode",(function(){return u})),r.d(t,"scryptFromU8a",(function(){return f})),r.d(t,"scryptToU8a",(function(){return l}));var n=r("fdc3"),i=r.n(n),a=r("fe84"),o=r("1299"),c=r("e67f");const s={N:32768,p:1,r:8};function u(e,t=Object(c["a"])(),r=s){const n=Object(o["isReady"])()?Object(o["scrypt"])(Object(a["u8aToU8a"])(e),t,Math.log2(r.N),r.r,r.p):Object(a["bufferToU8a"])(i()(Object(a["u8aToBuffer"])(Object(a["u8aToU8a"])(e)),Object(a["u8aToBuffer"])(t),r.N,r.r,r.p,64));return{params:r,password:n,salt:t}}function f(e){const t=e.subarray(0,32),r=Object(a["u8aToBn"])(e.subarray(32,36),{isLe:!0}).toNumber(),n=Object(a["u8aToBn"])(e.subarray(36,40),{isLe:!0}).toNumber(),i=Object(a["u8aToBn"])(e.subarray(40,44),{isLe:!0}).toNumber();return Object(a["assert"])(r===s.N&&n===s.p&&i===s.r,"Invalid injected scrypt params found"),{params:{N:r,p:n,r:i},salt:t}}function l(e,{N:t,p:r,r:n}){return Object(a["u8aConcat"])(e,Object(a["bnToU8a"])(t,{bitLength:32,isLe:!0}),Object(a["bnToU8a"])(r,{bitLength:32,isLe:!0}),Object(a["bnToU8a"])(n,{bitLength:32,isLe:!0}))}},9516:function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r("1299"),i=r("01be"),a=r("a858");function o(e,t){return Object(i["a"])(Object(n["sr25519DeriveKeypairHard"])(Object(a["a"])(e),t))}},9523:function(e,t){function r(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}e.exports=r},"955e":function(e,t,r){"use strict";r.r(t),r.d(t,"compactAddLength",(function(){return h})),r.d(t,"compactStripLength",(function(){return m})),r.d(t,"compactFromU8a",(function(){return v})),r.d(t,"compactToU8a",(function(){return d}));var n=r("99f3"),i=r("399f"),a=r.n(i),o=r("5d81"),c=r("8c22"),s=r("6bd3");const u=new a.a(2).pow(new a.a(6)).subn(1),f=new a.a(2).pow(new a.a(14)).subn(1),l=new a.a(2).pow(new a.a(30)).subn(1);function d(e){const t=Object(c["a"])(e);if(t.lte(u))return new Uint8Array([t.toNumber()<<2]);if(t.lte(f))return Object(s["a"])(t.shln(2).addn(1),16,!0);if(t.lte(l))return Object(s["a"])(t.shln(2).addn(2),32,!0);const r=Object(s["a"])(t);let i=r.length;while(0===r[i-1])i--;return Object(o["assert"])(i>=4,"Previous tests match anyting less than 2^30; qed"),Object(n["a"])(new Uint8Array([3+(i-4<<2)]),r.subarray(0,i))}function h(e){return Object(n["a"])(d(e.length),e)}const b=32;var p=r("25a8"),y=r("9e40");function v(e,t=b){const r=Object(p["a"])(e),n=3&r[0];if(0===n)return[1,new a.a(r[0]).shrn(2)];if(1===n)return[2,Object(y["a"])(r.slice(0,2),!0).shrn(2)];if(2===n)return[4,Object(y["a"])(r.slice(0,4),!0).shrn(2)];const i=new a.a(r[0]).shrn(2).addn(4).toNumber(),o=1+i;return[o,Object(y["a"])(r.subarray(1,o),!0)]}function m(e,t=b){const[r,n]=v(e,t),i=r+n.toNumber();return[i,e.subarray(r,i)]}},"967a":function(e,t,r){"use strict";r.r(t),r.d(t,"schnorrkelDeriveHard",(function(){return n["a"]})),r.d(t,"schnorrkelDerivePublic",(function(){return i["a"]})),r.d(t,"schnorrkelDeriveSoft",(function(){return a["a"]})),r.d(t,"schnorrkelKeypairFromSeed",(function(){return s})),r.d(t,"schnorrkelSign",(function(){return f})),r.d(t,"schnorrkelVerify",(function(){return l["a"]}));var n=r("9516"),i=r("b92f"),a=r("304a"),o=r("1299"),c=r("01be");function s(e){return Object(c["a"])(Object(o["sr25519KeypairFromSeed"])(e))}var u=r("fe84");function f(e,{publicKey:t,secretKey:r}){Object(u["assert"])(32===(null===t||void 0===t?void 0:t.length),"Expected a valid publicKey, 32-bytes"),Object(u["assert"])(64===(null===r||void 0===r?void 0:r.length),"Expected a valid secretKey, 64-bytes");const n=Object(u["u8aToU8a"])(e);return Object(o["sr25519Sign"])(t,r,n)}var l=r("2343")},"99f3":function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=r("25a8");function i(...e){let t=0,r=0;const i=new Array(e.length);for(let o=0;o<e.length;o++)i[o]=Object(n["a"])(e[o]),t+=i[o].length;const a=new Uint8Array(t);for(let n=0;n<i.length;n++)a.set(i[n],r),r+=i[n].length;return a}},"9bee":function(e,t,r){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0}),t.TextEncoder=void 0;var n=r("8d41");const i="undefined"===typeof e.TextEncoder?n.TextEncoder:e.TextEncoder;t.TextEncoder=i}).call(this,r("c8ba"))},"9c1f":function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=r("0df6f");function i(e){return Object(n["a"])(e,Uint8Array)}},"9cf7":function(e,t,r){"use strict";const n=e=>{let t=!1,r=!1,n=!1;for(let i=0;i<e.length;i++){const a=e[i];t&&/[a-zA-Z]/.test(a)&&a.toUpperCase()===a?(e=e.slice(0,i)+"-"+e.slice(i),t=!1,n=r,r=!0,i++):r&&n&&/[a-zA-Z]/.test(a)&&a.toLowerCase()===a?(e=e.slice(0,i-1)+"-"+e.slice(i-1),n=r,r=!1,t=!0):(t=a.toLowerCase()===a&&a.toUpperCase()!==a,n=r,r=a.toUpperCase()===a&&a.toLowerCase()!==a)}return e},i=(e,t)=>{if("string"!==typeof e&&!Array.isArray(e))throw new TypeError("Expected the input to be `string | string[]`");t=Object.assign({pascalCase:!1},t);const r=e=>t.pascalCase?e.charAt(0).toUpperCase()+e.slice(1):e;if(e=Array.isArray(e)?e.map(e=>e.trim()).filter(e=>e.length).join("-"):e.trim(),0===e.length)return"";if(1===e.length)return t.pascalCase?e.toUpperCase():e.toLowerCase();const i=e!==e.toLowerCase();return i&&(e=n(e)),e=e.replace(/^[_.\- ]+/,"").toLowerCase().replace(/[_.\- ]+(\w|$)/g,(e,t)=>t.toUpperCase()).replace(/\d+(\w|$)/g,e=>e.toUpperCase()),r(e)};e.exports=i,e.exports.default=i},"9d29":function(e,t,r){"use strict";r.r(t),r.d(t,"base64Decode",(function(){return n["a"]})),r.d(t,"base64Encode",(function(){return a})),r.d(t,"base64Pad",(function(){return o})),r.d(t,"base64Trim",(function(){return c})),r.d(t,"base64Validate",(function(){return s["a"]})),r.d(t,"isBase64",(function(){return u}));var n=r("fd37"),i=r("fe84");function a(e){return Object(i["u8aToBuffer"])(Object(i["u8aToU8a"])(e)).toString("base64")}function o(e){return e.padEnd(e.length+e.length%4,"=")}function c(e){while(e.length&&"="===e[e.length-1])e=e.slice(0,-1);return e}var s=r("07f3");function u(e){try{return Object(s["a"])(e)}catch(t){return!1}}},"9dbf":function(e,t,r){(function(t){var n=r("1555").UINT32;n.prototype.xxh_update=function(e,t){var r,n,o=a._low,c=a._high;n=e*o,r=n>>>16,r+=t*o,r&=65535,r+=e*c;var s=this._low+(65535&n),u=s>>>16;u+=this._high+(65535&r);var f=u<<16|65535&s;f=f<<13|f>>>19,s=65535&f,u=f>>>16,o=i._low,c=i._high,n=s*o,r=n>>>16,r+=u*o,r&=65535,r+=s*c,this._low=65535&n,this._high=65535&r};var i=n("2654435761"),a=n("2246822519"),o=n("3266489917"),c=n("668265263"),s=n("374761393");function u(e){for(var t=[],r=0,n=e.length;r<n;r++){var i=e.charCodeAt(r);i<128?t.push(i):i<2048?t.push(192|i>>6,128|63&i):i<55296||i>=57344?t.push(224|i>>12,128|i>>6&63,128|63&i):(r++,i=65536+((1023&i)<<10|1023&e.charCodeAt(r)),t.push(240|i>>18,128|i>>12&63,128|i>>6&63,128|63&i))}return new Uint8Array(t)}function f(){return 2==arguments.length?new f(arguments[1]).update(arguments[0]).digest():this instanceof f?void l.call(this,arguments[0]):new f(arguments[0])}function l(e){return this.seed=e instanceof n?e.clone():n(e),this.v1=this.seed.clone().add(i).add(a),this.v2=this.seed.clone().add(a),this.v3=this.seed.clone(),this.v4=this.seed.clone().subtract(i),this.total_len=0,this.memsize=0,this.memory=null,this}f.prototype.init=l,f.prototype.update=function(e){var r,n="string"==typeof e;n&&(e=u(e),n=!1,r=!0),"undefined"!==typeof ArrayBuffer&&e instanceof ArrayBuffer&&(r=!0,e=new Uint8Array(e));var i=0,a=e.length,o=i+a;if(0==a)return this;if(this.total_len+=a,0==this.memsize&&(this.memory=n?"":r?new Uint8Array(16):new t(16)),this.memsize+a<16)return n?this.memory+=e:r?this.memory.set(e.subarray(0,a),this.memsize):e.copy(this.memory,this.memsize,0,a),this.memsize+=a,this;if(this.memsize>0){n?this.memory+=e.slice(0,16-this.memsize):r?this.memory.set(e.subarray(0,16-this.memsize),this.memsize):e.copy(this.memory,this.memsize,0,16-this.memsize);var c=0;n?(this.v1.xxh_update(this.memory.charCodeAt(c+1)<<8|this.memory.charCodeAt(c),this.memory.charCodeAt(c+3)<<8|this.memory.charCodeAt(c+2)),c+=4,this.v2.xxh_update(this.memory.charCodeAt(c+1)<<8|this.memory.charCodeAt(c),this.memory.charCodeAt(c+3)<<8|this.memory.charCodeAt(c+2)),c+=4,this.v3.xxh_update(this.memory.charCodeAt(c+1)<<8|this.memory.charCodeAt(c),this.memory.charCodeAt(c+3)<<8|this.memory.charCodeAt(c+2)),c+=4,this.v4.xxh_update(this.memory.charCodeAt(c+1)<<8|this.memory.charCodeAt(c),this.memory.charCodeAt(c+3)<<8|this.memory.charCodeAt(c+2))):(this.v1.xxh_update(this.memory[c+1]<<8|this.memory[c],this.memory[c+3]<<8|this.memory[c+2]),c+=4,this.v2.xxh_update(this.memory[c+1]<<8|this.memory[c],this.memory[c+3]<<8|this.memory[c+2]),c+=4,this.v3.xxh_update(this.memory[c+1]<<8|this.memory[c],this.memory[c+3]<<8|this.memory[c+2]),c+=4,this.v4.xxh_update(this.memory[c+1]<<8|this.memory[c],this.memory[c+3]<<8|this.memory[c+2])),i+=16-this.memsize,this.memsize=0,n&&(this.memory="")}if(i<=o-16){var s=o-16;do{n?(this.v1.xxh_update(e.charCodeAt(i+1)<<8|e.charCodeAt(i),e.charCodeAt(i+3)<<8|e.charCodeAt(i+2)),i+=4,this.v2.xxh_update(e.charCodeAt(i+1)<<8|e.charCodeAt(i),e.charCodeAt(i+3)<<8|e.charCodeAt(i+2)),i+=4,this.v3.xxh_update(e.charCodeAt(i+1)<<8|e.charCodeAt(i),e.charCodeAt(i+3)<<8|e.charCodeAt(i+2)),i+=4,this.v4.xxh_update(e.charCodeAt(i+1)<<8|e.charCodeAt(i),e.charCodeAt(i+3)<<8|e.charCodeAt(i+2))):(this.v1.xxh_update(e[i+1]<<8|e[i],e[i+3]<<8|e[i+2]),i+=4,this.v2.xxh_update(e[i+1]<<8|e[i],e[i+3]<<8|e[i+2]),i+=4,this.v3.xxh_update(e[i+1]<<8|e[i],e[i+3]<<8|e[i+2]),i+=4,this.v4.xxh_update(e[i+1]<<8|e[i],e[i+3]<<8|e[i+2])),i+=4}while(i<=s)}return i<o&&(n?this.memory+=e.slice(i):r?this.memory.set(e.subarray(i,o),this.memsize):e.copy(this.memory,this.memsize,i,o),this.memsize=o-i),this},f.prototype.digest=function(){var e,t,r=this.memory,u="string"==typeof r,f=0,l=this.memsize,d=new n;e=this.total_len>=16?this.v1.rotl(1).add(this.v2.rotl(7).add(this.v3.rotl(12).add(this.v4.rotl(18)))):this.seed.clone().add(s),e.add(d.fromNumber(this.total_len));while(f<=l-4)u?d.fromBits(r.charCodeAt(f+1)<<8|r.charCodeAt(f),r.charCodeAt(f+3)<<8|r.charCodeAt(f+2)):d.fromBits(r[f+1]<<8|r[f],r[f+3]<<8|r[f+2]),e.add(d.multiply(o)).rotl(17).multiply(c),f+=4;while(f<l)d.fromBits(u?r.charCodeAt(f++):r[f++],0),e.add(d.multiply(s)).rotl(11).multiply(i);return t=e.clone().shiftRight(15),e.xor(t).multiply(a),t=e.clone().shiftRight(13),e.xor(t).multiply(o),t=e.clone().shiftRight(16),e.xor(t),this.init(this.seed),e},e.exports=f}).call(this,r("1c35").Buffer)},"9e40":function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("ceea"),i=r("6f26");function a(e,t={isLe:!0,isNegative:!1}){return Object(n["a"])(Object(i["a"])(e),t)}},a0f1:function(e,t,r){"use strict";r.r(t),r.d(t,"hexAddPrefix",(function(){return n["a"]})),r.d(t,"hexFixLength",(function(){return i["a"]})),r.d(t,"hexHasPrefix",(function(){return a["a"]})),r.d(t,"hexStripPrefix",(function(){return o["a"]})),r.d(t,"hexToBn",(function(){return c["a"]})),r.d(t,"hexToNumber",(function(){return s})),r.d(t,"hexToString",(function(){return l})),r.d(t,"hexToU8a",(function(){return f["a"]}));var n=r("29e3"),i=r("f98a"),a=r("d05c"),o=r("f543"),c=r("ceea");function s(e){return e?Object(c["a"])(e).toNumber():NaN}var u=r("18f7"),f=r("c9d6");function l(e){return Object(u["a"])(Object(f["a"])(e))}},a763:function(e,t,r){"use strict";r.r(t),r.d(t,"base32Decode",(function(){return s})),r.d(t,"base32Encode",(function(){return f})),r.d(t,"base32Validate",(function(){return a["a"]})),r.d(t,"isBase32",(function(){return l["a"]}));var n=r("fe84"),i=r("1055"),a=r("58a26");const o=i["a"].split("").reduce((e,t,r)=>(e[t]=r,e),{});function c(e,t,r){let n=0,a=0,c=0;for(let s=r;s<t.length;s++)a=a<<i["b"]|o[t[s]],n+=i["b"],n>=8&&(n-=8,e[c++]=255&a>>n);return[e,n,a]}function s(e,t=!1){Object(a["a"])(e,t);const r=t?1:0,[o,s,u]=c(new Uint8Array((e.length-r)*i["b"]/8|0),e,r);return Object(n["assert"])(!(s>=i["b"]||255&u<<8-s),"Unexpected end of data"),o}const u=(1<<i["b"])-1;function f(e,t=!1){const r=Object(n["u8aToU8a"])(e);let a="",o=0,c=0;for(let n=0;n<r.length;++n){c=c<<8|r[n],o+=8;while(o>i["b"])o-=i["b"],a+=i["a"][u&c>>o]}return o&&(a+=i["a"][u&c<<i["b"]-o]),t?"b"+a:a}var l=r("43ce")},a858:function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=r("fe84");function i({publicKey:e,secretKey:t}){return Object(n["u8aConcat"])(t,e).slice()}},aa37:function(e,t,r){(function(n,i){var a;
/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */(function(){"use strict";var o="input is invalid type",c="finalize already called",s="object"===typeof window,u=s?window:{};u.JS_SHA3_NO_WINDOW&&(s=!1);var f=!s&&"object"===typeof self,l=!u.JS_SHA3_NO_NODE_JS&&"object"===typeof n&&n.versions&&n.versions.node;l?u=i:f&&(u=self);var d=!u.JS_SHA3_NO_COMMON_JS&&"object"===typeof e&&e.exports,h=r("3c35"),b=!u.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!==typeof ArrayBuffer,p="0123456789abcdef".split(""),y=[31,7936,2031616,520093696],v=[4,1024,262144,67108864],m=[1,256,65536,16777216],w=[6,1536,393216,100663296],O=[0,8,16,24],g=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],j=[224,256,384,512],P=[128,256],x=["hex","buffer","arrayBuffer","array","digest"],z={128:168,256:136};!u.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!b||!u.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"===typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});for(var k=function(e,t,r){return function(n){return new C(e,t,e).update(n)[r]()}},H=function(e,t,r){return function(n,i){return new C(e,t,i).update(n)[r]()}},N=function(e,t,r){return function(t,n,i,a){return Z["cshake"+e].update(t,n,i,a)[r]()}},T=function(e,t,r){return function(t,n,i,a){return Z["kmac"+e].update(t,n,i,a)[r]()}},X=function(e,t,r,n){for(var i=0;i<x.length;++i){var a=x[i];e[a]=t(r,n,a)}return e},L=function(e,t){var r=k(e,t,"hex");return r.create=function(){return new C(e,t,e)},r.update=function(e){return r.create().update(e)},X(r,k,e,t)},D=function(e,t){var r=H(e,t,"hex");return r.create=function(r){return new C(e,t,r)},r.update=function(e,t){return r.create(t).update(e)},X(r,H,e,t)},M=function(e,t){var r=z[e],n=N(e,t,"hex");return n.create=function(n,i,a){return i||a?new C(e,t,n).bytepad([i,a],r):Z["shake"+e].create(n)},n.update=function(e,t,r,i){return n.create(t,r,i).update(e)},X(n,N,e,t)},A=function(e,t){var r=z[e],n=T(e,t,"hex");return n.create=function(n,i,a){return new J(e,t,i).bytepad(["KMAC",a],r).bytepad([n],r)},n.update=function(e,t,r,i){return n.create(e,r,i).update(t)},X(n,T,e,t)},S=[{name:"keccak",padding:m,bits:j,createMethod:L},{name:"sha3",padding:w,bits:j,createMethod:L},{name:"shake",padding:y,bits:P,createMethod:D},{name:"cshake",padding:v,bits:P,createMethod:M},{name:"kmac",padding:v,bits:P,createMethod:A}],Z={},R=[],W=0;W<S.length;++W)for(var U=S[W],F=U.bits,E=0;E<F.length;++E){var V=U.name+"_"+F[E];if(R.push(V),Z[V]=U.createMethod(F[E],U.padding),"sha3"!==U.name){var K=U.name+F[E];R.push(K),Z[K]=Z[V]}}function C(e,t,r){this.blocks=[],this.s=[],this.padding=t,this.outputBits=r,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(e<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=r>>5,this.extraBytes=(31&r)>>3;for(var n=0;n<50;++n)this.s[n]=0}function J(e,t,r){C.call(this,e,t,r)}C.prototype.update=function(e){if(this.finalized)throw new Error(c);var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(o);if(null===e)throw new Error(o);if(b&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!Array.isArray(e)&&(!b||!ArrayBuffer.isView(e)))throw new Error(o);t=!0}var n,i,a=this.blocks,s=this.byteCount,u=e.length,f=this.blockCount,l=0,d=this.s;while(l<u){if(this.reset)for(this.reset=!1,a[0]=this.block,n=1;n<f+1;++n)a[n]=0;if(t)for(n=this.start;l<u&&n<s;++l)a[n>>2]|=e[l]<<O[3&n++];else for(n=this.start;l<u&&n<s;++l)i=e.charCodeAt(l),i<128?a[n>>2]|=i<<O[3&n++]:i<2048?(a[n>>2]|=(192|i>>6)<<O[3&n++],a[n>>2]|=(128|63&i)<<O[3&n++]):i<55296||i>=57344?(a[n>>2]|=(224|i>>12)<<O[3&n++],a[n>>2]|=(128|i>>6&63)<<O[3&n++],a[n>>2]|=(128|63&i)<<O[3&n++]):(i=65536+((1023&i)<<10|1023&e.charCodeAt(++l)),a[n>>2]|=(240|i>>18)<<O[3&n++],a[n>>2]|=(128|i>>12&63)<<O[3&n++],a[n>>2]|=(128|i>>6&63)<<O[3&n++],a[n>>2]|=(128|63&i)<<O[3&n++]);if(this.lastByteIndex=n,n>=s){for(this.start=n-s,this.block=a[f],n=0;n<f;++n)d[n]^=a[n];q(d),this.reset=!0}else this.start=n}return this},C.prototype.encode=function(e,t){var r=255&e,n=1,i=[r];e>>=8,r=255&e;while(r>0)i.unshift(r),e>>=8,r=255&e,++n;return t?i.push(n):i.unshift(n),this.update(i),i.length},C.prototype.encodeString=function(e){var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(o);if(null===e)throw new Error(o);if(b&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!Array.isArray(e)&&(!b||!ArrayBuffer.isView(e)))throw new Error(o);t=!0}var n=0,i=e.length;if(t)n=i;else for(var a=0;a<e.length;++a){var c=e.charCodeAt(a);c<128?n+=1:c<2048?n+=2:c<55296||c>=57344?n+=3:(c=65536+((1023&c)<<10|1023&e.charCodeAt(++a)),n+=4)}return n+=this.encode(8*n),this.update(e),n},C.prototype.bytepad=function(e,t){for(var r=this.encode(t),n=0;n<e.length;++n)r+=this.encodeString(e[n]);var i=t-r%t,a=[];return a.length=i,this.update(a),this},C.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex,r=this.blockCount,n=this.s;if(e[t>>2]|=this.padding[3&t],this.lastByteIndex===this.byteCount)for(e[0]=e[r],t=1;t<r+1;++t)e[t]=0;for(e[r-1]|=2147483648,t=0;t<r;++t)n[t]^=e[t];q(n)}},C.prototype.toString=C.prototype.hex=function(){this.finalize();var e,t=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,a=0,o=0,c="";while(o<n){for(a=0;a<t&&o<n;++a,++o)e=r[a],c+=p[e>>4&15]+p[15&e]+p[e>>12&15]+p[e>>8&15]+p[e>>20&15]+p[e>>16&15]+p[e>>28&15]+p[e>>24&15];o%t===0&&(q(r),a=0)}return i&&(e=r[a],c+=p[e>>4&15]+p[15&e],i>1&&(c+=p[e>>12&15]+p[e>>8&15]),i>2&&(c+=p[e>>20&15]+p[e>>16&15])),c},C.prototype.arrayBuffer=function(){this.finalize();var e,t=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,a=0,o=0,c=this.outputBits>>3;e=i?new ArrayBuffer(n+1<<2):new ArrayBuffer(c);var s=new Uint32Array(e);while(o<n){for(a=0;a<t&&o<n;++a,++o)s[o]=r[a];o%t===0&&q(r)}return i&&(s[a]=r[a],e=e.slice(0,c)),e},C.prototype.buffer=C.prototype.arrayBuffer,C.prototype.digest=C.prototype.array=function(){this.finalize();var e,t,r=this.blockCount,n=this.s,i=this.outputBlocks,a=this.extraBytes,o=0,c=0,s=[];while(c<i){for(o=0;o<r&&c<i;++o,++c)e=c<<2,t=n[o],s[e]=255&t,s[e+1]=t>>8&255,s[e+2]=t>>16&255,s[e+3]=t>>24&255;c%r===0&&q(n)}return a&&(e=c<<2,t=n[o],s[e]=255&t,a>1&&(s[e+1]=t>>8&255),a>2&&(s[e+2]=t>>16&255)),s},J.prototype=new C,J.prototype.finalize=function(){return this.encode(this.outputBits,!0),C.prototype.finalize.call(this)};var q=function(e){var t,r,n,i,a,o,c,s,u,f,l,d,h,b,p,y,v,m,w,O,j,P,x,z,k,H,N,T,X,L,D,M,A,S,Z,R,W,U,F,E,V,K,C,J,q,B,Y,G,I,Q,_,$,ee,te,re,ne,ie,ae,oe,ce,se,ue,fe;for(n=0;n<48;n+=2)i=e[0]^e[10]^e[20]^e[30]^e[40],a=e[1]^e[11]^e[21]^e[31]^e[41],o=e[2]^e[12]^e[22]^e[32]^e[42],c=e[3]^e[13]^e[23]^e[33]^e[43],s=e[4]^e[14]^e[24]^e[34]^e[44],u=e[5]^e[15]^e[25]^e[35]^e[45],f=e[6]^e[16]^e[26]^e[36]^e[46],l=e[7]^e[17]^e[27]^e[37]^e[47],d=e[8]^e[18]^e[28]^e[38]^e[48],h=e[9]^e[19]^e[29]^e[39]^e[49],t=d^(o<<1|c>>>31),r=h^(c<<1|o>>>31),e[0]^=t,e[1]^=r,e[10]^=t,e[11]^=r,e[20]^=t,e[21]^=r,e[30]^=t,e[31]^=r,e[40]^=t,e[41]^=r,t=i^(s<<1|u>>>31),r=a^(u<<1|s>>>31),e[2]^=t,e[3]^=r,e[12]^=t,e[13]^=r,e[22]^=t,e[23]^=r,e[32]^=t,e[33]^=r,e[42]^=t,e[43]^=r,t=o^(f<<1|l>>>31),r=c^(l<<1|f>>>31),e[4]^=t,e[5]^=r,e[14]^=t,e[15]^=r,e[24]^=t,e[25]^=r,e[34]^=t,e[35]^=r,e[44]^=t,e[45]^=r,t=s^(d<<1|h>>>31),r=u^(h<<1|d>>>31),e[6]^=t,e[7]^=r,e[16]^=t,e[17]^=r,e[26]^=t,e[27]^=r,e[36]^=t,e[37]^=r,e[46]^=t,e[47]^=r,t=f^(i<<1|a>>>31),r=l^(a<<1|i>>>31),e[8]^=t,e[9]^=r,e[18]^=t,e[19]^=r,e[28]^=t,e[29]^=r,e[38]^=t,e[39]^=r,e[48]^=t,e[49]^=r,b=e[0],p=e[1],B=e[11]<<4|e[10]>>>28,Y=e[10]<<4|e[11]>>>28,T=e[20]<<3|e[21]>>>29,X=e[21]<<3|e[20]>>>29,ce=e[31]<<9|e[30]>>>23,se=e[30]<<9|e[31]>>>23,K=e[40]<<18|e[41]>>>14,C=e[41]<<18|e[40]>>>14,S=e[2]<<1|e[3]>>>31,Z=e[3]<<1|e[2]>>>31,y=e[13]<<12|e[12]>>>20,v=e[12]<<12|e[13]>>>20,G=e[22]<<10|e[23]>>>22,I=e[23]<<10|e[22]>>>22,L=e[33]<<13|e[32]>>>19,D=e[32]<<13|e[33]>>>19,ue=e[42]<<2|e[43]>>>30,fe=e[43]<<2|e[42]>>>30,te=e[5]<<30|e[4]>>>2,re=e[4]<<30|e[5]>>>2,R=e[14]<<6|e[15]>>>26,W=e[15]<<6|e[14]>>>26,m=e[25]<<11|e[24]>>>21,w=e[24]<<11|e[25]>>>21,Q=e[34]<<15|e[35]>>>17,_=e[35]<<15|e[34]>>>17,M=e[45]<<29|e[44]>>>3,A=e[44]<<29|e[45]>>>3,z=e[6]<<28|e[7]>>>4,k=e[7]<<28|e[6]>>>4,ne=e[17]<<23|e[16]>>>9,ie=e[16]<<23|e[17]>>>9,U=e[26]<<25|e[27]>>>7,F=e[27]<<25|e[26]>>>7,O=e[36]<<21|e[37]>>>11,j=e[37]<<21|e[36]>>>11,$=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,J=e[8]<<27|e[9]>>>5,q=e[9]<<27|e[8]>>>5,H=e[18]<<20|e[19]>>>12,N=e[19]<<20|e[18]>>>12,ae=e[29]<<7|e[28]>>>25,oe=e[28]<<7|e[29]>>>25,E=e[38]<<8|e[39]>>>24,V=e[39]<<8|e[38]>>>24,P=e[48]<<14|e[49]>>>18,x=e[49]<<14|e[48]>>>18,e[0]=b^~y&m,e[1]=p^~v&w,e[10]=z^~H&T,e[11]=k^~N&X,e[20]=S^~R&U,e[21]=Z^~W&F,e[30]=J^~B&G,e[31]=q^~Y&I,e[40]=te^~ne&ae,e[41]=re^~ie&oe,e[2]=y^~m&O,e[3]=v^~w&j,e[12]=H^~T&L,e[13]=N^~X&D,e[22]=R^~U&E,e[23]=W^~F&V,e[32]=B^~G&Q,e[33]=Y^~I&_,e[42]=ne^~ae&ce,e[43]=ie^~oe&se,e[4]=m^~O&P,e[5]=w^~j&x,e[14]=T^~L&M,e[15]=X^~D&A,e[24]=U^~E&K,e[25]=F^~V&C,e[34]=G^~Q&$,e[35]=I^~_&ee,e[44]=ae^~ce&ue,e[45]=oe^~se&fe,e[6]=O^~P&b,e[7]=j^~x&p,e[16]=L^~M&z,e[17]=D^~A&k,e[26]=E^~K&S,e[27]=V^~C&Z,e[36]=Q^~$&J,e[37]=_^~ee&q,e[46]=ce^~ue&te,e[47]=se^~fe&re,e[8]=P^~b&y,e[9]=x^~p&v,e[18]=M^~z&H,e[19]=A^~k&N,e[28]=K^~S&R,e[29]=C^~Z&W,e[38]=$^~J&B,e[39]=ee^~q&Y,e[48]=ue^~te&ne,e[49]=fe^~re&ie,e[0]^=g[n],e[1]^=g[n+1]};if(d)e.exports=Z;else{for(W=0;W<R.length;++W)u[R[W]]=Z[R[W]];h&&(a=function(){return Z}.call(t,r,t,e),void 0===a||(e.exports=a))}})()}).call(this,r("4362"),r("c8ba"))},ac7c:function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("805c"),i=r("1299");function a(e){if(Object(i["isReady"])()){const t=Object(i["ed25519KeypairFromSeed"])(e);return{publicKey:t.slice(32),secretKey:t.slice(0,64)}}return n["sign"].keyPair.fromSeed(e)}},ad81:function(e,t,r){"use strict";r.d(t,"a",(function(){return c}));var n=r("fe84"),i=r("b15b"),a=r("9092"),o=r("ee85");function c(e,t,r=-1){if(Object(n["isU8a"])(e)||Object(n["isHex"])(e))return Object(n["u8aToU8a"])(e);const c=t=>`Decoding ${e}: ${t}`;let s;try{s=Object(i["a"])(e)}catch(l){throw new Error(c(l.message))}Object(n["assert"])(o["a"].allowedEncodedLengths.includes(s.length),c("Invalid decoded address length"));const[u,f]=Object(a["a"])(s);return Object(n["assert"])(t||u,c("Invalid decoded address checksum")),s.slice(1,f)}},b15b:function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r("fe84"),i=r("c827"),a=r("31c3");function o(e,t){return Object(a["a"])(e,t),Object(n["bufferToU8a"])(i["b"].decode(e.substr(t?1:0)))}},b1a5:function(e,t,r){"use strict";function n(e){return null===e}r.d(t,"a",(function(){return n}))},b4c8:function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("25a8");function i(e,t){if(e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}function a(e,t){return i(Object(n["a"])(e),Object(n["a"])(t))}},b69d:function(e,t,r){"use strict";r.r(t),r.d(t,"formatBalance",(function(){return v})),r.d(t,"formatDate",(function(){return m["a"]})),r.d(t,"formatDecimal",(function(){return c})),r.d(t,"formatElapsed",(function(){return O})),r.d(t,"formatNumber",(function(){return g})),r.d(t,"calcSi",(function(){return l})),r.d(t,"findSi",(function(){return f}));var n=r("8c22"),i=r("6e4a"),a=r("3009");const o=new RegExp("(\\d+?)(?=(\\d{3})+(?!\\d)|$)","g");function c(e){const t=e[0].startsWith("-"),r=t?e.substr(1).match(o):e.match(o);return r?`${t?"-":""}${r.join(",")}`:e}const s=8,u=[{power:-24,text:"yocto",value:"y"},{power:-21,text:"zepto",value:"z"},{power:-18,text:"atto",value:"a"},{power:-15,text:"femto",value:"f"},{power:-12,text:"pico",value:"p"},{power:-9,text:"nano",value:"n"},{power:-6,text:"micro",value:"Âµ"},{power:-3,text:"milli",value:"m"},{power:0,text:"Unit",value:"-"},{power:3,text:"Kilo",value:"k"},{power:6,text:"Mill",value:"M"},{power:9,text:"Bill",value:"B"},{power:12,text:"Tril",value:"T"},{power:15,text:"Peta",value:"P"},{power:18,text:"Exa",value:"E"},{power:21,text:"Zeta",value:"Z"},{power:24,text:"Yotta",value:"Y"}];function f(e){for(let t=0;t<u.length;t++)if(u[t].value===e)return u[t];return u[s]}function l(e,t,r){if(r)return f(r);const n=s-1+Math.ceil((e.length-t)/3);return u[n]||u[n<0?0:u.length-1]}const d=0,h=u[s].text;let b=d,p=h;function y(e,t=!0,r=b){let a=Object(n["a"])(e).toString();if(0===a.length||"0"===a)return"0";const o=a[0].startsWith("-");o&&(a=a.substr(1));const{decimals:f=r,forceUnit:d,withSi:h=!0,withSiFull:p=!1,withUnit:y=!0}=Object(i["a"])(t)?{withSi:t}:t,v=l(a,f,d),m=a.length-(f+v.power),w=a.substr(0,m),O=m<0?0-m:0,g=(`${new Array(O+1).join("0")}${a}`.substr(m<0?0:m)+"0000").substr(0,4),j=h||p?"-"===v.value?y?" "+(Object(i["a"])(y)?v.text:y):"":` ${p?v.text:v.value}${y?`${p?" ":""}${Object(i["a"])(y)?u[s].text:y}`:""}`:"";return`${o?"-":""}${c(w||"0")}.${g}${j}`}const v=y;v.calcSi=(e,t=b)=>l(e,t),v.findSi=f,v.getDefaults=()=>({decimals:b,unit:p}),v.getOptions=(e=b)=>u.filter(({power:t})=>!(t<0)||e+t>=0),v.setDefaults=({decimals:e,unit:t})=>{b=Object(a["a"])(e)?b:e,p=Object(a["a"])(t)?p:t,u[s].text=p};var m=r("6c67");function w(e){return e<15?e.toFixed(1)+"s":e<60?(0|e)+"s":e<3600?(e/60|0)+"m":(e/3600|0)+"h"}function O(e,t){const r=e&&e.getTime()||0,i=t instanceof Date?t.getTime():Object(n["a"])(t).toNumber();return r&&i?w(Math.max(Math.abs(r-i),0)/1e3):"0.0s"}function g(e){return c(Object(n["a"])(e).toString())}},b92f:function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=r("1299");function i(e,t){return Object(n["sr25519DerivePublicSoft"])(e,t)}},bef3:function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("fe84"),i=r("8fbd");function a(e){Object(n["assert"])([33,65].includes(e.length),"Invalid publicKey provided");const t=i["b"].keyFromPublic(e).getPublic();return Object(n["u8aConcat"])(Object(n["bnToU8a"])(t.getX(),i["a"]),Object(n["bnToU8a"])(t.getY(),i["a"]))}},c486:function(e,t,r){const n=r("1c46"),{checkAndInit:i,smix:a}=r("8f3b");async function o(e,t,r,o,c,s,u,f){const{XY:l,V:d,B32:h,x:b,_X:p,B:y,tickCallback:v}=i(e,t,r,o,c,s,u);for(var m=0;m<c;m++)await a(y,128*m*o,o,r,d,l,p,h,b,v,f);return n.pbkdf2Sync(e,y,1,s,"sha256")}e.exports=o},c686:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.asmJsInit=void 0;const n=null;t.asmJsInit=n},c73f:function(e,t,r){"use strict";r.r(t),function(e){r.d(t,"detectPackage",(function(){return f}));var n=r("6b32"),i=r("29cb"),a=r("5d81");function o(e){return!e||e.length<5?"<unknown>":e}function c(t){const r="undefined"!==typeof window?window:e;return r.__polkadotjs||(r.__polkadotjs={}),r.__polkadotjs[t]||(r.__polkadotjs[t]=[]),r.__polkadotjs[t]}function s(e){const t=e.map(e=>Object(i["a"])(e)?{version:e}:e),r=t.reduce((e,{version:t})=>Math.max(e,t.length),0);return t.map(({path:e,version:t})=>`\t${t.padEnd(r)}\t${o(e)}`).join("\n")}function u(e){if(Object(n["a"])(e))try{return e()}catch(t){return}return e}function f({name:e,version:t},r){Object(a["assert"])(e.startsWith("@polkadot"),"Invalid package descriptor "+e);const n=c(e);n.push({path:u(r)||"",version:t}),1!==n.length&&console.warn(`Multiple instances of ${e} detected, ensure that there is only one package in your dependency tree.\n${s(n)}`)}}.call(this,r("c8ba"))},c7fd:function(e,t,r){"use strict";r.r(t),function(e){var n=r("fe84"),i=r("003b");r.d(t,"packageInfo",(function(){return i})),Object(n["detectPackage"])(i,e)}.call(this,"/")},c827:function(e,t,r){"use strict";r.d(t,"a",(function(){return a})),r.d(t,"b",(function(){return o}));var n=r("42a7"),i=r.n(n);const a="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",o=i()(a)},c85f:function(e,t,r){"use strict";(function(e){function n(t){return t?e.from(t):e.from([])}r.d(t,"a",(function(){return n}))}).call(this,r("1c35").Buffer)},c8f6:function(e,t,r){var n=r("14ec"),i=r("3193");e.exports={blake2b:n.blake2b,blake2bHex:n.blake2bHex,blake2bInit:n.blake2bInit,blake2bUpdate:n.blake2bUpdate,blake2bFinal:n.blake2bFinal,blake2s:i.blake2s,blake2sHex:i.blake2sHex,blake2sInit:i.blake2sInit,blake2sUpdate:i.blake2sUpdate,blake2sFinal:i.blake2sFinal}},c9d6:function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r("5d81"),i=r("70bc"),a=r("f543");function o(e,t=-1){if(!e)return new Uint8Array;Object(n["assert"])(Object(i["a"])(e),`Expected hex value to convert, found '${e}'`);const r=Object(a["a"])(e),o=r.length/2,c=Math.ceil(-1===t?o:t/8),s=new Uint8Array(c),u=Math.max(0,c-o);for(let n=0;n<c;n++)s[n+u]=parseInt(r.substr(2*n,2),16);return s}},c9f3:function(e,t,r){"use strict";r.r(t);var n=r("2fc7");r.d(t,"bufferToU8a",(function(){return n["a"]}))},caed4:function(e,t,r){"use strict";r.r(t),r.d(t,"xxhashAsHex",(function(){return h})),r.d(t,"xxhashAsU8a",(function(){return d}));var n=r("fe84"),i=r("1299"),a=r("399f"),o=r.n(a),c=r("0fe3"),s=r.n(c);function u(e,t){return Object(n["isBuffer"])(e)||Object(n["isString"])(e)?s.a.h64(e,t):s.a.h64(Object(n["u8aToBuffer"])(e),t)}function f(e,t){return u(e,t).toString(16)}function l(e,t){return new o.a(f(e,t),16)}function d(e,t=64,r=!1){const a=Math.ceil(t/64);if(Object(i["isReady"])()&&!r)return Object(i["twox"])(Object(n["u8aToU8a"])(e),a);const o=new Uint8Array(Math.ceil(t/8));for(let n=0;n<a;n++)o.set(l(e,n).toArray("le",8),8*n);return o}function h(e,t=64){return Object(n["u8aToHex"])(d(e,t))}},cc05:function(e,t,r){"use strict";r.r(t);var n=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("CreateWalletTemplate",{attrs:{coin:"dot",create:e.createWalle}})},i=[],a=(r("96cf"),r("1da1")),o=r("cae8"),c=r("6f26"),s=r("d055"),u=r.n(s),f=r("834a"),l=r("e526"),d=r("63d4"),h=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){var r,n,i,a,o,s,h;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return t=1===t?42:t,t=3===t?44:t,r=Object(f["a"])(),e.next=5,Object(l["a"])(r);case 5:return n=e.sent,i=new d["a"]({type:"sr25519",ss58Format:t}),a=i.createFromUri(r),o=a.address,s=Object(c["a"])(n),e.next=12,u.a.toDataURL(s);case 12:return h=e.sent,e.abrupt("return",{mnemonic:r,address:o,key:s,img:h});case 14:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),b={name:"DotCreateWallet",components:{CreateWalletTemplate:o["a"]},methods:{createWalle:function(e){return Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,h(e);case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})))()}}},p=b,y=r("2877"),v=Object(y["a"])(p,n,i,!1,null,null,null);t["default"]=v.exports},cee80:function(e,t,r){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoder=void 0;var n=r("7af1");const i="undefined"===typeof e.TextDecoder?n.TextDecoder:e.TextDecoder;t.TextDecoder=i}).call(this,r("c8ba"))},ceea:function(e,t,r){"use strict";r.d(t,"a",(function(){return l}));var n=r("ade3"),i=r("399f"),a=r.n(i),o=r("6e4a"),c=r("f543");function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){Object(n["a"])(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function f(e){return(e.match(/.{1,2}/g)||[]).reverse().join("")}function l(e,t={isLe:!1,isNegative:!1}){if(!e)return new a.a(0);const r=u({isLe:!1,isNegative:!1},Object(o["a"])(t)?{isLe:t}:t),n=Object(c["a"])(e),i=new a.a((r.isLe?f(n):n)||"00",16);return r.isNegative?i.fromTwos(4*n.length):i}},d04f:function(e,t,r){"use strict";r.r(t),function(e){var n=r("fe84"),i=r("5e99");r.d(t,"packageInfo",(function(){return i})),Object(n["detectPackage"])(i,e)}.call(this,"/")},d05c:function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=r("70bc");function i(e){return!(!e||!Object(n["a"])(e,-1,!0)||"0x"!==e.substr(0,2))}},d1b1:function(e,t,r){"use strict";function n(e){return crypto.getRandomValues(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.getRandomValues=n},d26e:function(e,t,r){"use strict";r.r(t),r.d(t,"sha512AsU8a",(function(){return a}));var n=r("805c"),i=r("1299");function a(e,t=!1){return Object(i["isReady"])()&&!t?Object(i["sha512"])(e):n["hash"](e)}},dbce:function(e,t,r){r("9996"),r("27ae"),r("591f"),r("4716"),r("feb3");var n=r("7037");function i(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return i=function(){return e},e}function a(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!==typeof e)return{default:e};var t=i();if(t&&t.has(e))return t.get(e);var r={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var c=a?Object.getOwnPropertyDescriptor(e,o):null;c&&(c.get||c.set)?Object.defineProperty(r,o,c):r[o]=e[o]}return r["default"]=e,t&&t.set(e,r),r}e.exports=a},dd43:function(e,t,r){"use strict";function n(e){return"number"===typeof e}r.d(t,"a",(function(){return n}))},e526:function(e,t,r){"use strict";r.d(t,"a",(function(){return c}));var n=r("fe84"),i=r("1299"),a=r("ee72"),o=r("7be8");function c(e,t="",r=!1){if(Object(i["isReady"])()&&!r)return Object(i["bip39ToMiniSecret"])(e,t);const c=Object(n["u8aToBuffer"])(Object(o["a"])(e)),s=Object(n["u8aToBuffer"])(Object(n["stringToU8a"])("mnemonic"+t));return Object(a["a"])(c,s).password.slice(0,32)}},e57b:function(e,t,r){const n=r("1c46"),{checkAndInit:i,smixSync:a}=r("8f3b");function o(e,t,r,o,c,s,u){const{XY:f,V:l,B32:d,x:h,_X:b,B:p,tickCallback:y}=i(e,t,r,o,c,s,u);for(var v=0;v<c;v++)a(p,128*v*o,o,r,l,f,b,d,h,y);return n.pbkdf2Sync(e,p,1,s,"sha256")}e.exports=o},e67f:function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=r("d1b1");function i(e=32){return Object(n["getRandomValues"])(new Uint8Array(e))}},ebe0:function(e,t,r){"use strict";r.r(t),r.d(t,"keyExtractPath",(function(){return n["a"]})),r.d(t,"keyExtractSuri",(function(){return o})),r.d(t,"keyFromPath",(function(){return O})),r.d(t,"keyHdkdEd25519",(function(){return p})),r.d(t,"keyHdkdSr25519",(function(){return m})),r.d(t,"keyHdkdEcdsa",(function(){return l}));var n=r("8a16"),i=r("fe84");const a=/^(\w+( \w+)*)((\/\/?[^/]+)*)(\/\/\/(.*))?$/;function o(e){const t=e.match(a);Object(i["assert"])(!Object(i["isNull"])(t),"Unable to match provided value to a secret URI");const[,r,,o,,,c]=t,{path:s}=Object(n["a"])(o);return{password:c,path:s,phrase:r}}var c=r("0ef0");const s=Object(i["compactAddLength"])(Object(i["stringToU8a"])("Secp256k1HDKD"));function u(e,t){return Object(c["a"])(Object(i["u8aConcat"])(s,e,t),256)}var f=r("55d0");function l(e,{chainCode:t,isHard:r}){return Object(i["assert"])(r,"A soft key was found in the path (and is unsupported)"),Object(f["a"])(u(e.secretKey.subarray(0,32),t))}const d=Object(i["compactAddLength"])(Object(i["stringToU8a"])("Ed25519HDKD"));function h(e,t){return Object(c["a"])(Object(i["u8aConcat"])(d,e,t))}var b=r("ac7c");function p(e,{chainCode:t,isHard:r}){return Object(i["assert"])(r,"A soft key was found in the path (and is unsupported)"),Object(b["a"])(h(e.secretKey.subarray(0,32),t))}var y=r("9516"),v=r("304a");function m(e,{chainCode:t,isSoft:r}){return r?Object(v["a"])(e,t):Object(y["a"])(e,t)}const w={ecdsa:l,ed25519:p,ethereum:l,sr25519:m};function O(e,t,r){const n=w[r];return t.reduce((e,t)=>n(e,t),e)}},ec1b:function(e,t,r){"use strict";r.r(t),r.d(t,"initWasm",(function(){return c})),r.d(t,"withWasm",(function(){return s})),r.d(t,"getWasm",(function(){return u})),r.d(t,"getInt32",(function(){return f})),r.d(t,"getUint8",(function(){return l})),r.d(t,"getU8a",(function(){return d})),r.d(t,"getString",(function(){return h})),r.d(t,"allocU8a",(function(){return b})),r.d(t,"allocString",(function(){return p})),r.d(t,"resultU8a",(function(){return y})),r.d(t,"resultString",(function(){return v}));var n=r("fe84");let i=null,a=null,o=null;async function c(e,t,r){try{Object(n["assert"])("undefined"!==typeof WebAssembly&&e&&e.length,"WebAssembly is not available in your environment");const t=await WebAssembly.instantiate(e,{wbg:r});i=t.instance.exports}catch(a){t?i=t(r):(console.error("FATAL: Unable to initialize @polkadot/wasm-crypto"),console.error(a),i=null)}}function s(e){return(...t)=>(Object(n["assert"])(i,"The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces."),e(i)(...t))}function u(){return i}function f(){return null!==a&&a.buffer===i.memory.buffer||(a=new Int32Array(i.memory.buffer)),a}function l(){return null!==o&&o.buffer===i.memory.buffer||(o=new Uint8Array(i.memory.buffer)),o}function d(e,t){return l().subarray(e/1,e/1+t)}function h(e,t){return Object(n["u8aToString"])(d(e,t))}function b(e){const t=i.__wbindgen_malloc(1*e.length);return l().set(e,t/1),[t,e.length]}function p(e){return b(Object(n["stringToU8a"])(e))}function y(){const e=f()[2],t=f()[3],r=d(e,t).slice();return i.__wbindgen_free(e,1*t),r}function v(){return Object(n["u8aToString"])(y())}},ecd7:function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=r("6b32");function i(e){return!!e&&Object(n["a"])(e.toBn)}},ed7f:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wasmBytes=void 0;var n=r("8a08"),i=r("1209");const a=(0,i.unzlibSync)(n.buffer,new Uint8Array(n.sizeUncompressed));t.wasmBytes=a},edd2:function(e,t,r){"use strict";(function(e){r.d(t,"a",(function(){return o}));var n=r("7d92"),i=r.n(n),a=r("fe84");function o(t,r,n,o=64){let c=new Uint8Array,s=0;const u=e.concat([r,e.from([0,0,0,0])]);while(c.length<o){s++,u.writeUInt32BE(s,r.length);let e=i.a.hmac(i.a.sha512,t).update(u).digest();const o=e;let f=0;while(++f<n){e=i.a.hmac(i.a.sha512,t).update(e).digest();let r=-1;while(++r<e.length)o[r]^=e[r]}c=Object(a["u8aConcat"])(c,o)}return c.slice(0,o)}}).call(this,r("1c35").Buffer)},ee72:function(e,t,r){"use strict";r.d(t,"a",(function(){return c}));var n=r("fe84"),i=r("1299"),a=r("e67f"),o=r("edd2");function c(e,t=Object(a["a"])(),r=2048,c=!1){const s=Object(n["u8aToU8a"])(e),u=Object(n["u8aToU8a"])(t),f=Object(i["isReady"])()&&!c?Object(i["pbkdf2"])(s,u,r):Object(o["a"])(s,u,r);return{password:f,rounds:r,salt:t}}},ee85:function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=r("3363");const i={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36],allowedPrefix:n["available"].map(({prefix:e})=>e),prefix:42}},ef64:function(e,t,r){"use strict";function n(e,t,...r){return new Promise((n,i)=>{const a=(e,t)=>{e?i(e):n(t)};t.apply(e,r.concat(a))})}r.r(t),r.d(t,"promisify",(function(){return n}))},f312:function(e,t,r){"use strict";var n=r("1f04"),i=r("f14a"),a=r("d278"),o=r("24a1"),c="ArrayBuffer",s=a[c],u=i[c];n({global:!0,forced:u!==s},{ArrayBuffer:s}),o(c)},f3c5d:function(e,t,r){"use strict";r.r(t),r.d(t,"mnemonicGenerate",(function(){return n["a"]})),r.d(t,"mnemonicToEntropy",(function(){return i["a"]})),r.d(t,"mnemonicToLegacySeed",(function(){return c})),r.d(t,"mnemonicToMiniSecret",(function(){return s["a"]})),r.d(t,"mnemonicValidate",(function(){return u}));var n=r("834a"),i=r("7be8"),a=r("1299"),o=r("1f28");function c(e,t="",r=!1){return Object(a["isReady"])()&&!r?Object(a["bip39ToSeed"])(e,t):Object(o["c"])(e,t).subarray(0,32)}var s=r("e526");function u(e,t=!1){return Object(a["isReady"])()&&!t?Object(a["bip39Validate"])(e):Object(o["d"])(e)}},f543:function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("d05c");const i=/^[a-fA-F0-9]+$/;function a(e){if(!e)return"";if(Object(n["a"])(e))return e.substr(2);if(i.test(e))return e;throw new Error(`Invalid hex ${e} passed to hexStripPrefix`)}},f584:function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r("0ef0"),i=r("42d8");const a=["blake2","keccak"];function o(e,t){if("blake2"===e)return Object(n["a"])(t);if("keccak"===e)return Object(i["a"])(t);throw new Error(`Unsupported secp256k1 hasher '${e}', expected one of ${a.join(", ")}`)}},f8a0:function(e,t,r){var n,i;(function(r){a(Math.pow(36,5)),a(Math.pow(16,7)),a(Math.pow(10,9)),a(Math.pow(2,30)),a(36),a(16),a(10),a(2);function a(e,t){return this instanceof a?(this._low=0,this._high=0,this.remainder=null,"undefined"==typeof t?c.call(this,e):"string"==typeof e?s.call(this,e,t):void o.call(this,e,t)):new a(e,t)}function o(e,t){return this._low=0|e,this._high=0|t,this}function c(e){return this._low=65535&e,this._high=e>>>16,this}function s(e,t){var r=parseInt(e,t||10);return this._low=65535&r,this._high=r>>>16,this}a.prototype.fromBits=o,a.prototype.fromNumber=c,a.prototype.fromString=s,a.prototype.toNumber=function(){return 65536*this._high+this._low},a.prototype.toString=function(e){return this.toNumber().toString(e||10)},a.prototype.add=function(e){var t=this._low+e._low,r=t>>>16;return r+=this._high+e._high,this._low=65535&t,this._high=65535&r,this},a.prototype.subtract=function(e){return this.add(e.clone().negate())},a.prototype.multiply=function(e){var t,r,n=this._high,i=this._low,a=e._high,o=e._low;return r=i*o,t=r>>>16,t+=n*o,t&=65535,t+=i*a,this._low=65535&r,this._high=65535&t,this},a.prototype.div=function(e){if(0==e._low&&0==e._high)throw Error("division by zero");if(0==e._high&&1==e._low)return this.remainder=new a(0),this;if(e.gt(this))return this.remainder=this.clone(),this._low=0,this._high=0,this;if(this.eq(e))return this.remainder=new a(0),this._low=1,this._high=0,this;var t=e.clone(),r=-1;while(!this.lt(t))t.shiftLeft(1,!0),r++;for(this.remainder=this.clone(),this._low=0,this._high=0;r>=0;r--)t.shiftRight(1),this.remainder.lt(t)||(this.remainder.subtract(t),r>=16?this._high|=1<<r-16:this._low|=1<<r);return this},a.prototype.negate=function(){var e=1+(65535&~this._low);return this._low=65535&e,this._high=~this._high+(e>>>16)&65535,this},a.prototype.equals=a.prototype.eq=function(e){return this._low==e._low&&this._high==e._high},a.prototype.greaterThan=a.prototype.gt=function(e){return this._high>e._high||!(this._high<e._high)&&this._low>e._low},a.prototype.lessThan=a.prototype.lt=function(e){return this._high<e._high||!(this._high>e._high)&&this._low<e._low},a.prototype.or=function(e){return this._low|=e._low,this._high|=e._high,this},a.prototype.and=function(e){return this._low&=e._low,this._high&=e._high,this},a.prototype.not=function(){return this._low=65535&~this._low,this._high=65535&~this._high,this},a.prototype.xor=function(e){return this._low^=e._low,this._high^=e._high,this},a.prototype.shiftRight=a.prototype.shiftr=function(e){return e>16?(this._low=this._high>>e-16,this._high=0):16==e?(this._low=this._high,this._high=0):(this._low=this._low>>e|this._high<<16-e&65535,this._high>>=e),this},a.prototype.shiftLeft=a.prototype.shiftl=function(e,t){return e>16?(this._high=this._low<<e-16,this._low=0,t||(this._high&=65535)):16==e?(this._high=this._low,this._low=0):(this._high=this._high<<e|this._low>>16-e,this._low=this._low<<e&65535,t||(this._high&=65535)),this},a.prototype.rotateLeft=a.prototype.rotl=function(e){var t=this._high<<16|this._low;return t=t<<e|t>>>32-e,this._low=65535&t,this._high=t>>>16,this},a.prototype.rotateRight=a.prototype.rotr=function(e){var t=this._high<<16|this._low;return t=t>>>e|t<<32-e,this._low=65535&t,this._high=t>>>16,this},a.prototype.clone=function(){return new a(this._low,this._high)},n=[],i=function(){return a}.apply(t,n),void 0===i||(e.exports=i)})()},f98a:function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r("29e3"),i=r("f543");function a(e,t=-1,r=!1){const a=Math.ceil(t/4),o=a+2;return Object(n["a"])(-1===t||e.length===o||!r&&e.length<o?Object(i["a"])(e):e.length>o?Object(i["a"])(e).slice(-1*a):`${"0".repeat(a)}${Object(i["a"])(e)}`.slice(-1*a))}},fd37:function(e,t,r){"use strict";(function(e){r.d(t,"a",(function(){return a}));var n=r("fe84"),i=r("07f3");function a(t){return Object(i["a"])(t),Object(n["bufferToU8a"])(e.from(t,"base64"))}}).call(this,r("1c35").Buffer)},fdbb:function(e,t,r){var n,i;(function(r){var a={16:c(Math.pow(16,5)),10:c(Math.pow(10,5)),2:c(Math.pow(2,5))},o={16:c(16),10:c(10),2:c(2)};function c(e,t,r,n){return this instanceof c?(this.remainder=null,"string"==typeof e?f.call(this,e,t):"undefined"==typeof t?u.call(this,e):void s.apply(this,arguments)):new c(e,t,r,n)}function s(e,t,r,n){return"undefined"==typeof r?(this._a00=65535&e,this._a16=e>>>16,this._a32=65535&t,this._a48=t>>>16,this):(this._a00=0|e,this._a16=0|t,this._a32=0|r,this._a48=0|n,this)}function u(e){return this._a00=65535&e,this._a16=e>>>16,this._a32=0,this._a48=0,this}function f(e,t){t=t||10,this._a00=0,this._a16=0,this._a32=0,this._a48=0;for(var r=a[t]||new c(Math.pow(t,5)),n=0,i=e.length;n<i;n+=5){var o=Math.min(5,i-n),s=parseInt(e.slice(n,n+o),t);this.multiply(o<5?new c(Math.pow(t,o)):r).add(new c(s))}return this}c.prototype.fromBits=s,c.prototype.fromNumber=u,c.prototype.fromString=f,c.prototype.toNumber=function(){return 65536*this._a16+this._a00},c.prototype.toString=function(e){e=e||10;var t=o[e]||new c(e);if(!this.gt(t))return this.toNumber().toString(e);for(var r=this.clone(),n=new Array(64),i=63;i>=0;i--)if(r.div(t),n[i]=r.remainder.toNumber().toString(e),!r.gt(t))break;return n[i-1]=r.toNumber().toString(e),n.join("")},c.prototype.add=function(e){var t=this._a00+e._a00,r=t>>>16;r+=this._a16+e._a16;var n=r>>>16;n+=this._a32+e._a32;var i=n>>>16;return i+=this._a48+e._a48,this._a00=65535&t,this._a16=65535&r,this._a32=65535&n,this._a48=65535&i,this},c.prototype.subtract=function(e){return this.add(e.clone().negate())},c.prototype.multiply=function(e){var t=this._a00,r=this._a16,n=this._a32,i=this._a48,a=e._a00,o=e._a16,c=e._a32,s=e._a48,u=t*a,f=u>>>16;f+=t*o;var l=f>>>16;f&=65535,f+=r*a,l+=f>>>16,l+=t*c;var d=l>>>16;return l&=65535,l+=r*o,d+=l>>>16,l&=65535,l+=n*a,d+=l>>>16,d+=t*s,d&=65535,d+=r*c,d&=65535,d+=n*o,d&=65535,d+=i*a,this._a00=65535&u,this._a16=65535&f,this._a32=65535&l,this._a48=65535&d,this},c.prototype.div=function(e){if(0==e._a16&&0==e._a32&&0==e._a48){if(0==e._a00)throw Error("division by zero");if(1==e._a00)return this.remainder=new c(0),this}if(e.gt(this))return this.remainder=this.clone(),this._a00=0,this._a16=0,this._a32=0,this._a48=0,this;if(this.eq(e))return this.remainder=new c(0),this._a00=1,this._a16=0,this._a32=0,this._a48=0,this;var t=e.clone(),r=-1;while(!this.lt(t))t.shiftLeft(1,!0),r++;for(this.remainder=this.clone(),this._a00=0,this._a16=0,this._a32=0,this._a48=0;r>=0;r--)t.shiftRight(1),this.remainder.lt(t)||(this.remainder.subtract(t),r>=48?this._a48|=1<<r-48:r>=32?this._a32|=1<<r-32:r>=16?this._a16|=1<<r-16:this._a00|=1<<r);return this},c.prototype.negate=function(){var e=1+(65535&~this._a00);return this._a00=65535&e,e=(65535&~this._a16)+(e>>>16),this._a16=65535&e,e=(65535&~this._a32)+(e>>>16),this._a32=65535&e,this._a48=~this._a48+(e>>>16)&65535,this},c.prototype.equals=c.prototype.eq=function(e){return this._a48==e._a48&&this._a00==e._a00&&this._a32==e._a32&&this._a16==e._a16},c.prototype.greaterThan=c.prototype.gt=function(e){return this._a48>e._a48||!(this._a48<e._a48)&&(this._a32>e._a32||!(this._a32<e._a32)&&(this._a16>e._a16||!(this._a16<e._a16)&&this._a00>e._a00))},c.prototype.lessThan=c.prototype.lt=function(e){return this._a48<e._a48||!(this._a48>e._a48)&&(this._a32<e._a32||!(this._a32>e._a32)&&(this._a16<e._a16||!(this._a16>e._a16)&&this._a00<e._a00))},c.prototype.or=function(e){return this._a00|=e._a00,this._a16|=e._a16,this._a32|=e._a32,this._a48|=e._a48,this},c.prototype.and=function(e){return this._a00&=e._a00,this._a16&=e._a16,this._a32&=e._a32,this._a48&=e._a48,this},c.prototype.xor=function(e){return this._a00^=e._a00,this._a16^=e._a16,this._a32^=e._a32,this._a48^=e._a48,this},c.prototype.not=function(){return this._a00=65535&~this._a00,this._a16=65535&~this._a16,this._a32=65535&~this._a32,this._a48=65535&~this._a48,this},c.prototype.shiftRight=c.prototype.shiftr=function(e){return e%=64,e>=48?(this._a00=this._a48>>e-48,this._a16=0,this._a32=0,this._a48=0):e>=32?(e-=32,this._a00=65535&(this._a32>>e|this._a48<<16-e),this._a16=this._a48>>e&65535,this._a32=0,this._a48=0):e>=16?(e-=16,this._a00=65535&(this._a16>>e|this._a32<<16-e),this._a16=65535&(this._a32>>e|this._a48<<16-e),this._a32=this._a48>>e&65535,this._a48=0):(this._a00=65535&(this._a00>>e|this._a16<<16-e),this._a16=65535&(this._a16>>e|this._a32<<16-e),this._a32=65535&(this._a32>>e|this._a48<<16-e),this._a48=this._a48>>e&65535),this},c.prototype.shiftLeft=c.prototype.shiftl=function(e,t){return e%=64,e>=48?(this._a48=this._a00<<e-48,this._a32=0,this._a16=0,this._a00=0):e>=32?(e-=32,this._a48=this._a16<<e|this._a00>>16-e,this._a32=this._a00<<e&65535,this._a16=0,this._a00=0):e>=16?(e-=16,this._a48=this._a32<<e|this._a16>>16-e,this._a32=65535&(this._a16<<e|this._a00>>16-e),this._a16=this._a00<<e&65535,this._a00=0):(this._a48=this._a48<<e|this._a32>>16-e,this._a32=65535&(this._a32<<e|this._a16>>16-e),this._a16=65535&(this._a16<<e|this._a00>>16-e),this._a00=this._a00<<e&65535),t||(this._a48&=65535),this},c.prototype.rotateLeft=c.prototype.rotl=function(e){if(e%=64,0==e)return this;if(e>=32){var t=this._a00;if(this._a00=this._a32,this._a32=t,t=this._a48,this._a48=this._a16,this._a16=t,32==e)return this;e-=32}var r=this._a48<<16|this._a32,n=this._a16<<16|this._a00,i=r<<e|n>>>32-e,a=n<<e|r>>>32-e;return this._a00=65535&a,this._a16=a>>>16,this._a32=65535&i,this._a48=i>>>16,this},c.prototype.rotateRight=c.prototype.rotr=function(e){if(e%=64,0==e)return this;if(e>=32){var t=this._a00;if(this._a00=this._a32,this._a32=t,t=this._a48,this._a48=this._a16,this._a16=t,32==e)return this;e-=32}var r=this._a48<<16|this._a32,n=this._a16<<16|this._a00,i=r>>>e|n<<32-e,a=n>>>e|r<<32-e;return this._a00=65535&a,this._a16=a>>>16,this._a32=65535&i,this._a48=i>>>16,this},c.prototype.clone=function(){return new c(this._a00,this._a16,this._a32,this._a48)},n=[],i=function(){return c}.apply(t,n),void 0===i||(e.exports=i)})()},fdc3:function(e,t,r){const n=r("e57b");n.async=r("c486"),e.exports=n},fe84:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={assert:!0,assertReturn:!0,detectPackage:!0,extractTime:!0,logger:!0,memoize:!0,promisify:!0};Object.defineProperty(t,"assert",{enumerable:!0,get:function(){return i.assert}}),Object.defineProperty(t,"assertReturn",{enumerable:!0,get:function(){return i.assertReturn}}),Object.defineProperty(t,"detectPackage",{enumerable:!0,get:function(){return a.detectPackage}}),Object.defineProperty(t,"extractTime",{enumerable:!0,get:function(){return o.extractTime}}),Object.defineProperty(t,"logger",{enumerable:!0,get:function(){return c.logger}}),Object.defineProperty(t,"memoize",{enumerable:!0,get:function(){return s.memoize}}),Object.defineProperty(t,"promisify",{enumerable:!0,get:function(){return u.promisify}});var i=r("5d81"),a=r("c73f"),o=r("8c7c"),c=r("1861"),s=r("0f73"),u=r("ef64"),f=r("47ffc");Object.keys(f).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===f[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return f[e]}}))}));var l=r("3d11");Object.keys(l).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===l[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return l[e]}}))}));var d=r("c9f3");Object.keys(d).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===d[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return d[e]}}))}));var h=r("955e");Object.keys(h).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===h[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return h[e]}}))}));var b=r("b69d");Object.keys(b).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===b[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return b[e]}}))}));var p=r("a0f1");Object.keys(p).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===p[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return p[e]}}))}));var y=r("5ff4");Object.keys(y).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===y[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return y[e]}}))}));var v=r("1b09");Object.keys(v).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===v[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return v[e]}}))}));var m=r("08b4");Object.keys(m).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===m[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return m[e]}}))}));var w=r("4507");Object.keys(w).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===w[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return w[e]}}))}))}}]);